// File generated by the K Framework Go backend. Timestamp: 2019-07-15 11:22:48.984

package ieletestinginterpreter

import (
	blockchain "github.com/ElrondNetwork/elrond-vm/iele/original/node/hookadapter/blockchain"
	m "github.com/ElrondNetwork/elrond-vm/iele/original/node/iele-testing-kompiled/ieletestingmodel"
	krypto "github.com/ElrondNetwork/elrond-vm/iele/original/node/hookadapter/krypto"
)

// Interpreter is a container with a reference to model and basic options
type Interpreter struct {
	Model         *m.ModelState
	currentStep   int
	MaxSteps      int
	state         m.KReference
	traceHandlers []traceHandler
	Verbose       bool

	blockchainRef *blockchain.Blockchain
	kryptoRef *krypto.Krypto
}
// NewInterpreter creates a new interpreter instance
func NewInterpreter(blockchainRef *blockchain.Blockchain, kryptoRef *krypto.Krypto) *Interpreter {

	return &Interpreter {
		Model:         m.NewModel(),
		MaxSteps:      0,
		currentStep:   -1, // meaning that no processing started yet
		state:         m.NullReference,
		traceHandlers: nil,
		Verbose:       false,
		blockchainRef: blockchainRef,
		kryptoRef: kryptoRef,
	}
}
