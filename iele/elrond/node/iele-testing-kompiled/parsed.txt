module ARRAY [org.kframework.attributes.Location(Location(86,1,90,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports ARRAY-CONCRETE
  imports ARRAY$SYNTAX
endmodule


module ARRAY$SYNTAX [org.kframework.attributes.Location(Location(86,1,90,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports ARRAY-CONCRETE$SYNTAX
endmodule


module ARRAY-CONCRETE [concrete() kast() org.kframework.attributes.Location(Location(40,1,48,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports LIST
  imports ARRAY-SYNTAX
  imports ARRAY-CONCRETE$SYNTAX
endmodule


module ARRAY-CONCRETE$SYNTAX [concrete() kast() org.kframework.attributes.Location(Location(40,1,48,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports LIST$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax Array ::= "makeEmptyArray" "(" Int ")" [function() hook(ARRAY.makeEmpty) impure() klabel(makeEmptyArray)]
  syntax Array ::= "makeArray" "(" Int "," KItem ")" [function() hook(ARRAY.make) impure() klabel(makeArrayOcaml)]
  syntax Array ::= "arrayCtor" "(" String "," Int "," KItem ")" [function() hook(ARRAY.ctor) klabel(arrayCtor) symbol()]
endmodule


module ARRAY-IN-K [org.kframework.attributes.Location(Location(58,1,84,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports LIST
  imports K-EQUAL
  imports INT
  imports ARRAY-SYNTAX
  imports ARRAY-IN-K$SYNTAX
  rule updateArray(arr(#SemanticCastToList(L),#SemanticCastToInt(I),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX),#SemanticCastToList(L2))=>arr(updateList(ensureOffsetList(#SemanticCastToList(L),`_-Int__INT-COMMON`(`_+Int_`(#SemanticCastToInt(IDX),sizeList(#SemanticCastToList(L2))),#token("1","Int")),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX),#SemanticCastToList(L2)),#SemanticCastToInt(I),#SemanticCastToKItem(D)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(79) org.kframework.attributes.Location(Location(79,8,79,155)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule makeArray(#SemanticCastToInt(I),#SemanticCastToKItem(D))=>arr(`.List`(.KList),#SemanticCastToInt(I),#SemanticCastToKItem(D)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(68) org.kframework.attributes.Location(Location(68,8,68,55)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule fillArray(arr(#SemanticCastToList(L),#SemanticCastToInt(I),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN),#SemanticCastToKItem(VAL))=>arr(fillList(ensureOffsetList(#SemanticCastToList(L),`_-Int__INT-COMMON`(`_+Int_`(#SemanticCastToInt(IDX),#SemanticCastToInt(LEN)),#token("1","Int")),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN),#SemanticCastToKItem(VAL)),#SemanticCastToInt(I),#SemanticCastToKItem(D)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(81) org.kframework.attributes.Location(Location(81,8,81,164)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule ensureOffsetList(#SemanticCastToList(L),#SemanticCastToInt(IDX),#SemanticCastToKItem(D))=>`#if_#then_#else_#fi_K-EQUAL`(`_>=Int__INT-COMMON`(#SemanticCastToInt(IDX),sizeList(#SemanticCastToList(L))),updateList(makeList(`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int")),#SemanticCastToKItem(D)),#token("0","Int"),#SemanticCastToList(L)),#SemanticCastToList(L)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(73) org.kframework.attributes.Location(Location(73,8,73,138)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_in_keys(_)_ARRAY-SYNTAX`(#SemanticCastToInt(IDX),arr(#SemanticCastToList(_),#SemanticCastToInt(I),#SemanticCastToKItem(_)))=>`_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(IDX),#token("0","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(IDX),#SemanticCastToInt(I))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(83) org.kframework.attributes.Location(Location(83,8,83,77)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_[_]_ARRAY-SYNTAX`(arr(#SemanticCastToList(L),#SemanticCastToInt(_),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX))=>`#if_#then_#else_#fi_K-EQUAL`(`_>=Int__INT-COMMON`(#SemanticCastToInt(IDX),sizeList(#SemanticCastToList(L))),#SemanticCastToKItem(D),`List:get`(#SemanticCastToList(L),#SemanticCastToInt(IDX))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(70) org.kframework.attributes.Location(Location(70,8,70,96)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_[_<-undef]_ARRAY-SYNTAX`(arr(#SemanticCastToList(L),#SemanticCastToInt(I),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX))=>`_[_<-_]`(arr(#SemanticCastToList(L),#SemanticCastToInt(I),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX),#SemanticCastToKItem(D)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(77) org.kframework.attributes.Location(Location(77,8,77,89)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_[_<-_]`(arr(#SemanticCastToList(L),#SemanticCastToInt(I),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX),#SemanticCastToKItem(VAL))=>arr(`List:set`(ensureOffsetList(#SemanticCastToList(L),#SemanticCastToInt(IDX),#SemanticCastToKItem(D)),#SemanticCastToInt(IDX),#SemanticCastToKItem(VAL)),#SemanticCastToInt(I),#SemanticCastToKItem(D)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(75) org.kframework.attributes.Location(Location(75,8,75,122)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module ARRAY-IN-K$SYNTAX [org.kframework.attributes.Location(Location(58,1,84,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax List ::= "ensureOffsetList" "(" List "," Int "," KItem ")" [function() klabel(ensureOffsetList)]
  syntax Array ::= "makeArray" "(" Int "," KItem ")" [function() hook(ARRAY.make) klabel(makeArray)]
  syntax Array ::= "arr" "(" List "," Int "," KItem ")" [klabel(arr)]
endmodule


module ARRAY-SYNTAX [org.kframework.attributes.Location(Location(24,1,38,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports LIST
  imports ARRAY-SYNTAX$SYNTAX
  ModuleComment( Sets a range of indices (given by an index into the array and the number
   of indices to set) to the same value. ,[org.kframework.attributes.Location(Location(33,3,34,43)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module ARRAY-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(24,1,38,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports LIST$SYNTAX
  syntax KItem ::= Array "[" Int "]" [function() hook(ARRAY.lookup)]
  syntax Bool ::= Int "in_keys" "(" Array ")" [function() functional() hook(ARRAY.in_keys)]
  syntax Array [element(_[_<-_]) hook(ARRAY.Array) org.kframework.attributes.Location(Location(27,3,27,69)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) unit(arrayCtor)]
  syntax Array ::= Array "[" Int "<-" KItem "]" [function() hook(ARRAY.update) klabel(_[_<-_]) symbol()]
  syntax Array ::= Array "[" Int "<-" "undef" "]" [function() hook(ARRAY.remove)]
  syntax Array ::= "updateArray" "(" Array "," Int "," List ")" [function() hook(ARRAY.updateAll) klabel(updateArray)]
  syntax Array ::= "fillArray" "(" Array "," Int "," Int "," KItem ")" [function() hook(ARRAY.fill) klabel(fillArray)]
endmodule


module AUTO-CASTS [org.kframework.attributes.Location(Location(170,1,178,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports AUTO-CASTS$SYNTAX
  ModuleComment( this is part of the mechanism that allows concrete user syntax in K,[org.kframework.attributes.Location(Location(177,3,177,73)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(171,3,171,58)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( generates, for all sorts, productions of the form:,[org.kframework.attributes.Location(Location(172,3,172,56)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort ":Sort",[org.kframework.attributes.Location(Location(174,3,174,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort "::Sort",[org.kframework.attributes.Location(Location(173,3,173,29)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Sort  ::= K    ":>Sort",[org.kframework.attributes.Location(Location(176,3,176,29)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( KBott ::= Sort "<:Sort",[org.kframework.attributes.Location(Location(175,3,175,29)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module AUTO-CASTS$SYNTAX [org.kframework.attributes.Location(Location(170,1,178,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
endmodule


module AUTO-FOLLOW [org.kframework.attributes.Location(Location(180,1,191,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports AUTO-FOLLOW$SYNTAX
  ModuleComment( syntax K ::= K K,[org.kframework.attributes.Location(Location(187,3,187,22)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "b",[org.kframework.attributes.Location(Location(185,3,185,22)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "ab",[org.kframework.attributes.Location(Location(186,3,186,23)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "a",[org.kframework.attributes.Location(Location(184,3,184,22)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( of another terminal. This is useful to prevent ambiguities such as:,[org.kframework.attributes.Location(Location(183,3,183,73)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(181,3,181,58)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( generates a follow restriction for every terminal which is a prefix,[org.kframework.attributes.Location(Location(182,3,182,73)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( because it would turn the terminal into the terminal "ab".,[org.kframework.attributes.Location(Location(190,3,190,64)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( In the above example, the terminal "a" is not allowed to be followed by a "b",[org.kframework.attributes.Location(Location(189,3,189,83)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( #parse("ab", "K"),[org.kframework.attributes.Location(Location(188,3,188,23)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module AUTO-FOLLOW$SYNTAX [org.kframework.attributes.Location(Location(180,1,191,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
endmodule


module BASIC-K [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module BASIC-K$SYNTAX [org.kframework.attributes.Location(Location(8,1,13,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  syntax KItem [hook(K.KItem) org.kframework.attributes.Location(Location(10,3,10,30)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  syntax KConfigVar [org.kframework.attributes.Location(Location(12,3,12,27)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k)) token()]
  syntax K ::= KItem
endmodule


module BOOL [org.kframework.attributes.Location(Location(311,1,360,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports BOOL-SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K
  rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(325) org.kframework.attributes.Location(Location(325,8,325,29)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(326) org.kframework.attributes.Location(Location(326,8,326,29)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(338) org.kframework.attributes.Location(Location(338,8,338,38)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))=>`notBool_`(`_==Bool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(341) org.kframework.attributes.Location(Location(341,8,341,57)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(339) org.kframework.attributes.Location(Location(339,8,339,38)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_xorBool__BOOL`(#SemanticCastToBool(B),#SemanticCastToBool(B))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(340) org.kframework.attributes.Location(Location(340,8,340,38)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(348) org.kframework.attributes.Location(Location(348,8,348,33)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(350) org.kframework.attributes.Location(Location(350,8,350,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(349) org.kframework.attributes.Location(Location(349,8,349,33)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orElseBool__BOOL`(#SemanticCastToBool(K),#token("false","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(351) org.kframework.attributes.Location(Location(351,8,351,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(343) org.kframework.attributes.Location(Location(343,8,343,34)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(345) org.kframework.attributes.Location(Location(345,8,345,32)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(344) org.kframework.attributes.Location(Location(344,8,344,34)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_orBool__BOOL`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(346) org.kframework.attributes.Location(Location(346,8,346,32)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(353) org.kframework.attributes.Location(Location(353,8,353,36)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(354) org.kframework.attributes.Location(Location(354,8,354,40)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(355) org.kframework.attributes.Location(Location(355,8,355,39)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_impliesBool__BOOL`(#SemanticCastToBool(B),#token("false","Bool"))=>`notBool_`(#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(356) org.kframework.attributes.Location(Location(356,8,356,45)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#token("true","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(333) org.kframework.attributes.Location(Location(333,8,333,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(335) org.kframework.attributes.Location(Location(335,8,335,36)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(336) org.kframework.attributes.Location(Location(336,8,336,36)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andThenBool__BOOL`(#SemanticCastToBool(K),#token("true","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(334) org.kframework.attributes.Location(Location(334,8,334,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(328) org.kframework.attributes.Location(Location(328,8,328,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(330) org.kframework.attributes.Location(Location(330,8,330,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(331) org.kframework.attributes.Location(Location(331,8,331,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_andBool_`(#SemanticCastToBool(B),#token("true","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(329) org.kframework.attributes.Location(Location(329,8,329,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=Bool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))=>`notBool_`(`_==Bool__BOOL`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(358) org.kframework.attributes.Location(Location(358,8,358,57)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module BOOL$SYNTAX [org.kframework.attributes.Location(Location(311,1,360,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority notBool_ > _andThenBool__BOOL _impliesBool__BOOL _andBool_ _orElseBool__BOOL _orBool__BOOL _xorBool__BOOL > _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _xorBool__BOOL
  syntax associativity left _orElseBool__BOOL
  syntax associativity left _orBool__BOOL
  syntax associativity left _impliesBool__BOOL
  syntax associativity left _andThenBool__BOOL
  syntax associativity left _andBool_
  syntax associativity left _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _==Bool__BOOL
  syntax associativity left _=/=Bool__BOOL
  syntax Bool ::= Bool "xorBool" Bool [boolOperation() function() functional() hook(BOOL.xor) left() smt-hook(xor)]
  syntax Bool ::= Bool "orElseBool" Bool [boolOperation() function() functional() hook(BOOL.orElse) left() smt-hook(or)]
  syntax Bool ::= Bool "orBool" Bool [boolOperation() function() functional() hook(BOOL.or) latex({#1}\vee_{\scriptstyle\it Bool}{#2}) left() smt-hook(or)]
  syntax Bool ::= Bool "impliesBool" Bool [boolOperation() function() functional() hook(BOOL.implies) left() smt-hook(=>)]
  syntax Bool ::= Bool "andThenBool" Bool [boolOperation() function() functional() hook(BOOL.andThen) left() smt-hook(and)]
  syntax Bool ::= Bool "andBool" Bool [boolOperation() function() functional() hook(BOOL.and) klabel(_andBool_) latex({#1}\wedge_{\scriptstyle\it Bool}{#2}) left() smt-hook(and) symbol()]
  syntax Bool ::= Bool "==Bool" Bool [function() functional() hook(BOOL.eq) left() smt-hook(=)]
  syntax Bool ::= Bool "=/=Bool" Bool [function() functional() hook(BOOL.ne) left() smt-hook(distinct)]
  syntax Bool ::= "notBool" Bool [boolOperation() function() functional() hook(BOOL.not) klabel(notBool_) latex(\neg_{\scriptstyle\it Bool}{#1}) smt-hook(not) symbol()]
endmodule


module BOOL-SYNTAX [org.kframework.attributes.Location(Location(305,1,309,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
endmodule


module BOOL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(305,1,309,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Bool [hook(BOOL.Bool) org.kframework.attributes.Location(Location(306,3,306,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Bool ::= "true" [token()]
  syntax Bool ::= "false" [token()]
endmodule


module BUILTIN-ID-TOKENS [org.kframework.attributes.Location(Location(20,1,23,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
endmodule


module BUILTIN-ID-TOKENS$SYNTAX [org.kframework.attributes.Location(Location(20,1,23,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*" [prec(2) token()]
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*" [prec(2) token()]
endmodule


module BYTES [org.kframework.attributes.Location(Location(753,1,766,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports INT
  imports BYTES-HOOKED
  imports BYTES$SYNTAX
  rule `Int2BytesNoLen`(#token("0","Int"),#SemanticCastToEndianness(_),#SemanticCastToSignedness(_))=>`.Bytes_BYTES-HOOKED`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(760) org.kframework.attributes.Location(Location(760,8,760,48)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Int2BytesNoLen`(#token("-1","Int"),#SemanticCastToEndianness(E),signedBytes(.KList))=>`Int2Bytes`(#token("1","Int"),#token("-1","Int"),#SemanticCastToEndianness(E)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(765) org.kframework.attributes.Location(Location(765,8,765,67)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Int2BytesNoLen`(#SemanticCastToInt(I),#SemanticCastToEndianness(E),unsignedBytes(.KList))=>`Int2Bytes`(`_/Int__INT-COMMON`(`_+Int_`(log2Int(#SemanticCastToInt(I)),#token("8","Int")),#token("8","Int")),#SemanticCastToInt(I),#SemanticCastToEndianness(E)) requires `_>Int__INT-COMMON`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(758) org.kframework.attributes.Location(Location(758,8,759,22)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Int2BytesNoLen`(#SemanticCastToInt(I),#SemanticCastToEndianness(E),signedBytes(.KList))=>`Int2Bytes`(`_/Int__INT-COMMON`(`_+Int_`(log2Int(`~Int__INT-COMMON`(#SemanticCastToInt(I))),#token("9","Int")),#token("8","Int")),#SemanticCastToInt(I),#SemanticCastToEndianness(E)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(I),#token("-1","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(763) org.kframework.attributes.Location(Location(763,8,764,23)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Int2BytesNoLen`(#SemanticCastToInt(I),#SemanticCastToEndianness(E),signedBytes(.KList))=>`Int2Bytes`(`_/Int__INT-COMMON`(`_+Int_`(log2Int(#SemanticCastToInt(I)),#token("9","Int")),#token("8","Int")),#SemanticCastToInt(I),#SemanticCastToEndianness(E)) requires `_>Int__INT-COMMON`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(761) org.kframework.attributes.Location(Location(761,8,762,22)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
endmodule


module BYTES$SYNTAX [org.kframework.attributes.Location(Location(753,1,766,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports INT$SYNTAX
  imports BYTES-HOOKED$SYNTAX
endmodule


module BYTES-HOOKED [concrete() org.kframework.attributes.Location(Location(654,1,677,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports BYTES-HOOKED$SYNTAX
endmodule


module BYTES-HOOKED$SYNTAX [concrete() org.kframework.attributes.Location(Location(654,1,677,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax associativity right _+Bytes__BYTES-HOOKED
  syntax String ::= "Bytes2String" "(" Bytes ")" [function() functional() hook(BYTES.bytes2string) klabel(Bytes2String)]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes) symbol()]
  syntax Signedness ::= "Signed" [klabel(signedBytes) symbol()]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function() functional() hook(BYTES.length) klabel(lengthBytes) smtlib(lengthBytes)]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function() functional() hook(BYTES.bytes2int) klabel(Bytes2Int)]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes) symbol()]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes) symbol()]
  syntax Bytes [hook(BYTES.Bytes) org.kframework.attributes.Location(Location(655,3,655,34)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Bytes ::= Bytes "+Bytes" Bytes [function() functional() hook(BYTES.concat) right()]
  syntax Bytes ::= "substrBytes" "(" Bytes "," Int "," Int ")" [function() hook(BYTES.substr) klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function() functional() hook(BYTES.reverse) klabel(reverseBytes)]
  syntax Bytes ::= "replaceAtBytes" "(" Bytes "," Int "," Bytes ")" [function() hook(BYTES.replaceAt) klabel(replaceAtBytes)]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," Int "," Int ")" [function() hook(BYTES.padRight) klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," Int "," Int ")" [function() hook(BYTES.padLeft) klabel(padLeftBytes)]
  syntax Bytes ::= "String2Bytes" "(" String ")" [function() functional() hook(BYTES.string2bytes) klabel(String2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Int "," Endianness ")" [function() functional() hook(BYTES.int2bytes) klabel(Int2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function() functional() klabel(Int2BytesNoLen)]
  syntax Bytes ::= ".Bytes" [function() functional() hook(BYTES.empty) impure()]
endmodule


module COLLECTIONS [org.kframework.attributes.Location(Location(295,1,303,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports SET
  imports MAP
  imports LIST
  imports COLLECTIONS$SYNTAX
endmodule


module COLLECTIONS$SYNTAX [org.kframework.attributes.Location(Location(295,1,303,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  syntax Set ::= "List2Set" "(" List ")" [function() functional() hook(SET.list2set) klabel(List2Set)]
  syntax List ::= "Set2List" "(" Set ")" [function() hook(SET.set2list) klabel(Set2List)]
endmodule


module CONFIG-CELLS [org.kframework.attributes.Location(Location(125,1,139,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RULE-LISTS
  imports KCELLS
  imports CONFIG-CELLS$SYNTAX
endmodule


module CONFIG-CELLS$SYNTAX [org.kframework.attributes.Location(Location(125,1,139,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">" [klabel(#configCell) symbol()]
  syntax Cell ::= "<" #CellName "/>" [klabel(#externalCell) symbol()]
  syntax #CellProperty ::= #CellName "=" KString [klabel(#cellProperty) symbol()]
  syntax #CellProperties ::= #CellProperty #CellProperties [klabel(#cellPropertyList) symbol()]
  syntax #CellProperties ::= "" [klabel(#cellPropertyListTerminator) symbol()]
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*" [prec(1) token()]
  syntax #CellName ::= #UpperId [token()]
  syntax #CellName ::= #LowerId [token()]
endmodule


module CONFIGURATION-PRIMITIVES [org.kframework.attributes.Location(Location(1365,1,1367,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports CONFIGURATION-PRIMITIVES$SYNTAX
endmodule


module CONFIGURATION-PRIMITIVES$SYNTAX [org.kframework.attributes.Location(Location(1365,1,1367,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax K ::= "#RESTORE_CONFIGURATION" "(" K ")" [klabel(#RESTORE_CONFIGURATION)]
endmodule


module DEFAULT-CONFIGURATION [org.kframework.attributes.Location(Location(220,1,224,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports MAP
  imports DEFAULT-CONFIGURATION$SYNTAX
  imports BASIC-K
  syntax Cell ::= KCell
  rule initKCell(Init)=>`<k>`(#noDots(.KList),#SemanticCastToK(`Map:lookup`(Init,#token("$PGM","KConfigVar"))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  Bubble(config,<k> $PGM:K </k>,[contentStartColumn(17) contentStartLine(223) org.kframework.attributes.Location(Location(223,3,223,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module DEFAULT-CONFIGURATION$SYNTAX [org.kframework.attributes.Location(Location(220,1,224,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports MAP$SYNTAX
  imports BASIC-K$SYNTAX
  syntax KCell ::= "initKCell" "(" Map ")" [function() initializer() noThread()]
  syntax KCell ::= "<k>" K "</k>" [cell() cellName(k) contentStartColumn(17) contentStartLine(223) format(%1%i%n%2%d%n%3) maincell() org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  Bubble(config,<k> $PGM:K </k>,[contentStartColumn(17) contentStartLine(223) org.kframework.attributes.Location(Location(223,3,223,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module DEFAULT-LAYOUT [org.kframework.attributes.Location(Location(214,1,218,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports DEFAULT-LAYOUT$SYNTAX
endmodule


module DEFAULT-LAYOUT$SYNTAX [org.kframework.attributes.Location(Location(214,1,218,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  syntax #Layout ::= r"(\\/\\/[^\\n\\r]*)"
  syntax #Layout ::= r"(\\/\\*([^\\*]|(\\*+([^\\*\\/])))*\\*+\\/)"
  syntax #Layout ::= r"([\\ \\n\\r\\t])"
endmodule


module DEFAULT-STRATEGY [org.kframework.attributes.Location(Location(1399,1,1405,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRATEGY$SYNTAX
  imports DEFAULT-STRATEGY-CONCRETE
  imports DEFAULT-STRATEGY$SYNTAX
  rule initSCell(#SemanticCastToMap(_))=>`<s>`(#noDots(.KList),#applyRule(#token("regular","#RuleTag")),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1404) org.kframework.attributes.Location(Location(1404,10,1404,44)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module DEFAULT-STRATEGY$SYNTAX [org.kframework.attributes.Location(Location(1399,1,1405,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRATEGY$SYNTAX
  imports DEFAULT-STRATEGY-CONCRETE$SYNTAX
endmodule


module DEFAULT-STRATEGY-CONCRETE [concrete() org.kframework.attributes.Location(Location(1387,1,1391,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRATEGY$SYNTAX
  imports RULE-TAG-SYNTAX
  imports DEFAULT-STRATEGY-CONCRETE$SYNTAX
  rule #appliedRule(#token("regular","#RuleTag"))=>#applyRule(#token("regular","#RuleTag")) requires #token("true","Bool") ensures #token("true","Bool") [anywhere() contentStartColumn(10) contentStartLine(1390) org.kframework.attributes.Location(Location(1390,10,1390,32)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module DEFAULT-STRATEGY-CONCRETE$SYNTAX [concrete() org.kframework.attributes.Location(Location(1387,1,1391,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRATEGY$SYNTAX
  imports RULE-TAG-SYNTAX$SYNTAX
endmodule


module DOMAINS [org.kframework.attributes.Location(Location(11,1,22,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING
  imports SET
  imports MAP
  imports LIST
  imports K-REFLECTION
  imports K-IO
  imports INT
  imports DOMAINS-SYNTAX
  imports DOMAINS$SYNTAX
  imports BOOL
  imports BASIC-K
endmodule


module DOMAINS$SYNTAX [org.kframework.attributes.Location(Location(11,1,22,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  imports K-REFLECTION$SYNTAX
  imports K-IO$SYNTAX
  imports INT$SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module DOMAINS-SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports STRING-SYNTAX
  imports ID
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL-SYNTAX
endmodule


module DOMAINS-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  imports STRING-SYNTAX$SYNTAX
  imports ID$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
endmodule


module FLOAT$SYNTAX [org.kframework.attributes.Location(Location(468,1,532,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority --Float__FLOAT > _^Float__FLOAT > _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT > _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _^Float__FLOAT
  syntax associativity left _>Float__FLOAT
  syntax associativity left _>=Float__FLOAT
  syntax associativity left _==Float_
  syntax associativity left _=/=Float__FLOAT
  syntax associativity left _<Float__FLOAT
  syntax associativity left _<=Float__FLOAT
  syntax associativity left _/Float__FLOAT
  syntax associativity left _-Float__FLOAT
  syntax associativity left _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _+Float__FLOAT
  syntax associativity left _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT
  syntax associativity left _*Float__FLOAT
  syntax associativity left _%Float__FLOAT
  syntax MInt ::= "significandFloat" "(" Float ")" [function() hook(FLOAT.significand) klabel(significandFloat)]
  syntax Int ::= "precisionFloat" "(" Float ")" [function() functional() hook(FLOAT.precision) klabel(precisionFloat)]
  syntax Int ::= "exponentFloat" "(" Float ")" [function() functional() hook(FLOAT.exponent) klabel(exponentFloat)]
  syntax Int ::= "exponentBitsFloat" "(" Float ")" [function() functional() hook(FLOAT.exponentBits) klabel(exponentBitsFloat)]
  syntax Int ::= "Float2Int" "(" Float ")" [function() functional() hook(FLOAT.float2int) klabel(Float2Int) latex({\\it{}Float2Int})]
  syntax Float ::= Float "^Float" Float [function() hook(FLOAT.pow) latex({#1}^{#2}) left()]
  syntax Float ::= Float "/Float" Float [function() hook(FLOAT.div) latex({#1}\mathrel{\div_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.div roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "-Float" Float [function() hook(FLOAT.sub) latex({#1}\mathrel{-_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.sub roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "+Float" Float [function() hook(FLOAT.add) latex({#1}\mathrel{+_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.add roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "*Float" Float [function() hook(FLOAT.mul) latex({#1}\mathrel{\ast_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.mul roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "%Float" Float [function() hook(FLOAT.rem) latex({#1}\mathrel{\%_{\scriptstyle\it Float}}{#2}) left() smt-hook((fp.rem roundNearestTiesToEven #1 #2))]
  syntax Float ::= "tanFloat" "(" Float ")" [function() hook(FLOAT.tan) klabel(tanFloat)]
  syntax Float ::= "sqrtFloat" "(" Float ")" [function() klabel(sqrtFloat)]
  syntax Float ::= "sinFloat" "(" Float ")" [function() functional() hook(FLOAT.sin) klabel(sinFloat)]
  syntax Float ::= "roundFloat" "(" Float "," Int "," Int ")" [function() hook(FLOAT.round) klabel(roundFloat)]
  syntax Float ::= "rootFloat" "(" Float "," Int ")" [function() hook(FLOAT.root) klabel(rootFloat)]
  syntax Float ::= "minValueFloat" "(" Int "," Int ")" [function() hook(FLOAT.minValue) klabel(minValueFloat)]
  syntax Float ::= "minFloat" "(" Float "," Float ")" [function() hook(FLOAT.min) klabel(minFloat) smt-hook(fp.min)]
  syntax Float ::= "maxValueFloat" "(" Int "," Int ")" [function() hook(FLOAT.maxValue) klabel(maxValueFloat)]
  syntax Float ::= "maxFloat" "(" Float "," Float ")" [function() hook(FLOAT.max) klabel(maxFloat) smt-hook(fp.max)]
  syntax Float ::= "logFloat" "(" Float ")" [function() hook(FLOAT.log) klabel(logFloat)]
  syntax Float ::= "floorFloat" "(" Float ")" [function() functional() hook(FLOAT.floor) klabel(floorFloat)]
  syntax Float ::= "expFloat" "(" Float ")" [function() functional() hook(FLOAT.exp) klabel(expFloat)]
  syntax Float ::= "cosFloat" "(" Float ")" [function() functional() hook(FLOAT.cos) klabel(cosFloat)]
  syntax Float ::= "ceilFloat" "(" Float ")" [function() functional() hook(FLOAT.ceil) klabel(ceilFloat)]
  syntax Float ::= "atanFloat" "(" Float ")" [function() functional() hook(FLOAT.atan) klabel(atanFloat)]
  syntax Float ::= "atan2Float" "(" Float "," Float ")" [function() hook(FLOAT.atan2) klabel(atan2Float)]
  syntax Float ::= "asinFloat" "(" Float ")" [function() hook(FLOAT.asin) klabel(asinFloat)]
  syntax Float ::= "acosFloat" "(" Float ")" [function() hook(FLOAT.acos) klabel(acosFloat)]
  syntax Float ::= "absFloat" "(" Float ")" [function() functional() hook(FLOAT.abs) klabel(absFloat) smt-hook(fp.abs)]
  syntax Float ::= "Int2Float" "(" Int "," Int "," Int ")" [function() hook(FLOAT.int2float) klabel(Int2Float) latex({\\it{}Int2Float})]
  syntax Float ::= "--Float" Float [function() functional() hook(FLOAT.neg) smt-hook(fp.neg)]
  syntax Bool ::= Float ">Float" Float [function() hook(FLOAT.gt) latex({#1}\mathrel{>_{\scriptstyle\it Float}}{#2}) left() smt-hook(fg.gt)]
  syntax Bool ::= Float ">=Float" Float [function() hook(FLOAT.ge) latex({#1}\mathrel{\geq_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.geq)]
  syntax Bool ::= Float "==Float" Float [function() hook(FLOAT.eq) klabel(_==Float_) latex({#1}\mathrel{==_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.eq)]
  syntax Bool ::= Float "=/=Float" Float [function() latex({#1}\mathrel{\neq_{\scriptstyle\it Float}}{#2}) left() smt-hook((not (fp.eq #1 #2)))]
  syntax Bool ::= Float "<Float" Float [function() hook(FLOAT.lt) latex({#1}\mathrel{<_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.lt)]
  syntax Bool ::= Float "<=Float" Float [function() hook(FLOAT.le) latex({#1}\mathrel{\leq_{\scriptstyle\it Float}}{#2}) left() smt-hook(fp.leq)]
  syntax Bool ::= "signFloat" "(" Float ")" [function() functional() hook(FLOAT.sign) klabel(signFloat)]
  syntax Bool ::= "isNaN" "(" Float ")" [function() functional() hook(FLOAT.isNaN) klabel(isNaN) smt-hook(fp.isNaN)]
  syntax Bool ::= "isInfinite" "(" Float ")" [function() functional() klabel(isInfinite)]
endmodule


module FLOAT-SYNTAX [org.kframework.attributes.Location(Location(461,1,466,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports FLOAT-SYNTAX$SYNTAX
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(461,1,466,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Float [hook(FLOAT.Float) org.kframework.attributes.Location(Location(462,3,462,34)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3) token()]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1) token()]
endmodule


module ID [org.kframework.attributes.Location(Location(786,1,792,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING
  imports ID-SYNTAX
  imports ID$SYNTAX
  rule freshId(#SemanticCastToInt(I))=>`String2Id`(`_+String__STRING`(#token("\"_\"","String"),`Int2String`(#SemanticCastToInt(I)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(791) org.kframework.attributes.Location(Location(791,8,791,62)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module ID$SYNTAX [org.kframework.attributes.Location(Location(786,1,792,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports ID-SYNTAX$SYNTAX
endmodule


module ID-PROGRAM-PARSING [org.kframework.attributes.Location(Location(768,1,773,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports ID-PROGRAM-PARSING$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module ID-PROGRAM-PARSING$SYNTAX [org.kframework.attributes.Location(Location(768,1,773,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*" [autoReject() notInRules() prec(1) token()]
  syntax Id ::= #UpperId [autoReject() notInRules() token()]
  syntax Id ::= #LowerId [autoReject() notInRules() token()]
endmodule


module ID-SYNTAX [org.kframework.attributes.Location(Location(775,1,784,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports INT-SYNTAX
  imports ID-SYNTAX$SYNTAX
endmodule


module ID-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(775,1,784,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports INT-SYNTAX$SYNTAX
  syntax String ::= "Id2String" "(" Id ")" [function() functional() hook(STRING.token2string) klabel(Id2String)]
  syntax Id [org.kframework.attributes.Location(Location(779,3,779,19)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) token()]
  syntax Id ::= "freshId" "(" Int ")" [freshGenerator() function() functional() klabel(freshId)]
  syntax Id ::= "String2Id" "(" String ")" [function() functional() hook(STRING.string2token) klabel(String2Id)]
endmodule


module IELE [org.kframework.attributes.Location(Location(557,1,1557,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-PROGRAM-LOADING
  imports IELE-PRECOMPILED
  imports IELE-INFRASTRUCTURE
  imports IELE-GAS
  imports IELE$SYNTAX
  rule isIeleBuiltin(#token("iele.timestamp","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(987) org.kframework.attributes.Location(Location(987,10,987,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.sha256","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1000) org.kframework.attributes.Location(Location(1000,10,1000,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.rip160","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1001) org.kframework.attributes.Location(Location(1001,10,1001,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.origin","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(991) org.kframework.attributes.Location(Location(991,10,991,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.number","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(988) org.kframework.attributes.Location(Location(988,10,988,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.msize","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(994) org.kframework.attributes.Location(Location(994,10,994,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.invalid","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(982) org.kframework.attributes.Location(Location(982,10,982,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.id","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1002) org.kframework.attributes.Location(Location(1002,10,1002,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.gasprice","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(984) org.kframework.attributes.Location(Location(984,10,984,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.gaslimit","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(985) org.kframework.attributes.Location(Location(985,10,985,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.gas","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(983) org.kframework.attributes.Location(Location(983,10,983,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.extcodesize","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(998) org.kframework.attributes.Location(Location(998,10,998,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.ecrec","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(999) org.kframework.attributes.Location(Location(999,10,999,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.ecpairing","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1005) org.kframework.attributes.Location(Location(1005,10,1005,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.ecmul","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1004) org.kframework.attributes.Location(Location(1004,10,1004,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.ecadd","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1003) org.kframework.attributes.Location(Location(1003,10,1003,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.difficulty","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(989) org.kframework.attributes.Location(Location(989,10,989,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.codesize","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(995) org.kframework.attributes.Location(Location(995,10,995,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.callvalue","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(993) org.kframework.attributes.Location(Location(993,10,993,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.caller","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(992) org.kframework.attributes.Location(Location(992,10,992,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.blockhash","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(996) org.kframework.attributes.Location(Location(996,10,996,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.beneficiary","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(986) org.kframework.attributes.Location(Location(986,10,986,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.balance","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(997) org.kframework.attributes.Location(Location(997,10,997,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#token("iele.address","IeleName"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(990) org.kframework.attributes.Location(Location(990,10,990,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isIeleBuiltin(#SemanticCastToIeleName(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1006) org.kframework.attributes.Location(Location(1006,10,1006,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `<k>`(#noDots(.KList),`#negativeCall?[_]_IELE`(#SemanticCastToInstruction(OP))=>.K,#dots(.KList)) requires `_andBool_`(`notBool_`(isAccountCallInst(#SemanticCastToInstruction(OP))),`notBool_`(isCreateInst(#SemanticCastToInstruction(OP)))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(643) org.kframework.attributes.Location(Location(643,10,643,121)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#loads___IELE`(lvalueList(#SemanticCastToLValue(REG),#SemanticCastToLValues(REGS)),operandList(#SemanticCastToInt(VALUE),#SemanticCastToInts(VALUES)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(VALUE))~>`#loads___IELE`(#SemanticCastToLValues(REGS),#SemanticCastToInts(VALUES)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(742) org.kframework.attributes.Location(Location(742,10,742,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#loads___IELE`(lvalueList(#SemanticCastToLValue(REG),#SemanticCastToLValues(REGS)),`.List{"operandList"}`(.KList))=>`#exception__IELE-INFRASTRUCTURE`(`FUNC_WRONG_SIG_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(744) org.kframework.attributes.Location(Location(744,10,744,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#loads___IELE`(`.List{"lvalueList"}`(.KList),operandList(#SemanticCastToInt(VALUE),#SemanticCastToInts(VALUES)))=>`#exception__IELE-INFRASTRUCTURE`(`FUNC_WRONG_SIG_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(745) org.kframework.attributes.Location(Location(745,10,745,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#loads___IELE`(`.List{"lvalueList"}`(.KList),`.List{"operandList"}`(.KList))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(743) org.kframework.attributes.Location(Location(743,10,743,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#illFormed_IELE`(.KList)~>``#SemanticCastToKItem(K)=>.K``,#dots(.KList)) requires `_=/=K_`(#SemanticCastToKItem(K),`#finishTypeChecking_IELE`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1389) org.kframework.attributes.Location(Location(1389,10,1390,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`br_,__IELE-COMMON`(#token("0","Int"),#SemanticCastToIeleName(LABEL)))=>.K,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(952) org.kframework.attributes.Location(Location(952,10,952,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=xor_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_xorInt__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(854) org.kframework.attributes.Location(Location(854,10,854,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=twos_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(WIDTH),#SemanticCastToInt(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),twos(chop(#SemanticCastToInt(WIDTH)),#SemanticCastToInt(W))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(845) org.kframework.attributes.Location(Location(845,10,845,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=sub_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_-Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(826) org.kframework.attributes.Location(Location(826,10,826,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=shift_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_>>Int__INT-COMMON`(#SemanticCastToInt(W0),`_-Int__INT-COMMON`(#token("0","Int"),#SemanticCastToInt(W1)))),#dots(.KList)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(856) org.kframework.attributes.Location(Location(856,10,856,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=shift_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_<<Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(855) org.kframework.attributes.Location(Location(855,10,855,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=sext_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(WIDTH),#SemanticCastToInt(W)))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(844) org.kframework.attributes.Location(Location(844,10,844,108)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=sext_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(WIDTH),#SemanticCastToInt(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),signextend(chop(#SemanticCastToInt(WIDTH)),#SemanticCastToInt(W))),#dots(.KList)) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(843) org.kframework.attributes.Location(Location(843,10,843,109)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=or_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_|Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(853) org.kframework.attributes.Location(Location(853,10,853,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=not__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),`~Int__INT-COMMON`(#SemanticCastToInt(W))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(822) org.kframework.attributes.Location(Location(822,10,822,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=mulmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W0),#SemanticCastToOperand(W1),#token("0","Int")))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(837) org.kframework.attributes.Location(Location(837,10,837,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=mulmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_%Int__INT-COMMON`(`_*Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToInt(W2))),#dots(.KList)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(W2),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(836) org.kframework.attributes.Location(Location(836,10,836,109)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=mul_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_*Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(825) org.kframework.attributes.Location(Location(825,10,825,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=mod_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W0),#token("0","Int")))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(832) org.kframework.attributes.Location(Location(832,10,832,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=mod_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_%Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(831) org.kframework.attributes.Location(Location(831,10,831,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=log2__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),log2Int(#SemanticCastToInt(W))),#dots(.KList)) requires `_>Int__INT-COMMON`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(849) org.kframework.attributes.Location(Location(849,10,849,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=log2__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W)))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires `_<=Int__INT-COMMON`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(850) org.kframework.attributes.Location(Location(850,10,850,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=iszero__IELE-COMMON`(#SemanticCastToLValue(REG),#token("0","Int")))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("1","Int")),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(820) org.kframework.attributes.Location(Location(820,10,820,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=iszero__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)) requires `_=/=K_`(#SemanticCastToOperand(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(821) org.kframework.attributes.Location(Location(821,10,821,81)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=expmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W0),#SemanticCastToOperand(W1),#token("0","Int")))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(839) org.kframework.attributes.Location(Location(839,10,839,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=expmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)))=>`#load___IELE`(#SemanticCastToLValue(REG),powmod(#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2))),#dots(.KList)) requires `_andBool_`(`_=/=Int__INT-COMMON`(#SemanticCastToInt(W2),#token("0","Int")),`_orBool__BOOL`(`_>=Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")),`_==Int_`(gcdInt(#SemanticCastToInt(W0),#SemanticCastToInt(W2)),#token("1","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(838) org.kframework.attributes.Location(Location(838,10,838,160)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=expmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires `_andBool_`(`_<Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")),`_=/=Int__INT-COMMON`(gcdInt(#SemanticCastToInt(W0),#SemanticCastToInt(W2)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(840) org.kframework.attributes.Location(Location(840,10,840,139)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=exp_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W0),#SemanticCastToInt(W1)))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(830) org.kframework.attributes.Location(Location(830,10,830,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=exp_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_^Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(829) org.kframework.attributes.Location(Location(829,10,829,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=div_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W0),#token("0","Int")))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(828) org.kframework.attributes.Location(Location(828,10,828,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=div_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_/Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(827) org.kframework.attributes.Location(Location(827,10,827,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`ne_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("1","Int")),#dots(.KList)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(868) org.kframework.attributes.Location(Location(868,10,868,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`ne_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(869) org.kframework.attributes.Location(Location(869,10,869,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`lt_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("1","Int")),#dots(.KList)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(858) org.kframework.attributes.Location(Location(858,10,858,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`lt_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(859) org.kframework.attributes.Location(Location(859,10,859,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`le_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("1","Int")),#dots(.KList)) requires `_<=Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(860) org.kframework.attributes.Location(Location(860,10,860,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`le_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)) requires `_>Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(861) org.kframework.attributes.Location(Location(861,10,861,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`gt_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("1","Int")),#dots(.KList)) requires `_>Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(862) org.kframework.attributes.Location(Location(862,10,862,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`gt_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)) requires `_<=Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(863) org.kframework.attributes.Location(Location(863,10,863,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`ge_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("1","Int")),#dots(.KList)) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(864) org.kframework.attributes.Location(Location(864,10,864,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`ge_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(865) org.kframework.attributes.Location(Location(865,10,865,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`eq_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("1","Int")),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(866) org.kframework.attributes.Location(Location(866,10,866,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),`eq_IELE-COMMON`(.KList),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(867) org.kframework.attributes.Location(Location(867,10,867,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=byte_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(INDEX),#SemanticCastToInt(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),byte(chop(#SemanticCastToInt(INDEX)),#SemanticCastToInt(W))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(842) org.kframework.attributes.Location(Location(842,10,842,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=bswap_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(WIDTH),#SemanticCastToInt(W)))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(847) org.kframework.attributes.Location(Location(847,10,847,108)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=bswap_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(WIDTH),#SemanticCastToInt(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),bswap(chop(#SemanticCastToInt(WIDTH)),#SemanticCastToInt(W))),#dots(.KList)) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(846) org.kframework.attributes.Location(Location(846,10,846,109)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=and_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_&Int__INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(852) org.kframework.attributes.Location(Location(852,10,852,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=addmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W0),#SemanticCastToOperand(W1),#token("0","Int")))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(835) org.kframework.attributes.Location(Location(835,10,835,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=addmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_%Int__INT-COMMON`(`_+Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToInt(W2))),#dots(.KList)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(W2),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(834) org.kframework.attributes.Location(Location(834,10,834,109)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=add_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_+Int_`(#SemanticCastToInt(W0),#SemanticCastToInt(W1))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(824) org.kframework.attributes.Location(Location(824,10,824,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(W)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(730) org.kframework.attributes.Location(Location(730,10,730,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exceptional?[_]_IELE`(#SemanticCastToInstruction(OP))=>`#invalid?[_]_IELE`(#SemanticCastToInstruction(OP))~>`#static?[_]_IELE`(#SemanticCastToInstruction(OP))~>`#negativeCall?[_]_IELE`(#SemanticCastToInstruction(OP)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(605) org.kframework.attributes.Location(Location(605,10,605,107)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#exception__IELE-INFRASTRUCTURE`(#SemanticCastToInt(STATUS))~>`#finishCodeDeposit______IELE`(#SemanticCastToInt(_),#SemanticCastToContract(_),#SemanticCastToLValue(REG),#SemanticCastToLValue(_),#SemanticCastToBool(NEW))=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#popWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#popSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(NEW),#SemanticCastToInt(STATUS),#registerDelta(#SemanticCastToLValue(REG),#token("1","Int"))~>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(STATUS))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1459) org.kframework.attributes.Location(Location(1459,10,1459,209)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#call________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToConstant(FUNC),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC))=>`#callWithCode_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),`#precompiled_IELE-PRECOMPILED`(.KList),#SemanticCastToConstant(FUNC),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC)),#dots(.KList)) requires `_==Int_`(#SemanticCastToInt(ACCTTO),`#precompiledAccount_IELE-PRECOMPILED`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1182) org.kframework.attributes.Location(Location(1182,10,1186,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#invalid?[_]_IELE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.invalid","IeleName")),`.List{"operandList"}`(.KList)))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(613) org.kframework.attributes.Location(Location(613,10,613,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#invalid?[_]_IELE`(#SemanticCastToInstruction(OP))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(614) org.kframework.attributes.Location(Location(614,10,614,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `#exec__IELE-INFRASTRUCTURE`(`log__IELE-COMMON`(#SemanticCastToInt(MEMINDEX)))=>`#log___IELE`(#SemanticCastToInt(MEMINDEX),`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1043) org.kframework.attributes.Location(Location(1043,10,1043,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#exec__IELE-INFRASTRUCTURE`(`log_,__IELE-COMMON`(#SemanticCastToInt(MEMINDEX),operandList(#SemanticCastToInt(W0),operandList(#SemanticCastToInt(W1),operandList(#SemanticCastToInt(W2),operandList(#SemanticCastToInt(W3),`.List{"operandList"}`(.KList)))))))=>`#log___IELE`(#SemanticCastToInt(MEMINDEX),`_List_`(`_List_`(`_List_`(`ListItem`(chop(#SemanticCastToInt(W0))),`ListItem`(chop(#SemanticCastToInt(W1)))),`ListItem`(chop(#SemanticCastToInt(W2)))),`ListItem`(chop(#SemanticCastToInt(W3))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1047) org.kframework.attributes.Location(Location(1047,10,1047,141)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#exec__IELE-INFRASTRUCTURE`(`log_,__IELE-COMMON`(#SemanticCastToInt(MEMINDEX),operandList(#SemanticCastToInt(W0),operandList(#SemanticCastToInt(W1),operandList(#SemanticCastToInt(W2),`.List{"operandList"}`(.KList))))))=>`#log___IELE`(#SemanticCastToInt(MEMINDEX),`_List_`(`_List_`(`ListItem`(chop(#SemanticCastToInt(W0))),`ListItem`(chop(#SemanticCastToInt(W1)))),`ListItem`(chop(#SemanticCastToInt(W2))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1046) org.kframework.attributes.Location(Location(1046,10,1046,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#exec__IELE-INFRASTRUCTURE`(`log_,__IELE-COMMON`(#SemanticCastToInt(MEMINDEX),operandList(#SemanticCastToInt(W0),operandList(#SemanticCastToInt(W1),`.List{"operandList"}`(.KList)))))=>`#log___IELE`(#SemanticCastToInt(MEMINDEX),`_List_`(`ListItem`(chop(#SemanticCastToInt(W0))),`ListItem`(chop(#SemanticCastToInt(W1))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1045) org.kframework.attributes.Location(Location(1045,10,1045,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#exec__IELE-INFRASTRUCTURE`(`log_,__IELE-COMMON`(#SemanticCastToInt(MEMINDEX),operandList(#SemanticCastToInt(W0),`.List{"operandList"}`(.KList))))=>`#log___IELE`(#SemanticCastToInt(MEMINDEX),`ListItem`(chop(#SemanticCastToInt(W0)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1044) org.kframework.attributes.Location(Location(1044,10,1044,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#create_______IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(VALUE),#SemanticCastToContract(CODE),#SemanticCastToInts(ARGS))=>`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#initAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTTO))~>`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))~>`#mkCreate_______IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToContract(CODE),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1395) org.kframework.attributes.Location(Location(1395,10,1399,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#callWithCode_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),`<program>`(#dots(.KList),`<funcLabels>`(#noDots(.KList),#SemanticCastToMap(LBLS),#noDots(.KList)),#dots(.KList)),#SemanticCastToInt(IDX),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC))=>`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#exception__IELE-INFRASTRUCTURE`(`FUNC_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList)) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(IDX),#SemanticCastToMap(LBLS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1210) org.kframework.attributes.Location(Location(1210,10,1212,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#callWithCode_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),`<program>`(#dots(.KList),`<funcLabels>`(#dots(.KList),`_|->_`(#SemanticCastToInt(IDX),#SemanticCastToIeleName(FUNC)),#noDots(.KList)),#dots(.KList)) #as #SemanticCastToProgramCell(CODE),#SemanticCastToInt(IDX),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC))=>`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))~>`#mkCall_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToProgramCell(CODE),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1214) org.kframework.attributes.Location(Location(1214,10,1217,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#callWithCode_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToProgramCell(CODE),`@__IELE-COMMON`(#SemanticCastToIeleName(FUNC)),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC))=>`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))~>`#mkCall_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToProgramCell(CODE),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1205) org.kframework.attributes.Location(Location(1205,10,1208,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #subcontract(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)) #as #SemanticCastToContractDefinition(CONTRACT),#SemanticCastToContract(_)),#SemanticCastToIeleName(NAME))=>contractDefinitionList(#SemanticCastToContractDefinition(CONTRACT),`.List{"contractDefinitionList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1422) org.kframework.attributes.Location(Location(1422,10,1422,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #subcontract(contractDefinitionList(#SemanticCastToContractDefinition(CONTRACT),#SemanticCastToContract(CONTRACTS)),#SemanticCastToIeleName(NAME))=>contractDefinitionList(#SemanticCastToContractDefinition(CONTRACT),#subcontract(#SemanticCastToContract(CONTRACTS),#SemanticCastToIeleName(NAME))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1423) org.kframework.attributes.Location(Location(1423,10,1423,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #deleteAccounts(`.List`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(701) org.kframework.attributes.Location(Location(701,10,701,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #changesState(`sstore_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToOperand(_)),#SemanticCastToArray(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(630) org.kframework.attributes.Location(Location(630,10,630,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #changesState(`selfdestruct__IELE-COMMON`(#SemanticCastToOperand(_)),#SemanticCastToArray(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(634) org.kframework.attributes.Location(Location(634,10,634,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #changesState(`log__IELE-COMMON`(#SemanticCastToOperand(_)),#SemanticCastToArray(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(628) org.kframework.attributes.Location(Location(628,10,628,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #changesState(`log_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToNonEmptyOperands(_)),#SemanticCastToArray(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(629) org.kframework.attributes.Location(Location(629,10,629,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #changesState(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),`%__IELE-COMMON`(#SemanticCastToInt(VALUE)),#SemanticCastToOperand(_)),#SemanticCastToArray(REGS))=>#token("true","Bool") requires `_=/=K_`(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(VALUE)),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(631) org.kframework.attributes.Location(Location(631,10,631,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #changesState(`_,_=create_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToIeleName(_),#SemanticCastToOperands(_),#SemanticCastToOperand(_)),#SemanticCastToArray(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(632) org.kframework.attributes.Location(Location(632,10,632,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #changesState(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),#SemanticCastToOperand(_)),#SemanticCastToArray(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(633) org.kframework.attributes.Location(Location(633,10,633,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #changesState(#SemanticCastToInstruction(_),#SemanticCastToArray(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(635) org.kframework.attributes.Location(Location(635,10,635,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #cells(`<mode>`(#noDots(.KList),#SemanticCastToMode(EXECMODE),#noDots(.KList)),`<k>`(#noDots(.KList),`#end_IELE-INFRASTRUCTURE`(.KList)~>`#codeDeposit_______IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(LEN),#SemanticCastToContract(CODE),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToBool(NEW))=>`#mkCodeDeposit_______IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(LEN),#SemanticCastToContract(CODE),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToBool(NEW)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1433) org.kframework.attributes.Location(Location(1433,10,1434,127)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),labeledBlockList(`_:__IELE-COMMON`(#SemanticCastToIeleName(_),#SemanticCastToInstructions(INSTRS)),#SemanticCastToLabeledBlocks(BLOCKS))=>`___IELE-COMMON`(#SemanticCastToInstructions(INSTRS),#SemanticCastToLabeledBlocks(BLOCKS)),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(946) org.kframework.attributes.Location(Location(946,10,947,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))``~>`#exec__IELE-INFRASTRUCTURE`(`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToGlobalName(_),#SemanticCastToInt(ACCT))),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1099) org.kframework.attributes.Location(Location(1099,10,1101,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))``~>`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),operandList(#SemanticCastToInt(ACCT),`.List{"operandList"}`(.KList)))),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1095) org.kframework.attributes.Location(Location(1095,10,1097,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))``~>`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(REG),`@__IELE-COMMON`(#token("iele.balance","IeleName")),operandList(#SemanticCastToInt(ACCT),`.List{"operandList"}`(.KList)))),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1076) org.kframework.attributes.Location(Location(1076,10,1078,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))``~>`#exec__IELE-INFRASTRUCTURE`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToInt(ACCT),#SemanticCastToOperands(_),#SemanticCastToOperand(_))),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1526) org.kframework.attributes.Location(Location(1526,10,1526,166)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))``~>`#call________IELE`(#SemanticCastToInt(_),#SemanticCastToInt(ACCT),#SemanticCastToConstant(_),#SemanticCastToOperand(_),#SemanticCastToInt(_),#SemanticCastToInts(_),#SemanticCastToBool(_)),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `_andBool_`(`_=/=Int__INT-COMMON`(#SemanticCastToInt(ACCT),`#precompiledAccount_IELE-PRECOMPILED`(.KList)),`notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS)))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1201) org.kframework.attributes.Location(Location(1201,10,1203,77)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>#lookupCode(#SemanticCastToInt(ACCTCODE))``~>`#exec__IELE-INFRASTRUCTURE`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToInt(ACCTCODE),#SemanticCastToOperands(_),#SemanticCastToOperand(_))),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTCODE),#noDots(.KList)),`<code>`(#noDots(.KList),`.List{"contractDefinitionList"}`(.KList),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1503) org.kframework.attributes.Location(Location(1503,10,1508,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>#lookupCode(#SemanticCastToInt(ACCT))``~>`#exec__IELE-INFRASTRUCTURE`(`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToGlobalName(_),#SemanticCastToInt(ACCT))),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),`.List{"contractDefinitionList"}`(.KList),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1103) org.kframework.attributes.Location(Location(1103,10,1108,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>#lookupCode(#SemanticCastToInt(ACCT))``~>`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),operandList(#SemanticCastToInt(ACCT),`.List{"operandList"}`(.KList)))),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),`.List{"contractDefinitionList"}`(.KList),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1088) org.kframework.attributes.Location(Location(1088,10,1093,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>#deleteAccounts(`Set2List`(#SemanticCastToSet(ACCTS)))``~>#finalizeTx(#token("true","Bool")),#dots(.KList)),`<selfDestruct>`(#noDots(.KList),#SemanticCastToSet(ACCTS)=>`.Set`(.KList),#noDots(.KList))) requires `_>Int__INT-COMMON`(size(#SemanticCastToSet(ACCTS)),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(685) org.kframework.attributes.Location(Location(685,10,687,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`___IELE-COMMON`(instructionList(#SemanticCastToInstruction(OP),#SemanticCastToInstructions(OPS)),#SemanticCastToLabeledBlocks(BLOCKS))=>`#exceptional?[_]_IELE`(#SemanticCastToInstruction(OP))~>#SemanticCastToInstruction(OP)~>`___IELE-COMMON`(#SemanticCastToInstructions(OPS),#SemanticCastToLabeledBlocks(BLOCKS)),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(581) org.kframework.attributes.Location(Location(581,10,586,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`___IELE-COMMON`(`.List{"instructionList"}`(.KList),#SemanticCastToLabeledBlocks(BLOCKS))=>#SemanticCastToLabeledBlocks(BLOCKS),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(592) org.kframework.attributes.Location(Location(592,10,593,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`.List{"labeledBlockList"}`(.KList)=>`___IELE-COMMON`(instructionList(`ret__IELE-COMMON`(`.List{"operandList"}`(.KList)),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(573) org.kframework.attributes.Location(Location(573,10,574,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#static?[_]_IELE`(#SemanticCastToInstruction(OP))=>.K,#dots(.KList)),`<static>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(622) org.kframework.attributes.Location(Location(622,10,622,108)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#revert__IELE-INFRASTRUCTURE`(#SemanticCastToInt(OUT))~>`#return___IELE`(#SemanticCastToLValues(_),#SemanticCastToLValue(REG))=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#popWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#popSubstate_IELE-INFRASTRUCTURE`(.KList)~>#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(OUT)))~>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(OUT))~>`#refund__IELE`(#SemanticCastToInt(GAVAIL)),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1287) org.kframework.attributes.Location(Location(1287,10,1295,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#revert__IELE-INFRASTRUCTURE`(#SemanticCastToInt(OUT))~>`#codeDeposit_______IELE`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToContract(_),#SemanticCastToLValue(REG),#SemanticCastToLValue(_),#SemanticCastToBool(NEW))=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#popWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#popSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(NEW),`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>#SemanticCastToInt(OUT),#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(OUT)))~>`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(OUT))),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1430) org.kframework.attributes.Location(Location(1430,10,1431,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#refund__IELE`(#SemanticCastToInt(G))=>.K,#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL)=>`_+Int_`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(G)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1312) org.kframework.attributes.Location(Location(1312,10,1312,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#negativeCall?[_]_IELE`(`_=staticcall_at_(_)gaslimit__IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),`%__IELE-COMMON`(#SemanticCastToInt(REG))))=>`#if_#then_#else_#fi_K-EQUAL`(`_<Int__INT-COMMON`(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG))),#token("0","Int")),`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),.K),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(647) org.kframework.attributes.Location(Location(647,10,647,183)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#negativeCall?[_]_IELE`(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),`%__IELE-COMMON`(#SemanticCastToInt(REG1)),`%__IELE-COMMON`(#SemanticCastToInt(REG2))))=>`#if_#then_#else_#fi_K-EQUAL`(`_orBool__BOOL`(`_<Int__INT-COMMON`(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG1))),#token("0","Int")),`_<Int__INT-COMMON`(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG2))),#token("0","Int"))),`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),.K),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(645) org.kframework.attributes.Location(Location(645,10,645,235)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#negativeCall?[_]_IELE`(`_,_=create_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToIeleName(_),#SemanticCastToOperands(_),`%__IELE-COMMON`(#SemanticCastToInt(REG))))=>`#if_#then_#else_#fi_K-EQUAL`(`_<Int__INT-COMMON`(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG))),#token("0","Int")),`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),.K),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(648) org.kframework.attributes.Location(Location(648,10,648,183)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#negativeCall?[_]_IELE`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),`%__IELE-COMMON`(#SemanticCastToInt(REG))))=>`#if_#then_#else_#fi_K-EQUAL`(`_<Int__INT-COMMON`(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG))),#token("0","Int")),`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),.K),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(649) org.kframework.attributes.Location(Location(649,10,649,183)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#load___IELE`(`%__IELE-COMMON`(#SemanticCastToInt(REG)),#SemanticCastToInt(VALUE))=>#loadAux(#SemanticCastToInt(REG),#SemanticCastToInt(VALUE),getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG)))),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(737) org.kframework.attributes.Location(Location(737,10,737,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#illFormed_IELE`(.KList)~>`#finishTypeChecking_IELE`(.KList)~>`#create_______IELE`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(_),#SemanticCastToContract(_),#SemanticCastToInts(_))=>`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#exception__IELE-INFRASTRUCTURE`(`CONTRACT_INVALID_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("true","Bool")=>#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1392) org.kframework.attributes.Location(Location(1392,10,1393,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#finishTypeChecking_IELE`(.KList)=>.K,#dots(.KList)),`<typeChecking>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1382) org.kframework.attributes.Location(Location(1382,10,1383,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`store_,__IELE-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToOperand(CELL)))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM)=>`#if_#then_#else_#fi_K-EQUAL`(`_andBool_`(`_==Int_`(#SemanticCastToInt(VALUE),#token("0","Int")),`notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(CELL),#SemanticCastToMap(LM)))),#SemanticCastToMap(LM),`_[_<-_]_MAP`(#SemanticCastToMap(LM),#SemanticCastToOperand(CELL),`Int2BytesNoLen`(#SemanticCastToInt(VALUE),littleEndianBytes(.KList),signedBytes(.KList)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(783) org.kframework.attributes.Location(Location(783,10,784,152)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToOperand(CELL),#SemanticCastToOperand(_),#token("0","Int")))=>.K,#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(CELL),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(779) org.kframework.attributes.Location(Location(779,10,781,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToOperand(CELL),#SemanticCastToOperand(_),#SemanticCastToInt(WIDTH))),#dots(.KList)),`<localMem>`(#noDots(.KList),`_Map_`(#SemanticCastToMap(LM),`.Map`(.KList)=>`_|->_`(#SemanticCastToOperand(CELL),`.Bytes_BYTES-HOOKED`(.KList))),#noDots(.KList))) requires `_andBool_`(`notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(CELL),#SemanticCastToMap(LM))),`_=/=Int__INT-COMMON`(#SemanticCastToInt(WIDTH),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(775) org.kframework.attributes.Location(Location(775,10,777,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`store_,_,_,__IELE-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToOperand(CELL),#SemanticCastToInt(OFFSET),#SemanticCastToInt(WIDTH)))=>.K,#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(CELL),#SemanticCastToBytes(LM)=>assignBytesRange(#SemanticCastToBytes(LM),#SemanticCastToInt(OFFSET),`Int2Bytes`(chop(#SemanticCastToInt(WIDTH)),twos(chop(#SemanticCastToInt(WIDTH)),#SemanticCastToInt(VALUE)),littleEndianBytes(.KList)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(772) org.kframework.attributes.Location(Location(772,10,773,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`revert__IELE-COMMON`(#SemanticCastToInt(VALUE)))=>`#revert__IELE-INFRASTRUCTURE`(#SemanticCastToInt(VALUE)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1026) org.kframework.attributes.Location(Location(1026,10,1027,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=sha3__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(MEMINDEX)))=>`#load___IELE`(#SemanticCastToLValue(REG),keccak(`.Bytes_BYTES-HOOKED`(.KList))),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(MEMINDEX),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(881) org.kframework.attributes.Location(Location(881,10,883,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=sha3__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(MEMINDEX)))=>`#load___IELE`(#SemanticCastToLValue(REG),keccak(#SemanticCastToBytes(LM))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(MEMINDEX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(879) org.kframework.attributes.Location(Location(879,10,880,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=load__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(CELL)))=>`#load___IELE`(#SemanticCastToLValue(REG),`Bytes2Int`(#SemanticCastToBytes(LM),littleEndianBytes(.KList),signedBytes(.KList))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(CELL),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(765) org.kframework.attributes.Location(Location(765,10,766,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=load__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(CELL)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(CELL),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(768) org.kframework.attributes.Location(Location(768,10,770,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=load_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(CELL),#SemanticCastToOperand(OFFSET),#SemanticCastToOperand(WIDTH)))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(CELL),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(761) org.kframework.attributes.Location(Location(761,10,763,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=load_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(CELL),#SemanticCastToInt(OFFSET),#SemanticCastToInt(WIDTH)))=>`#load___IELE`(#SemanticCastToLValue(REG),`Bytes2Int`(bytesRange(#SemanticCastToBytes(LM),#SemanticCastToInt(OFFSET),#SemanticCastToInt(WIDTH)),littleEndianBytes(.KList),unsignedBytes(.KList))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(CELL),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(758) org.kframework.attributes.Location(Location(758,10,759,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(REG),`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInt(ACCT)))=>`#load___IELE`(#SemanticCastToLValue(REG),#callAddress(#SemanticCastToContract(CODE),#mainContract(#SemanticCastToContract(CODE)),#SemanticCastToIeleName(NAME))),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToContract(CODE),#noDots(.KList))),#dots(.KList))) requires `_=/=K_`(#SemanticCastToContract(CODE),`.List{"contractDefinitionList"}`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1110) org.kframework.attributes.Location(Location(1110,10,1116,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.timestamp","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(TS)),#dots(.KList)),`<timestamp>`(#noDots(.KList),#SemanticCastToInt(TS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(911) org.kframework.attributes.Location(Location(911,10,911,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.origin","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(ORG)),#dots(.KList)),`<origin>`(#noDots(.KList),#SemanticCastToInt(ORG),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(916) org.kframework.attributes.Location(Location(916,10,916,107)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.number","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(NUMB)),#dots(.KList)),`<number>`(#noDots(.KList),#SemanticCastToInt(NUMB),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(912) org.kframework.attributes.Location(Location(912,10,912,110)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.msize","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_<<Int__INT-COMMON`(#SemanticCastToInt(MU),#token("3","Int"))),#dots(.KList)),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(MU),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(920) org.kframework.attributes.Location(Location(920,10,920,120)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gasprice","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(GPRICE)),#dots(.KList)),`<gasPrice>`(#noDots(.KList),#SemanticCastToInt(GPRICE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(907) org.kframework.attributes.Location(Location(907,10,907,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gaslimit","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(GLIMIT)),#dots(.KList)),`<gasLimit>`(#noDots(.KList),#SemanticCastToInt(GLIMIT),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(908) org.kframework.attributes.Location(Location(908,10,908,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),operandList(#SemanticCastToInt(ACCT),`.List{"operandList"}`(.KList))))=>`#load___IELE`(#SemanticCastToLValue(REG),#contractSize(#SemanticCastToContract(CODE),#mainContract(#SemanticCastToContract(CODE)))),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToContract(CODE),#noDots(.KList))),#dots(.KList))) requires `_=/=K_`(#SemanticCastToContract(CODE),`.List{"contractDefinitionList"}`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1080) org.kframework.attributes.Location(Location(1080,10,1086,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.difficulty","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(DIFF)),#dots(.KList)),`<difficulty>`(#noDots(.KList),#SemanticCastToInt(DIFF),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(913) org.kframework.attributes.Location(Location(913,10,913,118)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.codesize","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(SIZE)),#dots(.KList)),`<programSize>`(#noDots(.KList),#SemanticCastToInt(SIZE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(921) org.kframework.attributes.Location(Location(921,10,921,124)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.callvalue","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(CV)),#dots(.KList)),`<callValue>`(#noDots(.KList),#SemanticCastToInt(CV),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(918) org.kframework.attributes.Location(Location(918,10,918,112)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.caller","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(CL)),#dots(.KList)),`<caller>`(#noDots(.KList),#SemanticCastToInt(CL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(917) org.kframework.attributes.Location(Location(917,10,917,106)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.beneficiary","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(CB)),#dots(.KList)),`<beneficiary>`(#noDots(.KList),#SemanticCastToInt(CB),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(910) org.kframework.attributes.Location(Location(910,10,910,118)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.balance","IeleName")),operandList(#SemanticCastToInt(ACCT),`.List{"operandList"}`(.KList))))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(BAL)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1069) org.kframework.attributes.Location(Location(1069,10,1074,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.address","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(ACCT)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(915) org.kframework.attributes.Location(Location(915,10,915,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToInt(IDX),#SemanticCastToOperands(_)))=>`#exception__IELE-INFRASTRUCTURE`(`FUNC_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<funcLabels>`(#noDots(.KList),#SemanticCastToMap(LBLS),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(IDX),#SemanticCastToMap(LBLS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(969) org.kframework.attributes.Location(Location(969,10,971,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=__IELE-COMMON`(#SemanticCastToLValue(REG1),`%__IELE-COMMON`(#SemanticCastToInt(REG2))))=>`#load___IELE`(#SemanticCastToLValue(REG1),getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG2)))),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(732) org.kframework.attributes.Location(Location(732,10,732,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exception__IELE-INFRASTRUCTURE`(#SemanticCastToInt(STATUS))~>`#return___IELE`(#SemanticCastToLValues(_),#SemanticCastToLValue(REG))=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#popWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#popSubstate_IELE-INFRASTRUCTURE`(.KList)~>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int"))~>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(STATUS)),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1281) org.kframework.attributes.Location(Location(1281,10,1285,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exception__IELE-INFRASTRUCTURE`(#SemanticCastToInt(STATUS))~>`#codeDeposit_______IELE`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToContract(_),#SemanticCastToLValue(REG),#SemanticCastToLValue(_),#SemanticCastToBool(NEW))=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#popWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#popSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(NEW),#SemanticCastToInt(STATUS),#registerDelta(#SemanticCastToLValue(REG),#token("1","Int"))~>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(STATUS))),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1429) org.kframework.attributes.Location(Location(1429,10,1429,235)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#finalizeTx(#token("true","Bool"))=>.K,#dots(.KList)),`<selfDestruct>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(662) org.kframework.attributes.Location(Location(662,10,663,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>#lookupCode(#SemanticCastToInt(ACCT))``~>`#call________IELE`(#SemanticCastToInt(_),#SemanticCastToInt(ACCT),#SemanticCastToConstant(_),#SemanticCastToOperand(_),#SemanticCastToInt(_),#SemanticCastToInts(_),#SemanticCastToBool(_)),#dots(.KList)),`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<code>`(#noDots(.KList),`.List{"contractDefinitionList"}`(.KList),#noDots(.KList))) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(ACCT),`#precompiledAccount_IELE-PRECOMPILED`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1196) org.kframework.attributes.Location(Location(1196,10,1199,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#static?[_]_IELE`(#SemanticCastToInstruction(OP))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))),`<static>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))) requires #changesState(#SemanticCastToInstruction(OP),#SemanticCastToArray(REGS)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(624) org.kframework.attributes.Location(Location(624,10,624,149)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#static?[_]_IELE`(#SemanticCastToInstruction(OP))=>.K,#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))),`<static>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))) requires `notBool_`(#changesState(#SemanticCastToInstruction(OP),#SemanticCastToArray(REGS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(623) org.kframework.attributes.Location(Location(623,10,623,149)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ret__IELE-COMMON`(#SemanticCastToNonEmptyInts(VALUES)))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>#SemanticCastToNonEmptyInts(VALUES),#noDots(.KList))),`<localCalls>`(#noDots(.KList),`.List`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1017) org.kframework.attributes.Location(Location(1017,10,1019,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`br__IELE-COMMON`(#SemanticCastToIeleName(LABEL)))~>#SemanticCastToBlocks(_)=>#SemanticCastToKItem(CODE),#dots(.KList)),`<fid>`(#noDots(.KList),#SemanticCastToIeleName(FUNC),#noDots(.KList))),`<function>`(#dots(.KList),#cells(`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(FUNC),#noDots(.KList)),`<jumpTable>`(#dots(.KList),`_|->_`(#SemanticCastToIeleName(LABEL),#SemanticCastToKItem(CODE)),#noDots(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(949) org.kframework.attributes.Location(Location(949,10,949,169)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`br_,__IELE-COMMON`(#SemanticCastToInt(I),#SemanticCastToIeleName(LABEL)))~>#SemanticCastToBlocks(_)=>#SemanticCastToKItem(CODE),#dots(.KList)),`<fid>`(#noDots(.KList),#SemanticCastToIeleName(FUNC),#noDots(.KList))),`<function>`(#dots(.KList),#cells(`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(FUNC),#noDots(.KList)),`<jumpTable>`(#dots(.KList),`_|->_`(#SemanticCastToIeleName(LABEL),#SemanticCastToKItem(CODE)),#noDots(.KList))),#noDots(.KList))) requires `_=/=K_`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(951) org.kframework.attributes.Location(Location(951,10,951,195)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=sload__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(INDEX)))=>`#load___IELE`(#SemanticCastToLValue(REG),#SemanticCastToInt(VALUE)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(INDEX),#SemanticCastToInt(VALUE)),#dots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1127) org.kframework.attributes.Location(Location(1127,10,1133,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gas","IeleName")),`.List{"operandList"}`(.KList)))=>`#load___IELE`(#SemanticCastToLValue(REG),`_/Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(906) org.kframework.attributes.Location(Location(906,10,906,163)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#checkContract__IELE`(#SemanticCastToContract(CONTRACT))=>#SemanticCastToContract(CONTRACT)~>`#finishTypeChecking_IELE`(.KList),#dots(.KList)),#SemanticCastToWellFormednessCell(_)=>`<well-formedness>`(#noDots(.KList),#cells(`<typeChecking>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)),`<well-formedness-schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),#dots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1374) org.kframework.attributes.Location(Location(1374,10,1381,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#checkCall____IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE),#SemanticCastToInt(GCAP))=>.K,#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`_orBool__BOOL`(`_>Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`_>=Int__INT-COMMON`(#SemanticCastToInt(CD),#token("1024","Int")))) ensures #token("true","Bool") [contentStartColumn(11) contentStartLine(1173) org.kframework.attributes.Location(Location(1173,11,1180,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#call________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToConstant(FUNC),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC))=>`#callWithCode_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#loadCode(#SemanticCastToContract(CODE)),#SemanticCastToConstant(FUNC),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC)),#dots(.KList)),`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<code>`(#noDots(.KList),#SemanticCastToContract(CODE),#noDots(.KList))) requires `_andBool_`(`_=/=Int__INT-COMMON`(#SemanticCastToInt(ACCTTO),`#precompiledAccount_IELE-PRECOMPILED`(.KList)),`_=/=K_`(#SemanticCastToContract(CODE),`.List{"contractDefinitionList"}`(.KList))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1188) org.kframework.attributes.Location(Location(1188,10,1194,77)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),.K=>`#illFormed_IELE`(.KList),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<s>`(#noDots(.KList),#STUCK(.KList)=>.K,#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1385) org.kframework.attributes.Location(Location(1385,10,1387,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#loadAux(#SemanticCastToInt(REG),#SemanticCastToInt(VALUE),#SemanticCastToInt(OLD))=>.K,#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS)=>`_[_<-_]`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG),#SemanticCastToInt(VALUE)),#noDots(.KList))),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(CURR)=>`_+Int_`(`_-Int__INT-COMMON`(#SemanticCastToInt(CURR),intSize(#SemanticCastToInt(OLD))),intSize(#SemanticCastToInt(VALUE))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(738) org.kframework.attributes.Location(Location(738,10,738,176)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#initFun(#SemanticCastToIeleName(LABEL),#SemanticCastToInt(_),#token("false","Bool"))=>`#exception__IELE-INFRASTRUCTURE`(`FUNC_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<exported>`(#noDots(.KList),#SemanticCastToSet(FUNCS),#noDots(.KList))),`<funcIds>`(#noDots(.KList),#SemanticCastToSet(LABELS),#noDots(.KList))) requires `_andBool_`(`notBool_`(`Set:in`(#SemanticCastToIeleName(LABEL),#SemanticCastToSet(FUNCS))),`Set:in`(#SemanticCastToIeleName(LABEL),#SemanticCastToSet(LABELS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1249) org.kframework.attributes.Location(Location(1249,10,1253,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#initFun(#SemanticCastToIeleName(LABEL),#SemanticCastToInt(_),#SemanticCastToBool(_))=>`#exception__IELE-INFRASTRUCTURE`(`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(#SemanticCastToInt(SIZE),#token("0","Int")),`CONTRACT_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList),`FUNC_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList))),#dots(.KList)),`<funcIds>`(#noDots(.KList),#SemanticCastToSet(LABELS),#noDots(.KList))),`<programSize>`(#noDots(.KList),#SemanticCastToInt(SIZE),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToIeleName(LABEL),#SemanticCastToSet(LABELS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1255) org.kframework.attributes.Location(Location(1255,10,1258,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#finalizeTx(#token("false","Bool")=>#token("true","Bool")),#dots(.KList)),`<mode>`(#noDots(.KList),`NORMAL`(.KList),#noDots(.KList))),`<txPending>`(#noDots(.KList),`ListItem`(#SemanticCastToKItem(_))=>`.List`(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(681) org.kframework.attributes.Location(Location(681,10,683,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#deleteAccounts(`_List_`(`ListItem`(#SemanticCastToInt(ACCT)),#SemanticCastToList(ACCTS)))=>#deleteAccounts(#SemanticCastToList(ACCTS)),#dots(.KList)),`<activeAccounts>`(#dots(.KList),`SetItem`(#SemanticCastToInt(ACCT))=>`.Set`(.KList),#noDots(.KList))),`<accounts>`(#noDots(.KList),`<account>`(#noDots(.KList),`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),#dots(.KList))=>#cells(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(689) org.kframework.attributes.Location(Location(689,10,699,21)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<mode>`(#noDots(.KList),#SemanticCastToMode(EXECMODE),#noDots(.KList)),`<k>`(#noDots(.KList),`#end_IELE-INFRASTRUCTURE`(.KList)~>`#return___IELE`(#SemanticCastToLValues(REGS),#SemanticCastToLValue(REG))=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#if_#then_#else_#fi_K-EQUAL`(`_==K_`(#SemanticCastToMode(EXECMODE),`VMTESTS_IELE-CONSTANTS`(.KList)),`#popWorldState_IELE-INFRASTRUCTURE`(.KList),`#dropWorldState_IELE-INFRASTRUCTURE`(.KList))~>`#dropSubstate_IELE-INFRASTRUCTURE`(.KList)~>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int"))~>#registerDeltas(#SemanticCastToLValues(REGS),#SemanticCastToInts(OUT))~>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int"))~>`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>`#if_#then_#else_#fi_K-EQUAL`(`_==K_`(#SemanticCastToMode(EXECMODE),`VMTESTS_IELE-CONSTANTS`(.KList)),.K,`#loads___IELE`(#SemanticCastToLValues(REGS),#SemanticCastToInts(OUT))),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(OUT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1297) org.kframework.attributes.Location(Location(1297,10,1308,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(MINER))``~>#finalizeTx(#SemanticCastToBool(_)),#dots(.KList)),`<mode>`(#noDots(.KList),`NORMAL`(.KList),#noDots(.KList))),`<beneficiary>`(#noDots(.KList),#SemanticCastToInt(MINER),#noDots(.KList))),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(MINER),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(675) org.kframework.attributes.Location(Location(675,10,679,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#mkCodeDeposit_______IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(LEN),#SemanticCastToContract(CODE),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToBool(NEW))=>`#if_#then_#else_#fi_K-EQUAL`(`_orBool__BOOL`(`_==K_`(#SemanticCastToMode(EXECMODE),`VMTESTS_IELE-CONSTANTS`(.KList)),`notBool_`(#SemanticCastToBool(NEW))),.K,`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gcodedeposit_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(LEN))~>`#deductGas_IELE-GAS`(.KList))~>`#finishCodeDeposit______IELE`(#SemanticCastToInt(ACCT),#SemanticCastToContract(CODE),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToBool(NEW)),#dots(.KList)),`<mode>`(#noDots(.KList),#SemanticCastToMode(EXECMODE),#noDots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<output>`(#noDots(.KList),`.List{"operandList"}`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1436) org.kframework.attributes.Location(Location(1436,10,1443,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#log___IELE`(#SemanticCastToInt(MEMINDEX),#SemanticCastToList(TOPICS))=>.K,#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToInt(MEMINDEX),#SemanticCastToBytes(LM)),#dots(.KList))),`<logData>`(#dots(.KList),`.List`(.KList)=>`ListItem`(logEntry(#SemanticCastToInt(ACCT),#SemanticCastToList(TOPICS),#SemanticCastToBytes(LM))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1051) org.kframework.attributes.Location(Location(1051,10,1054,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#execute_IELE`(.KList)=>#SemanticCastToBlocks(CODE),#dots(.KList)),`<fid>`(#noDots(.KList),#SemanticCastToIeleName(FUNC),#noDots(.KList))),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(FUNC),#noDots(.KList))),`<instructions>`(#noDots(.KList),#SemanticCastToBlocks(CODE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(565) org.kframework.attributes.Location(Location(565,10,565,138)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ret__IELE-COMMON`(#SemanticCastToNonEmptyInts(VALUES)))~>#SemanticCastToBlocks(_)=>#registerDeltas(#SemanticCastToLValues(RETURNS),#SemanticCastToNonEmptyInts(VALUES))~>`#loads___IELE`(#SemanticCastToLValues(RETURNS),#SemanticCastToNonEmptyInts(VALUES))~>#SemanticCastToBlocks(OPS),#dots(.KList)),`<fid>`(#noDots(.KList),#SemanticCastToIeleName(_)=>#SemanticCastToIeleName(FUNC),#noDots(.KList))),`<regs>`(#noDots(.KList),#SemanticCastToArray(_)=>#SemanticCastToArray(REGS),#noDots(.KList))),`<localCalls>`(#noDots(.KList),`ListItem`(`{_|_|_|_}_IELE`(#SemanticCastToBlocks(OPS),#SemanticCastToIeleName(FUNC),#SemanticCastToLValues(RETURNS),#SemanticCastToArray(REGS)))=>`.List`(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1021) org.kframework.attributes.Location(Location(1021,10,1024,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=staticcall_at_(_)gaslimit__IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),#SemanticCastToLValues(REGS)),#SemanticCastToConstant(LABEL),#SemanticCastToInt(ACCTTO),#SemanticCastToInts(ARGS),#SemanticCastToInt(GCAP)))=>`#checkCall____IELE`(#SemanticCastToInt(ACCTFROM),#token("0","Int"),#SemanticCastToInt(GCAP))~>`#call________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToConstant(LABEL),`Ccallgas`(#SemanticCastToSchedule(SCHED),#accountEmpty(#SemanticCastToInt(ACCTTO)),`_*Int__INT-COMMON`(#SemanticCastToInt(GCAP),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(GAVAIL),#token("0","Int"),#sizeLVals(#SemanticCastToLValues(REGS)),`Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToInts(ARGS))),#token("0","Int"),#SemanticCastToInts(ARGS),#token("true","Bool"))~>`#return___IELE`(#SemanticCastToLValues(REGS),#SemanticCastToLValue(REG)),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<previousGas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1328) org.kframework.attributes.Location(Location(1328,10,1336,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),#SemanticCastToLValues(REGS)),#SemanticCastToConstant(LABEL),#SemanticCastToInt(ACCTTO),#SemanticCastToInts(ARGS),#SemanticCastToInt(VALUE),#SemanticCastToInt(GCAP)))=>`#checkCall____IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(VALUE),#SemanticCastToInt(GCAP))~>`#call________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToConstant(LABEL),`Ccallgas`(#SemanticCastToSchedule(SCHED),#accountEmpty(#SemanticCastToInt(ACCTTO)),`_*Int__INT-COMMON`(#SemanticCastToInt(GCAP),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(VALUE),#sizeLVals(#SemanticCastToLValues(REGS)),`Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToInts(ARGS))),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#token("false","Bool"))~>`#return___IELE`(#SemanticCastToLValues(REGS),#SemanticCastToLValue(REG)),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<previousGas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1318) org.kframework.attributes.Location(Location(1318,10,1326,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToInt(IDX)=>`@__IELE-COMMON`(#SemanticCastToIeleName(LABEL)),#SemanticCastToOperands(ARGS))),#dots(.KList)),`<funcLabels>`(#dots(.KList),`_|->_`(#SemanticCastToInt(IDX),#SemanticCastToIeleName(LABEL)),#dots(.KList))),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(LABEL),#noDots(.KList))),`<nparams>`(#noDots(.KList),#SemanticCastToInt(NPARAMS),#noDots(.KList))) requires `_==Int_`(#sizeRegs(#SemanticCastToOperands(ARGS)),#SemanticCastToInt(NPARAMS)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(963) org.kframework.attributes.Location(Location(963,10,967,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(RETURNS),`@__IELE-COMMON`(#SemanticCastToIeleName(LABEL)),#SemanticCastToInts(ARGS)))~>#SemanticCastToBlocks(OPS)=>`#loads___IELE`(#regRange(#sizeRegs(#SemanticCastToInts(ARGS))),#SemanticCastToInts(ARGS))~>`#execute_IELE`(.KList),#dots(.KList)),`<fid>`(#noDots(.KList),#SemanticCastToIeleName(FUNC)=>#SemanticCastToIeleName(LABEL),#noDots(.KList))),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS)=>`.Array_IELE-DATA`(.KList),#noDots(.KList))),`<localCalls>`(#noDots(.KList),`.List`(.KList)=>`ListItem`(`{_|_|_|_}_IELE`(#SemanticCastToBlocks(OPS),#SemanticCastToIeleName(FUNC),#SemanticCastToLValues(RETURNS),#SemanticCastToArray(REGS))),#dots(.KList))) requires `notBool_`(isIeleBuiltin(#SemanticCastToIeleName(LABEL))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(957) org.kframework.attributes.Location(Location(957,10,961,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#checkCreate___IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))~>`#create_______IELE`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(_),#SemanticCastToContract(_),#SemanticCastToInts(_))=>`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#exception__IELE-INFRASTRUCTURE`(`#if_#then_#else_#fi_K-EQUAL`(`_>Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`OUT_OF_FUNDS_IELE-INFRASTRUCTURE`(.KList),`CALL_STACK_OVERFLOW_IELE-INFRASTRUCTURE`(.KList))),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires `_orBool__BOOL`(`_>Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`_>=Int__INT-COMMON`(#SemanticCastToInt(CD),#token("1024","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1353) org.kframework.attributes.Location(Location(1353,10,1361,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#checkCreate___IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<mode>`(#noDots(.KList),#SemanticCastToMode(EXECMODE),#noDots(.KList))),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE)=>`#if_#then_#else_#fi_K-EQUAL`(`_==K_`(#SemanticCastToMode(EXECMODE),`VMTESTS_IELE-CONSTANTS`(.KList)),#SemanticCastToInt(NONCE),`_+Int_`(#SemanticCastToInt(NONCE),#token("1","Int"))),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`_orBool__BOOL`(`_orBool__BOOL`(`_>Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`_<Int__INT-COMMON`(#SemanticCastToInt(VALUE),#token("0","Int"))),`_>=Int__INT-COMMON`(#SemanticCastToInt(CD),#token("1024","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1363) org.kframework.attributes.Location(Location(1363,10,1372,81)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#checkCall____IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE),#SemanticCastToInt(GCAP))~>`#call________IELE`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToConstant(_),#SemanticCastToOperand(GLIMIT),#SemanticCastToInt(_),#SemanticCastToInts(_),#SemanticCastToBool(_))=>`#refund__IELE`(#SemanticCastToOperand(GLIMIT))~>`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#exception__IELE-INFRASTRUCTURE`(`#if_#then_#else_#fi_K-EQUAL`(`_>Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`OUT_OF_FUNDS_IELE-INFRASTRUCTURE`(.KList),`CALL_STACK_OVERFLOW_IELE-INFRASTRUCTURE`(.KList))),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires `_orBool__BOOL`(`_>Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(BAL)),`_>=Int__INT-COMMON`(#SemanticCastToInt(CD),#token("1024","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1163) org.kframework.attributes.Location(Location(1163,10,1171,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),#initFun(#SemanticCastToIeleName(LABEL),#SemanticCastToInt(NARGS),#SemanticCastToBool(_))=>`#exception__IELE-INFRASTRUCTURE`(`FUNC_WRONG_SIG_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(LABEL),#noDots(.KList))),`<nparams>`(#noDots(.KList),#SemanticCastToInt(NPARAMS),#noDots(.KList))) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(NARGS),#SemanticCastToInt(NPARAMS)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1260) org.kframework.attributes.Location(Location(1260,10,1264,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#finishCodeDeposit______IELE`(#SemanticCastToInt(ACCT),#SemanticCastToContract(CODE),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToBool(NEW))=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#if_#then_#else_#fi_K-EQUAL`(`_==K_`(#SemanticCastToMode(EXECMODE),`VMTESTS_IELE-CONSTANTS`(.KList)),`#popWorldState_IELE-INFRASTRUCTURE`(.KList),`#dropWorldState_IELE-INFRASTRUCTURE`(.KList))~>`#dropSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(NEW),`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>#token("0","Int"),#registerDelta(#SemanticCastToLValue(STATUS),#token("1","Int"))~>#registerDelta(#SemanticCastToLValue(ACCTOUT),#token("3","Int"))~>`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>`#load___IELE`(#SemanticCastToLValue(STATUS),#token("0","Int"))~>`#load___IELE`(#SemanticCastToLValue(ACCTOUT),#SemanticCastToInt(ACCT))),#dots(.KList)),`<mode>`(#noDots(.KList),#SemanticCastToMode(EXECMODE),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>operandList(#SemanticCastToInt(ACCT),`.List{"operandList"}`(.KList)),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToContract(_)=>#SemanticCastToContract(CODE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1445) org.kframework.attributes.Location(Location(1445,10,1457,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`sstore_,__IELE-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToOperand(INDEX)))=>.K,#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(INDEX),#SemanticCastToInt(OLD)=>#SemanticCastToInt(VALUE)),#dots(.KList))),#dots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(R)=>`_+Int_`(#SemanticCastToInt(R),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Rsstoreset_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`maxInt(_,_)_INT-COMMON`(#token("0","Int"),`_-Int__INT-COMMON`(intSize(#SemanticCastToInt(OLD)),intSize(#SemanticCastToInt(VALUE)))))),#noDots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1135) org.kframework.attributes.Location(Location(1135,10,1143,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToInt(IDX),#SemanticCastToOperands(ARGS)))=>`#if_#then_#else_#fi_K-EQUAL`(`_andBool_`(`_==K_`(#SemanticCastToIeleName(LABEL),#token("init","IeleName")),`_=/=K_`(#SemanticCastToSchedule(SCHED),`ALBE_IELE-CONSTANTS`(.KList))),`FUNC_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList),`#exception__IELE-INFRASTRUCTURE`(`FUNC_WRONG_SIG_IELE-INFRASTRUCTURE`(.KList))),#dots(.KList)),`<funcLabels>`(#dots(.KList),`_|->_`(#SemanticCastToInt(IDX),#SemanticCastToIeleName(LABEL)),#dots(.KList))),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(LABEL),#noDots(.KList))),`<nparams>`(#noDots(.KList),#SemanticCastToInt(NPARAMS),#noDots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires `_orBool__BOOL`(`_=/=Int__INT-COMMON`(#sizeRegs(#SemanticCastToOperands(ARGS)),#SemanticCastToInt(NPARAMS)),`_andBool_`(`_==K_`(#SemanticCastToIeleName(LABEL),#token("init","IeleName")),`_=/=K_`(#SemanticCastToSchedule(SCHED),`ALBE_IELE-CONSTANTS`(.KList)))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(973) org.kframework.attributes.Location(Location(973,10,978,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToInt(ACCT),#SemanticCastToInts(ARGS),#SemanticCastToInt(VALUE)))=>`#checkCreate___IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))~>`#create_______IELE`(#SemanticCastToInt(ACCT),#newAddr(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)),`#if_#then_#else_#fi_K-EQUAL`(`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(GAVAIL),#allBut64th(#SemanticCastToInt(GAVAIL))),#SemanticCastToInt(VALUE),#SemanticCastToContract(CODE),#SemanticCastToInts(ARGS))~>`#codeDeposit_______IELE`(#newAddr(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)),#contractSize(#SemanticCastToContract(CODE),#mainContract(#SemanticCastToContract(CODE))),#SemanticCastToContract(CODE),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#token("false","Bool")),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL)=>`#if_#then_#else_#fi_K-EQUAL`(`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#token("0","Int"),`_/Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#token("64","Int"))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),`<code>`(#noDots(.KList),#SemanticCastToContract(CODE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1510) org.kframework.attributes.Location(Location(1510,10,1524,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),#finalizeTx(#token("false","Bool")=>#token("true","Bool")),#dots(.KList)),`<mode>`(#noDots(.KList),`VMTESTS_IELE-CONSTANTS`(.KList),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(BAL)=>#token("0","Int"),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(CURRBAL)=>`_+Int_`(#SemanticCastToInt(CURRBAL),#SemanticCastToInt(BAL)),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(665) org.kframework.attributes.Location(Location(665,10,673,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_,_=create_(_)send__IELE-COMMON`(#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToIeleName(NAME),#SemanticCastToInts(ARGS),#SemanticCastToInt(VALUE)))=>`#checkCreate___IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))~>`#create_______IELE`(#SemanticCastToInt(ACCT),#newAddr(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)),`#if_#then_#else_#fi_K-EQUAL`(`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(GAVAIL),#allBut64th(#SemanticCastToInt(GAVAIL))),#SemanticCastToInt(VALUE),#subcontract(#SemanticCastToContract(CODE),#SemanticCastToIeleName(NAME)),#SemanticCastToInts(ARGS))~>`#codeDeposit_______IELE`(#newAddr(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)),#contractSize(#SemanticCastToContract(CODE),#SemanticCastToIeleName(NAME)),#subcontract(#SemanticCastToContract(CODE),#SemanticCastToIeleName(NAME)),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#token("false","Bool")),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL)=>`#if_#then_#else_#fi_K-EQUAL`(`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#token("0","Int"),`_/Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#token("64","Int"))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))),`<contractCode>`(#noDots(.KList),#SemanticCastToContract(CODE),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1466) org.kframework.attributes.Location(Location(1466,10,1480,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#SemanticCastToInt(ACCTCODE),#SemanticCastToInts(ARGS),#SemanticCastToInt(VALUE)))=>`#checkCreate___IELE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))~>`#create_______IELE`(#SemanticCastToInt(ACCT),#newAddr(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)),`#if_#then_#else_#fi_K-EQUAL`(`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(GAVAIL),#allBut64th(#SemanticCastToInt(GAVAIL))),#SemanticCastToInt(VALUE),#SemanticCastToContract(CODE),#SemanticCastToInts(ARGS))~>`#codeDeposit_______IELE`(#newAddr(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE)),#contractSize(#SemanticCastToContract(CODE),#mainContract(#SemanticCastToContract(CODE))),#SemanticCastToContract(CODE),#SemanticCastToLValue(STATUS),#SemanticCastToLValue(ACCTOUT),#token("false","Bool")),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL)=>`#if_#then_#else_#fi_K-EQUAL`(`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#token("0","Int"),`_/Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#token("64","Int"))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTCODE),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToContract(CODE),#noDots(.KList))),#dots(.KList))) requires `_andBool_`(`_=/=Int__INT-COMMON`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCTCODE)),`_=/=K_`(#SemanticCastToContract(CODE),`.List{"contractDefinitionList"}`(.KList))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1482) org.kframework.attributes.Location(Location(1482,10,1501,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`selfdestruct__IELE-COMMON`(#SemanticCastToInt(ACCTTO)))=>`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(BALFROM))~>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<selfDestruct>`(#noDots(.KList),`_Set_`(#SemanticCastToSet(SDS),`.Set`(.KList)=>`SetItem`(#SemanticCastToInt(ACCT))),#noDots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(RF)=>`#if_#then_#else_#fi_K-EQUAL`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(SDS)),#SemanticCastToInt(RF),`_+Int_`(#SemanticCastToInt(RF),`_<_>_IELE-GAS`(`Rselfdestruct_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BALFROM),#noDots(.KList))),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCTTO)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1533) org.kframework.attributes.Location(Location(1533,10,1544,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`selfdestruct__IELE-COMMON`(#SemanticCastToInt(ACCT)))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<selfDestruct>`(#noDots(.KList),`_Set_`(#SemanticCastToSet(SDS),`.Set`(.KList)=>`SetItem`(#SemanticCastToInt(ACCT))),#noDots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(RF)=>`#if_#then_#else_#fi_K-EQUAL`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(SDS)),#SemanticCastToInt(RF),`_+Int_`(#SemanticCastToInt(RF),`_<_>_IELE-GAS`(`Rselfdestruct_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BALFROM)=>#token("0","Int"),#noDots(.KList))),#dots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1546) org.kframework.attributes.Location(Location(1546,10,1556,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),#initVM(#SemanticCastToInts(ARGS))=>`#loads___IELE`(#regRange(#sizeRegs(#SemanticCastToInts(ARGS))),#SemanticCastToInts(ARGS)),#dots(.KList)),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("0","Int"),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))),`<regs>`(#noDots(.KList),#SemanticCastToArray(_)=>`.Array_IELE-DATA`(.KList),#noDots(.KList))),`<localMem>`(#noDots(.KList),#SemanticCastToMap(_)=>`.Map`(.KList),#noDots(.KList))),`<localCalls>`(#noDots(.KList),#SemanticCastToList(_)=>`.List`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1241) org.kframework.attributes.Location(Location(1241,10,1247,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#mkCall_________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToProgramCell(CODE),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS),#SemanticCastToBool(STATIC))=>#initVM(#SemanticCastToInts(ARGS))~>#initFun(#SemanticCastToIeleName(FUNC),#sizeRegs(#SemanticCastToInts(ARGS)),#token("false","Bool")),#dots(.KList)),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD)=>`_+Int_`(#SemanticCastToInt(CD),#token("1","Int")),#noDots(.KList))),`<callData>`(#noDots(.KList),#SemanticCastToInts(_)=>#SemanticCastToInts(ARGS),#noDots(.KList))),`<callValue>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(VALUE),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(GLIMIT),#noDots(.KList))),`<caller>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<program>`(#noDots(.KList),#SemanticCastToBag(_),#noDots(.KList))=>#SemanticCastToProgramCell(CODE)),`<static>`(#noDots(.KList),#SemanticCastToBool(OLDSTATIC)=>`_orBool__BOOL`(#SemanticCastToBool(OLDSTATIC),#SemanticCastToBool(STATIC)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1219) org.kframework.attributes.Location(Location(1219,10,1230,70)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<mode>`(#noDots(.KList),#SemanticCastToMode(EXECMODE),#noDots(.KList)),`<k>`(#noDots(.KList),`#mkCreate_______IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToContract(CODE),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(VALUE),#SemanticCastToInts(ARGS))=>#initVM(#SemanticCastToInts(ARGS))~>#initFun(#token("init","IeleName"),#sizeRegs(#SemanticCastToInts(ARGS)),#token("true","Bool")),#dots(.KList))),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT)=>#SemanticCastToInt(ACCTTO),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(OLDGAVAIL)=>#SemanticCastToInt(GAVAIL),#noDots(.KList))),`<program>`(#noDots(.KList),#SemanticCastToBag(_),#noDots(.KList))=>#loadCode(#SemanticCastToContract(CODE))),`<caller>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(CD)=>`_+Int_`(#SemanticCastToInt(CD),#token("1","Int")),#noDots(.KList))),`<callData>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))),`<callValue>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(VALUE),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList)),`<nonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1401) org.kframework.attributes.Location(Location(1401,10,1418,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),#initFun(#SemanticCastToIeleName(LABEL),#SemanticCastToInt(NARGS),#SemanticCastToBool(ISCREATE))=>`#if_#then_#else_#fi_K-EQUAL`(`_==K_`(#SemanticCastToMode(EXECMODE),`VMTESTS_IELE-CONSTANTS`(.KList)),`#end_IELE-INFRASTRUCTURE`(.KList),`#execute_IELE`(.KList)),#dots(.KList)),`<mode>`(#noDots(.KList),#SemanticCastToMode(EXECMODE),#noDots(.KList))),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<funcIds>`(#dots(.KList),`SetItem`(#SemanticCastToIeleName(LABEL)),#noDots(.KList))),`<exported>`(#noDots(.KList),#SemanticCastToSet(FUNCS),#noDots(.KList))),`<fid>`(#noDots(.KList),#SemanticCastToIeleName(_)=>#SemanticCastToIeleName(LABEL),#noDots(.KList))),`<nregs>`(#noDots(.KList),#SemanticCastToInt(REGISTERS),#noDots(.KList))),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(REGISTERS),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(REGISTERS),#noDots(.KList))),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(LABEL),#noDots(.KList))),`<nparams>`(#noDots(.KList),#SemanticCastToInt(NPARAMS),#noDots(.KList))) requires `_andBool_`(`_orBool__BOOL`(`Set:in`(#SemanticCastToIeleName(LABEL),#SemanticCastToSet(FUNCS)),#SemanticCastToBool(ISCREATE)),`_==Int_`(#SemanticCastToInt(NPARAMS),#SemanticCastToInt(NARGS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1266) org.kframework.attributes.Location(Location(1266,10,1277,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  ModuleComment( ----------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1162,2,1162,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1039,2,1039,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------------------------------,[org.kframework.attributes.Location(Location(955,2,955,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1421,2,1421,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------------------------,[org.kframework.attributes.Location(Location(627,2,627,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------------------------,[org.kframework.attributes.Location(Location(1428,2,1428,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------------------------------,[org.kframework.attributes.Location(Location(736,2,736,65)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------------------,[org.kframework.attributes.Location(Location(642,2,642,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------------------------------,[org.kframework.attributes.Location(Location(604,2,604,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------------------------,[org.kframework.attributes.Location(Location(612,2,612,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------------,[org.kframework.attributes.Location(Location(621,2,621,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------------------------,[org.kframework.attributes.Location(Location(1240,2,1240,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------------------,[org.kframework.attributes.Location(Location(981,2,981,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------,[org.kframework.attributes.Location(Location(661,2,661,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------------,[org.kframework.attributes.Location(Location(741,2,741,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------------,[org.kframework.attributes.Location(Location(1280,2,1280,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------,[org.kframework.attributes.Location(Location(1050,2,1050,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------,[org.kframework.attributes.Location(Location(1311,2,1311,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------,[org.kframework.attributes.Location(Location(1352,2,1352,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------,[org.kframework.attributes.Location(Location(564,2,564,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
endmodule


module IELE$SYNTAX [org.kframework.attributes.Location(Location(557,1,1557,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-PROGRAM-LOADING$SYNTAX
  imports IELE-PRECOMPILED$SYNTAX
  imports IELE-INFRASTRUCTURE$SYNTAX
  imports IELE-GAS$SYNTAX
  syntax SubstateLogEntry ::= "{" Int "|" List "|" Bytes "}" [klabel(logEntry)]
  syntax LocalCall ::= "{" Blocks "|" IeleName "|" LValues "|" Array "}"
  syntax KItem ::= "#return" LValues LValue
  syntax KItem ::= "#mkCodeDeposit" Int Int Contract LValue LValue Bool
  syntax KItem ::= "#initVM" "(" Ints ")" [klabel(#initVM)]
  syntax KItem ::= "#initFun" "(" IeleName "," Int "," Bool ")" [klabel(#initFun)]
  syntax KItem ::= "#finishCodeDeposit" Int Contract LValue LValue Bool
  syntax KItem ::= "#execute"
  syntax KItem ::= "#codeDeposit" Int Int Contract LValue LValue Bool
  syntax K ::= "#invalid?" "[" Instruction "]" [function()]
  syntax InternalOp ::= "#static?" "[" Instruction "]"
  syntax InternalOp ::= "#refund" Operand [strict()]
  syntax InternalOp ::= "#negativeCall?" "[" Instruction "]"
  syntax InternalOp ::= "#mkCreate" Int Int Contract Int Int Ints
  syntax InternalOp ::= "#mkCall" Int Int ProgramCell IeleName Int Int Ints Bool
  syntax InternalOp ::= "#log" Int List
  syntax InternalOp ::= "#loads" LValues Ints
  syntax InternalOp ::= "#load" LValue Int
  syntax InternalOp ::= "#load" Int Int Int [klabel(#loadAux)]
  syntax InternalOp ::= "#finishTypeChecking"
  syntax InternalOp ::= "#finalizeTx" "(" Bool ")" [klabel(#finalizeTx)]
  syntax InternalOp ::= "#exceptional?" "[" Instruction "]"
  syntax InternalOp ::= "#deleteAccounts" "(" List ")" [klabel(#deleteAccounts)]
  syntax InternalOp ::= "#create" Int Int Int Int Contract Ints
  syntax InternalOp ::= "#checkCreate" Int Int
  syntax InternalOp ::= "#checkContract" Contract
  syntax InternalOp ::= "#checkCall" Int Int Int
  syntax InternalOp ::= "#callWithCode" Int Int ProgramCell Constant Int Int Ints Bool
  syntax InternalOp ::= "#call" Int Int Constant Operand Int Ints Bool [strict(4)]
  syntax Contract ::= "#subcontract" "(" Contract "," IeleName ")" [function() klabel(#subcontract)]
  syntax Contract ::= "#illFormed"
  syntax Bool ::= "isIeleBuiltin" "(" IeleName ")" [function() klabel(isIeleBuiltin)]
  syntax Bool ::= "#changesState" "(" Instruction "," Array ")" [function() klabel(#changesState)]
endmodule


module IELE-BINARY [org.kframework.attributes.Location(Location(11,1,455,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))]
  imports IELE-COMMON
  imports IELE-BINARY$SYNTAX
  imports IELE
  rule topLevelAppend(topLevelDefinitionList(#SemanticCastToTopLevelDefinition(D),#SemanticCastToTopLevelDefinitions(Ds)),#SemanticCastToTopLevelDefinitions(Ds'))=>topLevelDefinitionList(#SemanticCastToTopLevelDefinition(D),topLevelAppend(#SemanticCastToTopLevelDefinitions(Ds),#SemanticCastToTopLevelDefinitions(Ds'))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(166) org.kframework.attributes.Location(Location(166,10,166,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule topLevelAppend(`.List{"topLevelDefinitionList"}`(.KList),#SemanticCastToTopLevelDefinitions(Ds))=>#SemanticCastToTopLevelDefinitions(Ds) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(165) org.kframework.attributes.Location(Location(165,10,165,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isValidContractAux(`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`_:__IELE-DATA`(#token("99","Int"),`_:__IELE-DATA`(#SemanticCastToInt(NBITS),#SemanticCastToWordStack(WS))))))),#SemanticCastToInt(SIZE))=>#fun2(#SemanticCastToInt(DECLSIZE)=>`_andBool_`(`_>=Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("4","Int")),#SemanticCastToInt(DECLSIZE)),#isValidStringTable(#take(`_-Int__INT-COMMON`(#SemanticCastToInt(DECLSIZE),#token("2","Int")),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(#SemanticCastToInt(DECLSIZE),#token("2","Int")))),`_+Int_`(`_+Int_`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("16777216","Int")),`_*Int__INT-COMMON`(#SemanticCastToInt(W2),#token("65536","Int"))),`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int"))),#SemanticCastToInt(W4))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(148) org.kframework.attributes.Location(Location(148,10,148,259)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isValidContractAux(`.WordStack_IELE-DATA`(.KList),#token("0","Int"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(147) org.kframework.attributes.Location(Location(147,10,147,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isValidContractAux(#SemanticCastToWordStack(_),#SemanticCastToInt(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(149) org.kframework.attributes.Location(Location(149,10,149,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule contractAppend(contractDefinitionList(#SemanticCastToContractDefinition(C),#SemanticCastToContract(Cs)),#SemanticCastToContract(Cs'))=>contractDefinitionList(#SemanticCastToContractDefinition(C),contractAppend(#SemanticCastToContract(Cs),#SemanticCastToContract(Cs'))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(164) org.kframework.attributes.Location(Location(164,10,164,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule contractAppend(`.List{"contractDefinitionList"}`(.KList),#SemanticCastToContract(Cs))=>#SemanticCastToContract(Cs) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(163) org.kframework.attributes.Location(Location(163,10,163,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_+.+IeleName__IELE-BINARY`(#SemanticCastToIeleName(N),#SemanticCastToIeleName(M))=>`String2IeleName`(`_+String__STRING`(`_+String__STRING`(`IeleName2String`(#SemanticCastToIeleName(N)),#token("\".\"","String")),`IeleName2String`(#SemanticCastToIeleName(M)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(167) org.kframework.attributes.Location(Location(167,10,167,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),#SemanticCastToInt(IDX),#token("0","Int"))=>`.List{"operandList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(323) org.kframework.attributes.Location(Location(323,10,323,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),#SemanticCastToInt(IDX),#SemanticCastToInt(COUNT))=>operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),#SemanticCastToInt(IDX)),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int")),`_-Int__INT-COMMON`(#SemanticCastToInt(COUNT),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(324) org.kframework.attributes.Location(Location(324,10,324,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),#SemanticCastToInt(IDX),#token("0","Int"))=>`.List{"lvalueList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(328) org.kframework.attributes.Location(Location(328,10,328,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),#SemanticCastToInt(IDX),#SemanticCastToInt(COUNT))=>lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),#SemanticCastToInt(IDX)),`%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int")),`_-Int__INT-COMMON`(#SemanticCastToInt(COUNT),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(329) org.kframework.attributes.Location(Location(329,10,329,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(REGS),#SemanticCastToInt(WIDTH),#SemanticCastToInt(MASK),#SemanticCastToInt(IDX))=>`%__IELE-COMMON`(`_&Int__INT-COMMON`(`_>>Int__INT-COMMON`(#SemanticCastToInt(REGS),`_*Int__INT-COMMON`(#SemanticCastToInt(IDX),#SemanticCastToInt(WIDTH))),#SemanticCastToInt(MASK))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(319) org.kframework.attributes.Location(Location(319,10,319,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #toBlocks(#SemanticCastToInstructions(INSTRS))=>#toBlockAux(#SemanticCastToInstructions(INSTRS),`.List{"labeledBlockList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(212) org.kframework.attributes.Location(Location(212,10,212,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #toBlockAux(instructionList(label(#SemanticCastToInt(LABEL)),#SemanticCastToInstructions(INSTRS)),labeledBlockList(#SemanticCastToLabeledBlock(LABELEDBLOCK),#SemanticCastToLabeledBlocks(BLOCKS)))=>#toBlockAux(#SemanticCastToInstructions(INSTRS),labeledBlockList(`_:__IELE-COMMON`(#SemanticCastToInt(LABEL),`.List{"instructionList"}`(.KList)),labeledBlockList(#SemanticCastToLabeledBlock(LABELEDBLOCK),#SemanticCastToLabeledBlocks(BLOCKS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(215) org.kframework.attributes.Location(Location(215,10,215,139)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #toBlockAux(instructionList(label(#SemanticCastToInt(LABEL)),#SemanticCastToInstructions(INSTRS)),`___IELE-COMMON`(#SemanticCastToInstructions(UNLABELEDBLOCK),#SemanticCastToLabeledBlocks(BLOCKS)))=>#toBlockAux(#SemanticCastToInstructions(INSTRS),labeledBlockList(`_:__IELE-COMMON`(#SemanticCastToInt(LABEL),#SemanticCastToInstructions(UNLABELEDBLOCK)),#SemanticCastToLabeledBlocks(BLOCKS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(214) org.kframework.attributes.Location(Location(214,10,214,129)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #toBlockAux(instructionList(label(#SemanticCastToInt(LABEL)),#SemanticCastToInstructions(INSTRS)),`.List{"labeledBlockList"}`(.KList))=>#toBlockAux(#SemanticCastToInstructions(INSTRS),labeledBlockList(`_:__IELE-COMMON`(#SemanticCastToInt(LABEL),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(216) org.kframework.attributes.Location(Location(216,10,216,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #toBlockAux(instructionList(#SemanticCastToInstruction(INSTR),#SemanticCastToInstructions(INSTRS)),labeledBlockList(#SemanticCastToLabeledBlock(LABELEDBLOCK),#SemanticCastToLabeledBlocks(BLOCKS)))=>#toBlockAux(#SemanticCastToInstructions(INSTRS),`___IELE-COMMON`(instructionList(#SemanticCastToInstruction(INSTR),`.List{"instructionList"}`(.KList)),labeledBlockList(#SemanticCastToLabeledBlock(LABELEDBLOCK),#SemanticCastToLabeledBlocks(BLOCKS)))) requires `notBool_`(isPseudoInstruction(#SemanticCastToInstruction(INSTR))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(219) org.kframework.attributes.Location(Location(219,10,220,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #toBlockAux(instructionList(#SemanticCastToInstruction(INSTR),#SemanticCastToInstructions(INSTRS)),`___IELE-COMMON`(#SemanticCastToInstructions(UNLABELEDBLOCK),#SemanticCastToLabeledBlocks(BLOCKS)))=>#toBlockAux(#SemanticCastToInstructions(INSTRS),`___IELE-COMMON`(instructionList(#SemanticCastToInstruction(INSTR),#SemanticCastToInstructions(UNLABELEDBLOCK)),#SemanticCastToLabeledBlocks(BLOCKS))) requires `notBool_`(isPseudoInstruction(#SemanticCastToInstruction(INSTR))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(217) org.kframework.attributes.Location(Location(217,10,218,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #toBlockAux(instructionList(#SemanticCastToInstruction(INSTR),#SemanticCastToInstructions(INSTRS)),`.List{"labeledBlockList"}`(.KList))=>#toBlockAux(#SemanticCastToInstructions(INSTRS),`___IELE-COMMON`(instructionList(#SemanticCastToInstruction(INSTR),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList))) requires `notBool_`(isPseudoInstruction(#SemanticCastToInstruction(INSTR))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(221) org.kframework.attributes.Location(Location(221,10,222,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #toBlockAux(`.List{"instructionList"}`(.KList),#SemanticCastToBlocks(BLOCKS))=>#SemanticCastToBlocks(BLOCKS) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(213) org.kframework.attributes.Location(Location(213,10,213,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opWidth(#SemanticCastToOpCode(OP),#SemanticCastToInt(NBITS))=>`_+Int_`(#opCodeWidth(#SemanticCastToOpCode(OP)),ceilDiv(`_*Int__INT-COMMON`(#SemanticCastToInt(NBITS),#numArgs(#SemanticCastToOpCode(OP))),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(333) org.kframework.attributes.Location(Location(333,10,333,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #opCodeWidth(`STATICCALL`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("7","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(345) org.kframework.attributes.Location(Location(345,10,345,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`STATICCALLDYN`(#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(346) org.kframework.attributes.Location(Location(346,10,346,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`RETURN`(#SemanticCastToInt(_)))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(342) org.kframework.attributes.Location(Location(342,10,342,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`LOCALCALL`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("7","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(340) org.kframework.attributes.Location(Location(340,10,340,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`LOCALCALLDYN`(#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(341) org.kframework.attributes.Location(Location(341,10,341,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`LOADPOS`(#SemanticCastToInt(N),#SemanticCastToInt(_)))=>`_+Int_`(#token("1","Int"),#SemanticCastToInt(N)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(350) org.kframework.attributes.Location(Location(350,10,350,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`LOADNEG`(#SemanticCastToInt(N),#SemanticCastToInt(_)))=>`_+Int_`(#token("1","Int"),#SemanticCastToInt(N)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(351) org.kframework.attributes.Location(Location(351,10,351,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`CALL`(#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("7","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(343) org.kframework.attributes.Location(Location(343,10,343,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`CALLDYN`(#SemanticCastToInt(_),#SemanticCastToInt(_)))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(344) org.kframework.attributes.Location(Location(344,10,344,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`CALLADDRESS`(#SemanticCastToInt(_)))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(347) org.kframework.attributes.Location(Location(347,10,347,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`BR`(#SemanticCastToInt(_)))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(338) org.kframework.attributes.Location(Location(338,10,338,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`BRLABEL`(#SemanticCastToInt(_)))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(337) org.kframework.attributes.Location(Location(337,10,337,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(`BRC`(#SemanticCastToInt(_)))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(339) org.kframework.attributes.Location(Location(339,10,339,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(#SemanticCastToOpCode(OP))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(352) org.kframework.attributes.Location(Location(352,10,352,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #opCodeWidth(#SemanticCastToCreateOp(_))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(348) org.kframework.attributes.Location(Location(348,10,348,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #opCodeWidth(#SemanticCastToCopyCreateOp(_))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(349) org.kframework.attributes.Location(Location(349,10,349,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`STATICCALL`(#SemanticCastToInt(_),#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)))=>`_+Int_`(`_+Int_`(#token("3","Int"),#SemanticCastToInt(ARGS)),#SemanticCastToInt(RETS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(362) org.kframework.attributes.Location(Location(362,10,362,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`STATICCALLDYN`(#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)))=>`_+Int_`(`_+Int_`(#token("4","Int"),#SemanticCastToInt(ARGS)),#SemanticCastToInt(RETS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(363) org.kframework.attributes.Location(Location(363,10,363,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`RETURN`(#SemanticCastToInt(RETS)))=>#SemanticCastToInt(RETS) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(369) org.kframework.attributes.Location(Location(369,10,369,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`LOCALCALL`(#SemanticCastToInt(_),#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)))=>`_+Int_`(#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(366) org.kframework.attributes.Location(Location(366,10,366,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`LOCALCALLDYN`(#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)))=>`_+Int_`(`_+Int_`(#token("1","Int"),#SemanticCastToInt(ARGS)),#SemanticCastToInt(RETS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(367) org.kframework.attributes.Location(Location(367,10,367,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`CREATE`(#SemanticCastToInt(_),#SemanticCastToInt(ARGS)))=>`_+Int_`(#token("3","Int"),#SemanticCastToInt(ARGS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(370) org.kframework.attributes.Location(Location(370,10,370,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`COPYCREATE`(#SemanticCastToInt(ARGS)))=>`_+Int_`(#token("4","Int"),#SemanticCastToInt(ARGS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(371) org.kframework.attributes.Location(Location(371,10,371,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`CALL`(#SemanticCastToInt(_),#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)))=>`_+Int_`(`_+Int_`(#token("4","Int"),#SemanticCastToInt(ARGS)),#SemanticCastToInt(RETS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(364) org.kframework.attributes.Location(Location(364,10,364,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`CALLDYN`(#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)))=>`_+Int_`(`_+Int_`(#token("5","Int"),#SemanticCastToInt(ARGS)),#SemanticCastToInt(RETS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(365) org.kframework.attributes.Location(Location(365,10,365,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(`CALLADDRESS`(#SemanticCastToInt(_)))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(368) org.kframework.attributes.Location(Location(368,10,368,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(#SemanticCastToUnOp(_))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(357) org.kframework.attributes.Location(Location(357,10,357,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(#SemanticCastToTernOp(_))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(359) org.kframework.attributes.Location(Location(359,10,359,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(#SemanticCastToQuadOp(_))=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(360) org.kframework.attributes.Location(Location(360,10,360,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(#SemanticCastToNullOp(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(356) org.kframework.attributes.Location(Location(356,10,356,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(#SemanticCastToFiveOp(_))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(361) org.kframework.attributes.Location(Location(361,10,361,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #numArgs(#SemanticCastToBinOp(_))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(358) org.kframework.attributes.Location(Location(358,10,358,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidStringTable(`_:__IELE-DATA`(#token("106","Int"),`_:__IELE-DATA`(#token("0","Int"),`_:__IELE-DATA`(#token("0","Int"),#SemanticCastToWordStack(WS)))),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(154) org.kframework.attributes.Location(Location(154,10,154,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidStringTable(`_:__IELE-DATA`(#token("106","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>`_andBool_`(`_andBool_`(`_>=Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("3","Int")),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))),isValidContractAux(#take(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),#SemanticCastToWordStack(WS)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)))),#isValidStringTable(#drop(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("3","Int")),`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int"))),#SemanticCastToInt(W2)))) requires `_orBool__BOOL`(`_=/=Int__INT-COMMON`(#SemanticCastToInt(W1),#token("0","Int")),`_=/=Int__INT-COMMON`(#SemanticCastToInt(W2),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(152) org.kframework.attributes.Location(Location(152,10,153,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #isValidStringTable(`_:__IELE-DATA`(#token("105","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>`_andBool_`(`_>=Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("3","Int")),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))),#isValidStringTable(#drop(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("3","Int")),`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int"))),#SemanticCastToInt(W2)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(151) org.kframework.attributes.Location(Location(151,10,151,208)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidStringTable(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>#isValidFunctions(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(155) org.kframework.attributes.Location(Location(155,10,155,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #isValidLoad(#SemanticCastToWordStack(WS),#SemanticCastToInt(SIZE))=>`_>=Int__INT-COMMON`(#SemanticCastToInt(SIZE),`_+Int_`(#loadLen(#SemanticCastToWordStack(WS)),#loadOffset(#SemanticCastToWordStack(WS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(196) org.kframework.attributes.Location(Location(196,10,196,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidInstruction(encodingError(.KList),#SemanticCastToWordStack(_),#SemanticCastToInt(_),#SemanticCastToInt(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(193) org.kframework.attributes.Location(Location(193,10,193,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidInstruction(#SemanticCastToOpCode(OP),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>`_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(SIZE),#opWidth(#SemanticCastToOpCode(OP),#SemanticCastToInt(NBITS))),#isValidFunction(#drop(#opWidth(#SemanticCastToOpCode(OP),#SemanticCastToInt(NBITS)),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#opWidth(#SemanticCastToOpCode(OP),#SemanticCastToInt(NBITS))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(194) org.kframework.attributes.Location(Location(194,10,194,186)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #isValidFunctions(`_:__IELE-DATA`(#token("104","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>#isValidFunction(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("5","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(182) org.kframework.attributes.Location(Location(182,10,182,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidFunctions(`_:__IELE-DATA`(#token("103","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>#isValidFunction(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("5","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(181) org.kframework.attributes.Location(Location(181,10,181,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidFunctions(`.WordStack_IELE-DATA`(.KList),#SemanticCastToInt(_),#token("0","Int"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(183) org.kframework.attributes.Location(Location(183,10,183,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidFunctions(#SemanticCastToWordStack(_),#SemanticCastToInt(_),#SemanticCastToInt(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(184) org.kframework.attributes.Location(Location(184,10,184,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #isValidFunction(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>`_andBool_`(#isValidLoad(#SemanticCastToWordStack(WS),`_-Int__INT-COMMON`(#SemanticCastToInt(SIZE),#token("1","Int"))),#isValidInstruction(#dasmOpCode(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS))),`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))) requires `_orBool__BOOL`(`_==Int_`(#SemanticCastToInt(W),#token("97","Int")),`_==Int_`(#SemanticCastToInt(W),#token("98","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(189) org.kframework.attributes.Location(Location(189,10,190,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #isValidFunction(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>#isValidFunctions(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE)) requires `_orBool__BOOL`(`_==Int_`(#SemanticCastToInt(W),#token("103","Int")),`_==Int_`(#SemanticCastToInt(W),#token("104","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(186) org.kframework.attributes.Location(Location(186,10,187,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #isValidFunction(`.WordStack_IELE-DATA`(.KList),#SemanticCastToInt(_),#token("0","Int"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(188) org.kframework.attributes.Location(Location(188,10,188,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #isValidFunction(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE))=>#isValidInstruction(#dasmOpCode(#SemanticCastToWordStack(WS)),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToInt(SIZE)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(191) org.kframework.attributes.Location(Location(191,10,191,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #isValidContract(#SemanticCastToWordStack(CODE))=>isValidContractAux(#SemanticCastToWordStack(CODE),#sizeWordStack(#SemanticCastToWordStack(CODE))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(146) org.kframework.attributes.Location(Location(146,10,146,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("98","Int"),#SemanticCastToWordStack(WS)))=>#dasmLoad(#token("98","Int"),#loadLen(#SemanticCastToWordStack(WS)),#loadOffset(#SemanticCastToWordStack(WS)),#SemanticCastToWordStack(WS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(426) org.kframework.attributes.Location(Location(426,10,426,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("97","Int"),#SemanticCastToWordStack(WS)))=>#dasmLoad(#token("97","Int"),#loadLen(#SemanticCastToWordStack(WS)),#loadOffset(#SemanticCastToWordStack(WS)),#SemanticCastToWordStack(WS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(425) org.kframework.attributes.Location(Location(425,10,425,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("96","Int"),#SemanticCastToWordStack(_)))=>`MOVE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(424) org.kframework.attributes.Location(Location(424,10,424,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("9","Int"),#SemanticCastToWordStack(_)))=>`MULMOD`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(382) org.kframework.attributes.Location(Location(382,10,382,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("87","Int"),#SemanticCastToWordStack(_)))=>`GAS`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(423) org.kframework.attributes.Location(Location(423,10,423,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("86","Int"),#SemanticCastToWordStack(_)))=>`MSIZE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(422) org.kframework.attributes.Location(Location(422,10,422,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("85","Int"),#SemanticCastToWordStack(_)))=>`SSTORE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(421) org.kframework.attributes.Location(Location(421,10,421,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("84","Int"),#SemanticCastToWordStack(_)))=>`SLOAD`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(420) org.kframework.attributes.Location(Location(420,10,420,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("83","Int"),#SemanticCastToWordStack(_)))=>`MSTORE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(419) org.kframework.attributes.Location(Location(419,10,419,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("82","Int"),#SemanticCastToWordStack(_)))=>`MSTOREN`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(418) org.kframework.attributes.Location(Location(418,10,418,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("81","Int"),#SemanticCastToWordStack(_)))=>`MLOAD`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(417) org.kframework.attributes.Location(Location(417,10,417,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("80","Int"),#SemanticCastToWordStack(_)))=>`MLOADN`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(416) org.kframework.attributes.Location(Location(416,10,416,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("8","Int"),#SemanticCastToWordStack(_)))=>`ADDMOD`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(381) org.kframework.attributes.Location(Location(381,10,381,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("7","Int"),#SemanticCastToWordStack(_)))=>`EXP`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(380) org.kframework.attributes.Location(Location(380,10,380,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("69","Int"),#SemanticCastToWordStack(_)))=>`GASLIMIT`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(415) org.kframework.attributes.Location(Location(415,10,415,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("68","Int"),#SemanticCastToWordStack(_)))=>`DIFFICULTY`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(414) org.kframework.attributes.Location(Location(414,10,414,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("67","Int"),#SemanticCastToWordStack(_)))=>`NUMBER`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(413) org.kframework.attributes.Location(Location(413,10,413,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("66","Int"),#SemanticCastToWordStack(_)))=>`TIMESTAMP`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(412) org.kframework.attributes.Location(Location(412,10,412,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("65","Int"),#SemanticCastToWordStack(_)))=>`BENEFICIARY`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(411) org.kframework.attributes.Location(Location(411,10,411,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("64","Int"),#SemanticCastToWordStack(_)))=>`BLOCKHASH`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(410) org.kframework.attributes.Location(Location(410,10,410,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("6","Int"),#SemanticCastToWordStack(_)))=>`MOD`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(379) org.kframework.attributes.Location(Location(379,10,379,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("59","Int"),#SemanticCastToWordStack(_)))=>`EXTCODESIZE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(409) org.kframework.attributes.Location(Location(409,10,409,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("58","Int"),#SemanticCastToWordStack(_)))=>`GASPRICE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(408) org.kframework.attributes.Location(Location(408,10,408,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("56","Int"),#SemanticCastToWordStack(_)))=>`CODESIZE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(407) org.kframework.attributes.Location(Location(407,10,407,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("52","Int"),#SemanticCastToWordStack(_)))=>`CALLVALUE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(406) org.kframework.attributes.Location(Location(406,10,406,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("51","Int"),#SemanticCastToWordStack(_)))=>`CALLER`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(405) org.kframework.attributes.Location(Location(405,10,405,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("50","Int"),#SemanticCastToWordStack(_)))=>`ORIGIN`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(404) org.kframework.attributes.Location(Location(404,10,404,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("49","Int"),#SemanticCastToWordStack(_)))=>`BALANCE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(403) org.kframework.attributes.Location(Location(403,10,403,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("48","Int"),#SemanticCastToWordStack(_)))=>`ADDRESS`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(402) org.kframework.attributes.Location(Location(402,10,402,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("4","Int"),#SemanticCastToWordStack(_)))=>`DIV`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(378) org.kframework.attributes.Location(Location(378,10,378,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("32","Int"),#SemanticCastToWordStack(_)))=>`SHA3`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(401) org.kframework.attributes.Location(Location(401,10,401,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("3","Int"),#SemanticCastToWordStack(_)))=>`SUB`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(377) org.kframework.attributes.Location(Location(377,10,377,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("28","Int"),#SemanticCastToWordStack(_)))=>`LOGARITHM2`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(400) org.kframework.attributes.Location(Location(400,10,400,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("27","Int"),#SemanticCastToWordStack(_)))=>`SHIFT`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(399) org.kframework.attributes.Location(Location(399,10,399,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("26","Int"),#SemanticCastToWordStack(_)))=>`BYTE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(398) org.kframework.attributes.Location(Location(398,10,398,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("255","Int"),#SemanticCastToWordStack(_)))=>`SELFDESTRUCT`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(447) org.kframework.attributes.Location(Location(447,10,447,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("254","Int"),#SemanticCastToWordStack(_)))=>`INVALID`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(446) org.kframework.attributes.Location(Location(446,10,446,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("250","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))))=>`CALLADDRESS`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(445) org.kframework.attributes.Location(Location(445,10,445,79)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("25","Int"),#SemanticCastToWordStack(_)))=>`NOT`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(397) org.kframework.attributes.Location(Location(397,10,397,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("249","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))))=>`LOCALCALLDYN`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(444) org.kframework.attributes.Location(Location(444,10,444,111)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("248","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`_:__IELE-DATA`(#SemanticCastToInt(W5),`_:__IELE-DATA`(#SemanticCastToInt(W6),#SemanticCastToWordStack(WS)))))))))=>`LOCALCALL`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W5),#token("256","Int")),#SemanticCastToInt(W6))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(443) org.kframework.attributes.Location(Location(443,10,443,139)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("247","Int"),#SemanticCastToWordStack(_)))=>`REVERT`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(442) org.kframework.attributes.Location(Location(442,10,442,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("246","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))))=>`RETURN`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(441) org.kframework.attributes.Location(Location(441,10,441,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("245","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))))=>`STATICCALLDYN`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(440) org.kframework.attributes.Location(Location(440,10,440,112)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("244","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`_:__IELE-DATA`(#SemanticCastToInt(W5),`_:__IELE-DATA`(#SemanticCastToInt(W6),#SemanticCastToWordStack(WS)))))))))=>`STATICCALL`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W5),#token("256","Int")),#SemanticCastToInt(W6))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(439) org.kframework.attributes.Location(Location(439,10,439,140)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("243","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))))=>`CALLDYN`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(438) org.kframework.attributes.Location(Location(438,10,438,106)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("242","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`_:__IELE-DATA`(#SemanticCastToInt(W5),`_:__IELE-DATA`(#SemanticCastToInt(W6),#SemanticCastToWordStack(WS)))))))))=>`CALL`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W5),#token("256","Int")),#SemanticCastToInt(W6))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(437) org.kframework.attributes.Location(Location(437,10,437,134)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("241","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))))=>`COPYCREATE`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(436) org.kframework.attributes.Location(Location(436,10,436,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("240","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))))=>`CREATE`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(435) org.kframework.attributes.Location(Location(435,10,435,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("24","Int"),#SemanticCastToWordStack(_)))=>`XOR`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(396) org.kframework.attributes.Location(Location(396,10,396,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("23","Int"),#SemanticCastToWordStack(_)))=>`OR`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(395) org.kframework.attributes.Location(Location(395,10,395,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("22","Int"),#SemanticCastToWordStack(_)))=>`AND`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(394) org.kframework.attributes.Location(Location(394,10,394,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("21","Int"),#SemanticCastToWordStack(_)))=>`ISZERO`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(393) org.kframework.attributes.Location(Location(393,10,393,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("20","Int"),#SemanticCastToWordStack(_)))=>`EQ`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(392) org.kframework.attributes.Location(Location(392,10,392,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("2","Int"),#SemanticCastToWordStack(_)))=>`MUL`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(376) org.kframework.attributes.Location(Location(376,10,376,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("19","Int"),#SemanticCastToWordStack(_)))=>`GE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(391) org.kframework.attributes.Location(Location(391,10,391,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("18","Int"),#SemanticCastToWordStack(_)))=>`LE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(390) org.kframework.attributes.Location(Location(390,10,390,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("17","Int"),#SemanticCastToWordStack(_)))=>`GT`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(389) org.kframework.attributes.Location(Location(389,10,389,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("164","Int"),#SemanticCastToWordStack(_)))=>`LOG4`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(434) org.kframework.attributes.Location(Location(434,10,434,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("163","Int"),#SemanticCastToWordStack(_)))=>`LOG3`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(433) org.kframework.attributes.Location(Location(433,10,433,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("162","Int"),#SemanticCastToWordStack(_)))=>`LOG2`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(432) org.kframework.attributes.Location(Location(432,10,432,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("161","Int"),#SemanticCastToWordStack(_)))=>`LOG1`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(431) org.kframework.attributes.Location(Location(431,10,431,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("160","Int"),#SemanticCastToWordStack(_)))=>`LOG0`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(430) org.kframework.attributes.Location(Location(430,10,430,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("16","Int"),#SemanticCastToWordStack(_)))=>`LT`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(388) org.kframework.attributes.Location(Location(388,10,388,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("15","Int"),#SemanticCastToWordStack(_)))=>`NE`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(387) org.kframework.attributes.Location(Location(387,10,387,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("13","Int"),#SemanticCastToWordStack(_)))=>`BSWAP`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(386) org.kframework.attributes.Location(Location(386,10,386,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("12","Int"),#SemanticCastToWordStack(_)))=>`TWOS`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(385) org.kframework.attributes.Location(Location(385,10,385,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("11","Int"),#SemanticCastToWordStack(_)))=>`SIGNEXTEND`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(384) org.kframework.attributes.Location(Location(384,10,384,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("102","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))))=>`BRLABEL`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(429) org.kframework.attributes.Location(Location(429,10,429,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("101","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))))=>`BRC`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(428) org.kframework.attributes.Location(Location(428,10,428,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("100","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))))=>`BR`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(427) org.kframework.attributes.Location(Location(427,10,427,70)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("10","Int"),#SemanticCastToWordStack(_)))=>`EXPMOD`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(383) org.kframework.attributes.Location(Location(383,10,383,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(`_:__IELE-DATA`(#token("1","Int"),#SemanticCastToWordStack(_)))=>`ADD`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(375) org.kframework.attributes.Location(Location(375,10,375,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmOpCode(#SemanticCastToWordStack(_))=>encodingError(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(448) org.kframework.attributes.Location(Location(448,10,448,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #dasmLoad(#token("98","Int"),#SemanticCastToInt(LEN),#SemanticCastToInt(POS),#SemanticCastToWordStack(WS))=>`LOADNEG`(`_+Int_`(#SemanticCastToInt(LEN),#SemanticCastToInt(POS)),#asUnsigned(`_[_.._]_IELE-DATA`(#SemanticCastToWordStack(WS),#SemanticCastToInt(POS),#SemanticCastToInt(LEN)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(453) org.kframework.attributes.Location(Location(453,10,453,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmLoad(#token("97","Int"),#SemanticCastToInt(LEN),#SemanticCastToInt(POS),#SemanticCastToWordStack(WS))=>`LOADPOS`(`_+Int_`(#SemanticCastToInt(LEN),#SemanticCastToInt(POS)),#asUnsigned(`_[_.._]_IELE-DATA`(#SemanticCastToWordStack(WS),#SemanticCastToInt(POS),#SemanticCastToInt(LEN)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(452) org.kframework.attributes.Location(Location(452,10,452,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`XOR`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=xor_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(281) org.kframework.attributes.Location(Location(281,10,281,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`TWOS`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=twos_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(277) org.kframework.attributes.Location(Location(277,10,277,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`TIMESTAMP`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.timestamp","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(251) org.kframework.attributes.Location(Location(251,10,251,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`SUB`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=sub_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(272) org.kframework.attributes.Location(Location(272,10,272,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`STATICCALL`(#SemanticCastToInt(LABEL),#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(F),#SemanticCastToIeleName(_))=>`_=staticcall_at_(_)gaslimit__IELE-COMMON`(`%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"),`_+Int_`(#SemanticCastToInt(RETS),#token("1","Int"))),`@__IELE-COMMON`(getIeleName(`Map:lookup`(#SemanticCastToMap(F),#SemanticCastToInt(LABEL)))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("2","Int"),#SemanticCastToInt(RETS))),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("3","Int"),#SemanticCastToInt(RETS)),#SemanticCastToInt(ARGS)),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("1","Int"),#SemanticCastToInt(RETS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(301) org.kframework.attributes.Location(Location(301,10,301,242)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`STATICCALLDYN`(#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(F),#SemanticCastToIeleName(_))=>`_=staticcall_at_(_)gaslimit__IELE-COMMON`(`%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"),`_+Int_`(#SemanticCastToInt(RETS),#token("1","Int"))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("1","Int"),#SemanticCastToInt(RETS))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("3","Int"),#SemanticCastToInt(RETS))),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("4","Int"),#SemanticCastToInt(RETS)),#SemanticCastToInt(ARGS)),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("2","Int"),#SemanticCastToInt(RETS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(302) org.kframework.attributes.Location(Location(302,10,302,235)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`SSTORE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`sstore_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(264) org.kframework.attributes.Location(Location(264,10,264,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`SLOAD`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=sload__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(261) org.kframework.attributes.Location(Location(261,10,261,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`SIGNEXTEND`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=sext_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(276) org.kframework.attributes.Location(Location(276,10,276,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`SHIFT`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=shift_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(282) org.kframework.attributes.Location(Location(282,10,282,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`SHA3`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=sha3__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(259) org.kframework.attributes.Location(Location(259,10,259,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`SELFDESTRUCT`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`selfdestruct__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(239) org.kframework.attributes.Location(Location(239,10,239,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`REVERT`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`revert__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(312) org.kframework.attributes.Location(Location(312,10,312,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`RETURN`(#token("0","Int")),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`retvoid_IELE-COMMON`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(315) org.kframework.attributes.Location(Location(315,10,315,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`RETURN`(#SemanticCastToInt(RETS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`ret__IELE-COMMON`(`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"),#SemanticCastToInt(RETS))) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(RETS),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(313) org.kframework.attributes.Location(Location(313,10,314,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #dasmInstructionAux(`OR`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=or_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(280) org.kframework.attributes.Location(Location(280,10,280,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`ORIGIN`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.origin","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(247) org.kframework.attributes.Location(Location(247,10,247,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`NUMBER`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.number","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(252) org.kframework.attributes.Location(Location(252,10,252,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`NOT`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=not__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(258) org.kframework.attributes.Location(Location(258,10,258,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`NE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=cmp__,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`ne_IELE-COMMON`(.KList),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(289) org.kframework.attributes.Location(Location(289,10,289,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MUL`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=mul_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(271) org.kframework.attributes.Location(Location(271,10,271,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MULMOD`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=mulmod_,_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(293) org.kframework.attributes.Location(Location(293,10,293,128)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MSTORE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`store_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(263) org.kframework.attributes.Location(Location(263,10,263,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MSTOREN`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`store_,_,_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(296) org.kframework.attributes.Location(Location(296,10,296,127)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MSIZE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.msize","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(254) org.kframework.attributes.Location(Location(254,10,254,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MOVE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(256) org.kframework.attributes.Location(Location(256,10,256,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MOD`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=mod_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(274) org.kframework.attributes.Location(Location(274,10,274,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MLOAD`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=load__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(260) org.kframework.attributes.Location(Location(260,10,260,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`MLOADN`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=load_,_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(295) org.kframework.attributes.Location(Location(295,10,295,128)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LT`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=cmp__,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`lt_IELE-COMMON`(.KList),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(284) org.kframework.attributes.Location(Location(284,10,284,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOGARITHM2`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=log2__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(262) org.kframework.attributes.Location(Location(262,10,262,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOG4`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`log_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("4","Int")),`.List{"operandList"}`(.KList)))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(299) org.kframework.attributes.Location(Location(299,10,299,141)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOG3`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`log_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int")),`.List{"operandList"}`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(297) org.kframework.attributes.Location(Location(297,10,297,125)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOG2`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`log_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(290) org.kframework.attributes.Location(Location(290,10,290,112)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOG1`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`log_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(265) org.kframework.attributes.Location(Location(265,10,265,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOG0`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`log__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(241) org.kframework.attributes.Location(Location(241,10,241,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOCALCALL`(#SemanticCastToInt(LABEL),#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(F),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(`%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"),#SemanticCastToInt(RETS)),`@__IELE-COMMON`(getIeleName(`Map:lookupOrDefault`(#SemanticCastToMap(F),#SemanticCastToInt(LABEL),#SemanticCastToInt(LABEL)))),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(305) org.kframework.attributes.Location(Location(305,10,305,177)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOCALCALLDYN`(#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(F),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(`%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"),#SemanticCastToInt(RETS)),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToInt(RETS)),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("1","Int"),#SemanticCastToInt(RETS)),#SemanticCastToInt(ARGS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(306) org.kframework.attributes.Location(Location(306,10,306,154)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOADPOS`(#SemanticCastToInt(_),#SemanticCastToInt(I)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),#SemanticCastToInt(I)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(233) org.kframework.attributes.Location(Location(233,10,233,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LOADNEG`(#SemanticCastToInt(_),#SemanticCastToInt(I)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`_-Int__INT-COMMON`(#token("0","Int"),#SemanticCastToInt(I))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(234) org.kframework.attributes.Location(Location(234,10,234,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`LE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=cmp__,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`le_IELE-COMMON`(.KList),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(285) org.kframework.attributes.Location(Location(285,10,285,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`ISZERO`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=iszero__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(257) org.kframework.attributes.Location(Location(257,10,257,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`INVALID`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(`.List{"lvalueList"}`(.KList),`@__IELE-COMMON`(#token("iele.invalid","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(236) org.kframework.attributes.Location(Location(236,10,236,110)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`GT`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=cmp__,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`gt_IELE-COMMON`(.KList),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(286) org.kframework.attributes.Location(Location(286,10,286,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`GE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=cmp__,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`ge_IELE-COMMON`(.KList),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(287) org.kframework.attributes.Location(Location(287,10,287,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`GAS`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gas","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(245) org.kframework.attributes.Location(Location(245,10,245,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`GASPRICE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gasprice","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(244) org.kframework.attributes.Location(Location(244,10,244,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`GASLIMIT`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gaslimit","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(243) org.kframework.attributes.Location(Location(243,10,243,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`EXTCODESIZE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(266) org.kframework.attributes.Location(Location(266,10,266,120)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`EXP`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=exp_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(275) org.kframework.attributes.Location(Location(275,10,275,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`EXPMOD`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=expmod_,_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(294) org.kframework.attributes.Location(Location(294,10,294,128)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`EQ`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=cmp__,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`eq_IELE-COMMON`(.KList),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(288) org.kframework.attributes.Location(Location(288,10,288,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`DIV`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=div_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(273) org.kframework.attributes.Location(Location(273,10,273,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`DIFFICULTY`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.difficulty","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(253) org.kframework.attributes.Location(Location(253,10,253,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`CREATE`(#SemanticCastToInt(LABEL),#SemanticCastToInt(ARGS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(NAME))=>`_,_=create_(_)send__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`_+.+IeleName__IELE-BINARY`(#SemanticCastToIeleName(NAME),`String2IeleName`(`Int2String`(#SemanticCastToInt(LABEL)))),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int"),#SemanticCastToInt(ARGS)),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(309) org.kframework.attributes.Location(Location(309,10,309,207)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`COPYCREATE`(#SemanticCastToInt(ARGS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_,_=copycreate_(_)send__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int")),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("4","Int"),#SemanticCastToInt(ARGS)),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(310) org.kframework.attributes.Location(Location(310,10,310,167)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`CODESIZE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.codesize","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(249) org.kframework.attributes.Location(Location(249,10,249,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`CALL`(#SemanticCastToInt(LABEL),#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(F),#SemanticCastToIeleName(_))=>`_=call_at_(_)send_,gaslimit__IELE-COMMON`(`%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"),`_+Int_`(#SemanticCastToInt(RETS),#token("1","Int"))),`@__IELE-COMMON`(getIeleName(`Map:lookup`(#SemanticCastToMap(F),#SemanticCastToInt(LABEL)))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("2","Int"),#SemanticCastToInt(RETS))),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("4","Int"),#SemanticCastToInt(RETS)),#SemanticCastToInt(ARGS)),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("3","Int"),#SemanticCastToInt(RETS))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("1","Int"),#SemanticCastToInt(RETS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(303) org.kframework.attributes.Location(Location(303,10,303,261)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`CALLVALUE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.callvalue","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(242) org.kframework.attributes.Location(Location(242,10,242,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`CALLER`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.caller","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(248) org.kframework.attributes.Location(Location(248,10,248,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`CALLDYN`(#SemanticCastToInt(ARGS),#SemanticCastToInt(RETS)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(F),#SemanticCastToIeleName(_))=>`_=call_at_(_)send_,gaslimit__IELE-COMMON`(`%l(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int"),`_+Int_`(#SemanticCastToInt(RETS),#token("1","Int"))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("1","Int"),#SemanticCastToInt(RETS))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("3","Int"),#SemanticCastToInt(RETS))),`%o(_,_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("5","Int"),#SemanticCastToInt(RETS)),#SemanticCastToInt(ARGS)),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("4","Int"),#SemanticCastToInt(RETS))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),`_+Int_`(#token("2","Int"),#SemanticCastToInt(RETS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(304) org.kframework.attributes.Location(Location(304,10,304,254)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`CALLADDRESS`(#SemanticCastToInt(LABEL)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(F),#SemanticCastToIeleName(_))=>`_=calladdress_at__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`@__IELE-COMMON`(getIeleName(`Map:lookup`(#SemanticCastToMap(F),#SemanticCastToInt(LABEL)))),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(307) org.kframework.attributes.Location(Location(307,10,307,140)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BYTE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=byte_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(283) org.kframework.attributes.Location(Location(283,10,283,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BSWAP`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=bswap_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(278) org.kframework.attributes.Location(Location(278,10,278,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BR`(#SemanticCastToInt(LABEL)),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`br__IELE-COMMON`(#SemanticCastToInt(LABEL)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(235) org.kframework.attributes.Location(Location(235,10,235,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BRLABEL`(#SemanticCastToInt(LABEL)),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>label(#SemanticCastToInt(LABEL)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(237) org.kframework.attributes.Location(Location(237,10,237,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BRC`(#SemanticCastToInt(LABEL)),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`br_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),#SemanticCastToInt(LABEL)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(240) org.kframework.attributes.Location(Location(240,10,240,89)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BLOCKHASH`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.blockhash","IeleName")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(267) org.kframework.attributes.Location(Location(267,10,267,120)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BENEFICIARY`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.beneficiary","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(250) org.kframework.attributes.Location(Location(250,10,250,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`BALANCE`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.balance","IeleName")),operandList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(268) org.kframework.attributes.Location(Location(268,10,268,120)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`AND`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=and_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(279) org.kframework.attributes.Location(Location(279,10,279,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`ADD`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=add_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(270) org.kframework.attributes.Location(Location(270,10,270,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`ADDRESS`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=call_(_)_IELE-COMMON`(lvalueList(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.address","IeleName")),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(246) org.kframework.attributes.Location(Location(246,10,246,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstructionAux(`ADDMOD`(.KList),#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#SemanticCastToMap(_),#SemanticCastToIeleName(_))=>`_=addmod_,_,__IELE-COMMON`(`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("0","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("1","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("2","Int")),`%(_,_,_,_)_IELE-BINARY`(#SemanticCastToInt(R),#SemanticCastToInt(W),#SemanticCastToInt(M),#token("3","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(292) org.kframework.attributes.Location(Location(292,10,292,128)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstruction(`LOADPOS`(#SemanticCastToInt(N),#SemanticCastToInt(W)),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME))=>#dasmInstructionAux(`LOADPOS`(#SemanticCastToInt(N),#SemanticCastToInt(W)),#asUnsigned(#take(ceilDiv(#SemanticCastToInt(NBITS),#token("8","Int")),#SemanticCastToWordStack(WS))),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(`_<<Int__INT-COMMON`(#token("1","Int"),#SemanticCastToInt(NBITS)),#token("1","Int")),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(229) org.kframework.attributes.Location(Location(229,10,229,214)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstruction(`LOADNEG`(#SemanticCastToInt(N),#SemanticCastToInt(W)),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME))=>#dasmInstructionAux(`LOADNEG`(#SemanticCastToInt(N),#SemanticCastToInt(W)),#asUnsigned(#take(ceilDiv(#SemanticCastToInt(NBITS),#token("8","Int")),#SemanticCastToWordStack(WS))),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(`_<<Int__INT-COMMON`(#token("1","Int"),#SemanticCastToInt(NBITS)),#token("1","Int")),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(230) org.kframework.attributes.Location(Location(230,10,230,214)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmInstruction(#SemanticCastToOpCode(OP),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME))=>#dasmInstructionAux(#SemanticCastToOpCode(OP),#asUnsigned(#take(`_-Int__INT-COMMON`(#opWidth(#SemanticCastToOpCode(OP),#SemanticCastToInt(NBITS)),#opCodeWidth(#SemanticCastToOpCode(OP))),#SemanticCastToWordStack(WS))),#SemanticCastToInt(NBITS),`_-Int__INT-COMMON`(`_<<Int__INT-COMMON`(#token("1","Int"),#SemanticCastToInt(NBITS)),#token("1","Int")),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(231) org.kframework.attributes.Location(Location(231,10,231,214)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #dasmFunctions(`_:__IELE-DATA`(#token("104","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME))=>#dasmFunction(#token("true","Bool"),getIeleName(`Map:lookupOrDefault`(#SemanticCastToMap(FUNCS),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)))),#SemanticCastToIeleName(NAME),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4)),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),`.List{"instructionList"}`(.KList),.K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(173) org.kframework.attributes.Location(Location(173,10,173,235)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmFunctions(`_:__IELE-DATA`(#token("103","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),#SemanticCastToWordStack(WS)))))),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME))=>#dasmFunction(#token("false","Bool"),getIeleName(`Map:lookupOrDefault`(#SemanticCastToMap(FUNCS),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)))),#SemanticCastToIeleName(NAME),`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int")),#SemanticCastToInt(W4)),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),`.List{"instructionList"}`(.KList),.K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(172) org.kframework.attributes.Location(Location(172,10,172,236)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmFunctions(`.WordStack_IELE-DATA`(.KList),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME))=>`.List{"topLevelDefinitionList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(174) org.kframework.attributes.Location(Location(174,10,174,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmFunction(#token("true","Bool"),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToInstructions(INSTRS),.K)=>topLevelDefinitionList(`definepublic_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInt(SIG)),#toBlocks(#SemanticCastToInstructions(INSTRS))),#dasmFunctions(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(CNAME))) requires `_orBool__BOOL`(`_==Int_`(#SemanticCastToInt(W),#token("103","Int")),`_==Int_`(#SemanticCastToInt(W),#token("104","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(200) org.kframework.attributes.Location(Location(200,10,201,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #dasmFunction(#token("true","Bool"),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),`.WordStack_IELE-DATA`(.KList),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToInstructions(INSTRS),.K)=>topLevelDefinitionList(`definepublic_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInt(SIG)),#toBlocks(#SemanticCastToInstructions(INSTRS))),`.List{"topLevelDefinitionList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(203) org.kframework.attributes.Location(Location(203,10,203,160)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmFunction(#token("false","Bool"),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToInstructions(INSTRS),.K)=>topLevelDefinitionList(`define_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInt(SIG)),#toBlocks(#SemanticCastToInstructions(INSTRS))),#dasmFunctions(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(CNAME))) requires `_orBool__BOOL`(`_==Int_`(#SemanticCastToInt(W),#token("103","Int")),`_==Int_`(#SemanticCastToInt(W),#token("104","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(198) org.kframework.attributes.Location(Location(198,10,199,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #dasmFunction(#token("false","Bool"),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),`.WordStack_IELE-DATA`(.KList),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToInstructions(INSTRS),.K)=>topLevelDefinitionList(`define_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInt(SIG)),#toBlocks(#SemanticCastToInstructions(INSTRS))),`.List{"topLevelDefinitionList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(202) org.kframework.attributes.Location(Location(202,10,202,154)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmFunction(#SemanticCastToBool(PUBLIC),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToInstructions(INSTRS),.K)=>#dasmFunction(#SemanticCastToBool(PUBLIC),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToInstructions(INSTRS),#dasmOpCode(#SemanticCastToWordStack(WS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(205) org.kframework.attributes.Location(Location(205,10,205,165)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #dasmFunction(#SemanticCastToBool(PUBLIC),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToInstructions(INSTRS),#SemanticCastToOpCode(OP))=>#dasmFunction(#SemanticCastToBool(PUBLIC),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(CNAME),#SemanticCastToInt(SIG),#drop(#opWidth(#SemanticCastToOpCode(OP),#SemanticCastToInt(NBITS)),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),instructionList(#dasmInstruction(#SemanticCastToOpCode(OP),#take(`_-Int__INT-COMMON`(#opWidth(#SemanticCastToOpCode(OP),#SemanticCastToInt(NBITS)),#opCodeWidth(#SemanticCastToOpCode(OP))),#drop(#opCodeWidth(#SemanticCastToOpCode(OP)),#SemanticCastToWordStack(WS))),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(CNAME)),#SemanticCastToInstructions(INSTRS)),.K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(207) org.kframework.attributes.Location(Location(207,10,207,308)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmContractAux2(`_:__IELE-DATA`(#token("106","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME),#SemanticCastToTopLevelDefinitions(DEFS),#SemanticCastToInt(N),#SemanticCastToInt(SIZE),#SemanticCastToString(BYTES))=>contractAppend(#dasmContract(#take(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),#SemanticCastToWordStack(WS)),`_+.+IeleName__IELE-BINARY`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(N))),#dasmContractAux2(#drop(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME),topLevelDefinitionList(`externalcontract__IELE-COMMON`(`_+.+IeleName__IELE-BINARY`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(N))),#SemanticCastToTopLevelDefinitions(DEFS)),`_+Int_`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToInt(SIZE),#SemanticCastToString(BYTES))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(139) org.kframework.attributes.Location(Location(139,10,139,299)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmContractAux2(`_:__IELE-DATA`(#token("105","Int"),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),#SemanticCastToWordStack(WS)))),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME),#SemanticCastToTopLevelDefinitions(DEFS),#SemanticCastToInt(N),#SemanticCastToInt(SIZE),#SemanticCastToString(BYTES))=>#dasmContractAux2(#drop(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),#SemanticCastToWordStack(WS)),#SemanticCastToInt(NBITS),`_Map_`(`_|->_`(#SemanticCastToInt(N),`String2IeleName`(#unparseByteStack(#take(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("256","Int")),#SemanticCastToInt(W2)),#SemanticCastToWordStack(WS))))),#SemanticCastToMap(FUNCS)),#SemanticCastToIeleName(NAME),#SemanticCastToTopLevelDefinitions(DEFS),`_+Int_`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToInt(SIZE),#SemanticCastToString(BYTES)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(138) org.kframework.attributes.Location(Location(138,10,138,259)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmContractAux2(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME),#SemanticCastToTopLevelDefinitions(DEFS),#SemanticCastToInt(N),#SemanticCastToInt(SIZE),#SemanticCastToString(BYTES))=>contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(SIZE),#SemanticCastToString(BYTES),topLevelAppend(#SemanticCastToTopLevelDefinitions(DEFS),#dasmFunctions(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),#SemanticCastToMap(FUNCS),#SemanticCastToIeleName(NAME)))),`.List{"contractDefinitionList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(140) org.kframework.attributes.Location(Location(140,10,140,181)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #dasmContractAux1(`_:__IELE-DATA`(#token("99","Int"),`_:__IELE-DATA`(#SemanticCastToInt(NBITS),#SemanticCastToWordStack(WS))),#SemanticCastToIeleName(NAME),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`.WordStack_IELE-DATA`(.KList))))))=>#dasmContractAux2(#SemanticCastToWordStack(WS),#SemanticCastToInt(NBITS),`_|->_`(#token("0","Int"),#token("init","IeleName")),#SemanticCastToIeleName(NAME),`.List{"topLevelDefinitionList"}`(.KList),#token("1","Int"),`_+Int_`(#sizeWordStack(#SemanticCastToWordStack(WS)),#token("6","Int")),#unparseByteStack(`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`_:__IELE-DATA`(#token("99","Int"),`_:__IELE-DATA`(#SemanticCastToInt(NBITS),#SemanticCastToWordStack(WS))))))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(137) org.kframework.attributes.Location(Location(137,10,137,235)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmContract(`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`_:__IELE-DATA`(#token("99","Int"),#SemanticCastToWordStack(WS)))))),#SemanticCastToIeleName(NAME))=>#dasmContractAux1(`_:__IELE-DATA`(#token("99","Int"),#take(`_-Int__INT-COMMON`(`_+Int_`(`_+Int_`(`_+Int_`(`_*Int__INT-COMMON`(#SemanticCastToInt(W1),#token("16777216","Int")),`_*Int__INT-COMMON`(#SemanticCastToInt(W2),#token("65536","Int"))),`_*Int__INT-COMMON`(#SemanticCastToInt(W3),#token("256","Int"))),#SemanticCastToInt(W4)),#token("1","Int")),#SemanticCastToWordStack(WS))),#SemanticCastToIeleName(NAME),`_:__IELE-DATA`(#SemanticCastToInt(W1),`_:__IELE-DATA`(#SemanticCastToInt(W2),`_:__IELE-DATA`(#SemanticCastToInt(W3),`_:__IELE-DATA`(#SemanticCastToInt(W4),`.WordStack_IELE-DATA`(.KList)))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(135) org.kframework.attributes.Location(Location(135,10,135,201)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #dasmContract(`.WordStack_IELE-DATA`(.KList),#SemanticCastToIeleName(_))=>`#emptyCode_IELE-CONFIGURATION`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(134) org.kframework.attributes.Location(Location(134,10,134,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( ----------------------------------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(133,2,133,153)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ---------------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(162,2,162,134)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ----------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(171,2,171,129)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(228,2,228,119)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( -------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(211,2,211,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( -------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(322,2,322,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(327,2,327,83)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ---------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(180,2,180,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ----------------------------------------------------------------------,[org.kframework.attributes.Location(Location(451,2,451,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( --------------------------------------------------------------------,[org.kframework.attributes.Location(Location(318,2,318,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( -------------------------------------------------------------------,[org.kframework.attributes.Location(Location(145,2,145,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ------------------------------------------------------,[org.kframework.attributes.Location(Location(374,2,374,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ---------------------------------------------------,[org.kframework.attributes.Location(Location(332,2,332,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( -------------------------------------------------,[org.kframework.attributes.Location(Location(336,2,336,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
  ModuleComment( ---------------------------------------------,[org.kframework.attributes.Location(Location(355,2,355,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))])
endmodule


module IELE-BINARY$SYNTAX [org.kframework.attributes.Location(Location(11,1,455,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-binary.k))]
  imports IELE-COMMON$SYNTAX
  imports IELE$SYNTAX
  syntax priority topLevelDefinitionList > topLevelAppend
  syntax priority contractDefinitionList > contractAppend
  syntax UnOp ::= "TIMESTAMP" "(" ")" [klabel(TIMESTAMP)]
  syntax UnOp ::= "SELFDESTRUCT" "(" ")" [klabel(SELFDESTRUCT)]
  syntax UnOp ::= "REVERT" "(" ")" [klabel(REVERT)]
  syntax UnOp ::= "ORIGIN" "(" ")" [klabel(ORIGIN)]
  syntax UnOp ::= "NUMBER" "(" ")" [klabel(NUMBER)]
  syntax UnOp ::= "MSIZE" "(" ")" [klabel(MSIZE)]
  syntax UnOp ::= "LOG0" "(" ")" [klabel(LOG0)]
  syntax UnOp ::= "LOADPOS" "(" Int "," Int ")" [klabel(LOADPOS)]
  syntax UnOp ::= "LOADNEG" "(" Int "," Int ")" [klabel(LOADNEG)]
  syntax UnOp ::= "GASPRICE" "(" ")" [klabel(GASPRICE)]
  syntax UnOp ::= "GASLIMIT" "(" ")" [klabel(GASLIMIT)]
  syntax UnOp ::= "GAS" "(" ")" [klabel(GAS)]
  syntax UnOp ::= "DIFFICULTY" "(" ")" [klabel(DIFFICULTY)]
  syntax UnOp ::= "CODESIZE" "(" ")" [klabel(CODESIZE)]
  syntax UnOp ::= "CALLVALUE" "(" ")" [klabel(CALLVALUE)]
  syntax UnOp ::= "CALLER" "(" ")" [klabel(CALLER)]
  syntax UnOp ::= "BRC" "(" Int ")" [klabel(BRC)]
  syntax UnOp ::= "BENEFICIARY" "(" ")" [klabel(BENEFICIARY)]
  syntax UnOp ::= "ADDRESS" "(" ")" [klabel(ADDRESS)]
  syntax TopLevelDefinitions ::= TopLevelDefinitions "++TopLevelDefinitions" TopLevelDefinitions [function() klabel(topLevelAppend)]
  syntax TopLevelDefinitions ::= "#dasmFunctions" "(" WordStack "," Int "," Map "," IeleName ")" [function() klabel(#dasmFunctions)]
  syntax TopLevelDefinitions ::= "#dasmFunction" "(" Bool "," IeleName "," IeleName "," Int "," WordStack "," Int "," Map "," Instructions "," K ")" [function() klabel(#dasmFunction)]
  syntax TernOp ::= "XOR" "(" ")" [klabel(XOR)]
  syntax TernOp ::= "TWOS" "(" ")" [klabel(TWOS)]
  syntax TernOp ::= "SUB" "(" ")" [klabel(SUB)]
  syntax TernOp ::= "SIGNEXTEND" "(" ")" [klabel(SIGNEXTEND)]
  syntax TernOp ::= "SHIFT" "(" ")" [klabel(SHIFT)]
  syntax TernOp ::= "OR" "(" ")" [klabel(OR)]
  syntax TernOp ::= "NE" "(" ")" [klabel(NE)]
  syntax TernOp ::= "MUL" "(" ")" [klabel(MUL)]
  syntax TernOp ::= "MOD" "(" ")" [klabel(MOD)]
  syntax TernOp ::= "LT" "(" ")" [klabel(LT)]
  syntax TernOp ::= "LOG2" "(" ")" [klabel(LOG2)]
  syntax TernOp ::= "LE" "(" ")" [klabel(LE)]
  syntax TernOp ::= "GT" "(" ")" [klabel(GT)]
  syntax TernOp ::= "GE" "(" ")" [klabel(GE)]
  syntax TernOp ::= "EXP" "(" ")" [klabel(EXP)]
  syntax TernOp ::= "EQ" "(" ")" [klabel(EQ)]
  syntax TernOp ::= "DIV" "(" ")" [klabel(DIV)]
  syntax TernOp ::= "BYTE" "(" ")" [klabel(BYTE)]
  syntax TernOp ::= "BSWAP" "(" ")" [klabel(BSWAP)]
  syntax TernOp ::= "AND" "(" ")" [klabel(AND)]
  syntax TernOp ::= "ADD" "(" ")" [klabel(ADD)]
  syntax ReturnOp ::= "RETURN" "(" Int ")" [klabel(RETURN)]
  syntax QuadOp ::= "MULMOD" "(" ")" [klabel(MULMOD)]
  syntax QuadOp ::= "MSTOREN" "(" ")" [klabel(MSTOREN)]
  syntax QuadOp ::= "MLOADN" "(" ")" [klabel(MLOADN)]
  syntax QuadOp ::= "LOG3" "(" ")" [klabel(LOG3)]
  syntax QuadOp ::= "EXPMOD" "(" ")" [klabel(EXPMOD)]
  syntax QuadOp ::= "ADDMOD" "(" ")" [klabel(ADDMOD)]
  syntax PseudoInstruction ::= "label" "(" Int ")" [klabel(label)]
  syntax OpCode ::= UnOp
  syntax OpCode ::= TernOp
  syntax OpCode ::= ReturnOp
  syntax OpCode ::= QuadOp
  syntax OpCode ::= NullOp
  syntax OpCode ::= LocalCallOp
  syntax OpCode ::= FiveOp
  syntax OpCode ::= CreateOp
  syntax OpCode ::= CopyCreateOp
  syntax OpCode ::= CallOp
  syntax OpCode ::= BinOp
  syntax OpCode ::= "encodingError" "(" ")" [klabel(encodingError)]
  syntax OpCode ::= "#dasmOpCode" "(" WordStack ")" [function() klabel(#dasmOpCode)]
  syntax OpCode ::= "#dasmLoad" "(" Int "," Int "," Int "," WordStack ")" [function() klabel(#dasmLoad)]
  syntax NullOp ::= "INVALID" "(" ")" [klabel(INVALID)]
  syntax NullOp ::= "BRLABEL" "(" Int ")" [klabel(BRLABEL)]
  syntax NullOp ::= "BR" "(" Int ")" [klabel(BR)]
  syntax NonEmptyOperands ::= "%o" "(" Int "," Int "," Int "," Int "," Int ")" [function()]
  syntax LocalCallOp ::= "LOCALCALLDYN" "(" Int "," Int ")" [klabel(LOCALCALLDYN)]
  syntax LocalCallOp ::= "LOCALCALL" "(" Int "," Int "," Int ")" [klabel(LOCALCALL)]
  syntax LValues ::= "%l" "(" Int "," Int "," Int "," Int "," Int ")" [function()]
  syntax LValue ::= "%" "(" Int "," Int "," Int "," Int ")" [function()]
  syntax Int ::= "#opWidth" "(" OpCode "," Int ")" [function() klabel(#opWidth)]
  syntax Int ::= "#opCodeWidth" "(" OpCode ")" [function() klabel(#opCodeWidth)]
  syntax Int ::= "#numArgs" "(" OpCode ")" [function() klabel(#numArgs)]
  syntax Instruction ::= PseudoInstruction
  syntax Instruction ::= "#dasmInstruction" "(" OpCode "," WordStack "," Int "," Map "," IeleName ")" [function() klabel(#dasmInstruction)]
  syntax Instruction ::= "#dasmInstruction" "(" OpCode "," Int "," Int "," Int "," Map "," IeleName ")" [function() klabel(#dasmInstructionAux)]
  syntax IeleName ::= IeleName "+.+IeleName" IeleName [function()]
  syntax FiveOp ::= "LOG4" "(" ")" [klabel(LOG4)]
  syntax CreateOp ::= "CREATE" "(" Int "," Int ")" [klabel(CREATE)]
  syntax CopyCreateOp ::= "COPYCREATE" "(" Int ")" [klabel(COPYCREATE)]
  syntax Contract ::= Contract "++Contract" Contract [function() klabel(contractAppend)]
  syntax Contract ::= "#dasmContract" "(" WordStack "," Int "," Map "," IeleName "," TopLevelDefinitions "," Int "," Int "," String ")" [function() klabel(#dasmContractAux2)]
  syntax Contract ::= "#dasmContract" "(" WordStack "," IeleName "," WordStack ")" [function() klabel(#dasmContractAux1)]
  syntax Contract ::= "#dasmContract" "(" WordStack "," IeleName ")" [function() klabel(#dasmContract)]
  syntax CallOp ::= "STATICCALLDYN" "(" Int "," Int ")" [klabel(STATICCALLDYN)]
  syntax CallOp ::= "STATICCALL" "(" Int "," Int "," Int ")" [klabel(STATICCALL)]
  syntax CallOp ::= "CALLDYN" "(" Int "," Int ")" [klabel(CALLDYN)]
  syntax CallOp ::= "CALLADDRESS" "(" Int ")" [klabel(CALLADDRESS)]
  syntax CallOp ::= "CALL" "(" Int "," Int "," Int ")" [klabel(CALL)]
  syntax Bool ::= "#isValidStringTable" "(" WordStack "," Int "," Int ")" [function() klabel(#isValidStringTable)]
  syntax Bool ::= "#isValidLoad" "(" WordStack "," Int ")" [function() klabel(#isValidLoad)]
  syntax Bool ::= "#isValidInstruction" "(" OpCode "," WordStack "," Int "," Int ")" [function() klabel(#isValidInstruction)]
  syntax Bool ::= "#isValidFunctions" "(" WordStack "," Int "," Int ")" [function() klabel(#isValidFunctions)]
  syntax Bool ::= "#isValidFunction" "(" WordStack "," Int "," Int ")" [function() klabel(#isValidFunction)]
  syntax Bool ::= "#isValidContract" "(" WordStack "," Int ")" [function() klabel(isValidContractAux)]
  syntax Bool ::= "#isValidContract" "(" WordStack ")" [function() klabel(#isValidContract)]
  syntax Blocks ::= "#toBlocks" "(" Instructions "," Blocks ")" [function() klabel(#toBlockAux)]
  syntax Blocks ::= "#toBlocks" "(" Instructions ")" [function() klabel(#toBlocks)]
  syntax BinOp ::= "SSTORE" "(" ")" [klabel(SSTORE)]
  syntax BinOp ::= "SLOAD" "(" ")" [klabel(SLOAD)]
  syntax BinOp ::= "SHA3" "(" ")" [klabel(SHA3)]
  syntax BinOp ::= "NOT" "(" ")" [klabel(NOT)]
  syntax BinOp ::= "MSTORE" "(" ")" [klabel(MSTORE)]
  syntax BinOp ::= "MOVE" "(" ")" [klabel(MOVE)]
  syntax BinOp ::= "MLOAD" "(" ")" [klabel(MLOAD)]
  syntax BinOp ::= "LOGARITHM2" "(" ")" [klabel(LOGARITHM2)]
  syntax BinOp ::= "LOG1" "(" ")" [klabel(LOG1)]
  syntax BinOp ::= "ISZERO" "(" ")" [klabel(ISZERO)]
  syntax BinOp ::= "EXTCODESIZE" "(" ")" [klabel(EXTCODESIZE)]
  syntax BinOp ::= "BLOCKHASH" "(" ")" [klabel(BLOCKHASH)]
  syntax BinOp ::= "BALANCE" "(" ")" [klabel(BALANCE)]
endmodule


module IELE-COMMON [org.kframework.attributes.Location(Location(42,1,397,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))]
  imports INT-SYNTAX
  imports IELE-COMMON$SYNTAX
  imports DOMAINS-SYNTAX
  rule `retvoid_IELE-COMMON`(.KList)=>`ret__IELE-COMMON`(`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [alias() contentStartColumn(8) contentStartLine(396) org.kframework.attributes.Location(Location(396,8,396,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `call_(_)_IELE-COMMON`(#SemanticCastToOperand(NAME),#SemanticCastToOperands(ARGS))=>`_=call_(_)_IELE-COMMON`(`.List{"lvalueList"}`(.KList),#SemanticCastToOperand(NAME),#SemanticCastToOperands(ARGS)) requires #token("true","Bool") ensures #token("true","Bool") [alias() contentStartColumn(8) contentStartLine(395) org.kframework.attributes.Location(Location(395,8,395,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( width in bytes ,[org.kframework.attributes.Location(Location(164,43,164,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( width in bytes ,[org.kframework.attributes.Location(Location(163,43,163,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( width in bytes ,[org.kframework.attributes.Location(Location(162,43,162,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( width in bytes ,[org.kframework.attributes.Location(Location(129,113,129,132)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( width in bytes ,[org.kframework.attributes.Location(Location(127,98,127,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( value ,[org.kframework.attributes.Location(Location(138,34,138,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( value ,[org.kframework.attributes.Location(Location(129,32,129,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( value ,[org.kframework.attributes.Location(Location(128,32,128,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( shift amount ,[org.kframework.attributes.Location(Location(169,55,169,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( offset in bytes ,[org.kframework.attributes.Location(Location(129,79,129,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( offset in bytes ,[org.kframework.attributes.Location(Location(127,64,127,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( new account address ,[org.kframework.attributes.Location(Location(218,54,218,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( new account address ,[org.kframework.attributes.Location(Location(217,54,217,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( local state queries,[org.kframework.attributes.Location(Location(229,3,229,25)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( index ,[org.kframework.attributes.Location(Location(138,58,138,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( index ,[org.kframework.attributes.Location(Location(137,43,137,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( exit status ,[org.kframework.attributes.Location(Location(218,25,218,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( exit status ,[org.kframework.attributes.Location(Location(217,25,217,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( contract name ,[org.kframework.attributes.Location(Location(217,104,217,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( contract address ,[org.kframework.attributes.Location(Location(218,104,218,125)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( cell ,[org.kframework.attributes.Location(Location(209,28,209,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( cell ,[org.kframework.attributes.Location(Location(208,28,208,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( cell ,[org.kframework.attributes.Location(Location(129,56,129,65)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( cell ,[org.kframework.attributes.Location(Location(128,56,128,65)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( cell ,[org.kframework.attributes.Location(Location(127,41,127,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( cell ,[org.kframework.attributes.Location(Location(126,41,126,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( byte index, 0 being the LSB ,[org.kframework.attributes.Location(Location(161,43,161,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( account to send balance ,[org.kframework.attributes.Location(Location(220,46,220,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
  ModuleComment( account queries,[org.kframework.attributes.Location(Location(244,3,244,21)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))])
endmodule


module IELE-COMMON$SYNTAX [org.kframework.attributes.Location(Location(42,1,397,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))]
  imports INT-SYNTAX$SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  syntax XorInst ::= LValue "=" "xor" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax UnlabeledBlock ::= Instructions
  syntax TwosInst ::= LValue "=" "twos" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax TopLevelDefinitions ::= TopLevelDefinition "" TopLevelDefinitions [format(%1%2%n%3) klabel(topLevelDefinitionList) right() userList(*)]
  syntax TopLevelDefinitions ::= ".TopLevelDefinitions" [klabel(.List{"topLevelDefinitionList"}) userList(*)]
  syntax TopLevelDefinition ::= GlobalDefinition
  syntax TopLevelDefinition ::= FunctionDefinition
  syntax TopLevelDefinition ::= ContractDeclaration
  syntax SubInst ::= LValue "=" "sub" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax StringIeleName [org.kframework.attributes.Location(Location(46,3,46,23)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))]
  syntax StoreInst ::= "store" Operand "," Operand [hybrid() seqstrict(1,2)]
  syntax StoreInst ::= "store" Operand "," Operand "," Operand "," Operand [hybrid() seqstrict(1,2,3,4)]
  syntax ShiftInst ::= LValue "=" "shift" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax SelfdestructInst ::= "selfdestruct" Operand [hybrid() strict(1)]
  syntax SStoreInst ::= "sstore" Operand "," Operand [hybrid() seqstrict(1,2)]
  syntax SLoadInst ::= LValue "=" "sload" Operand [hybrid() strict(2)]
  syntax SHA3Inst ::= LValue "=" "sha3" Operand [hybrid() strict(2)]
  syntax SExtInst ::= LValue "=" "sext" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax RevertInst ::= "revert" Operand [hybrid() strict(1)]
  syntax ReturnInst ::= "ret" NonEmptyOperands [hybrid() strict(1)]
  syntax ReturnInst ::= "ret" "void"
  syntax Predicate ::= "ne"
  syntax Predicate ::= "lt"
  syntax Predicate ::= "le"
  syntax Predicate ::= "gt"
  syntax Predicate ::= "ge"
  syntax Predicate ::= "eq"
  syntax OrInst ::= LValue "=" "or" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax Operands ::= Operand "," Operands [klabel(operandList) right() userList(*)]
  syntax Operands ::= NonEmptyOperands
  syntax Operands ::= Ints
  syntax Operands ::= ".Operands" [klabel(.List{"operandList"}) userList(*)]
  syntax Operand ::= LValue
  syntax Operand ::= Constant
  syntax NumericIeleName ::= Int
  syntax NotInst ::= LValue "=" "not" Operand [hybrid() strict(2)]
  syntax NonEmptyOperands ::= Operand "," NonEmptyOperands [klabel(operandList) right() userList(+)]
  syntax NonEmptyOperands ::= NonEmptyInts
  syntax NonEmptyOperands ::= ".NonEmptyOperands" [klabel(.List{"operandList"}) userList(+)]
  syntax NonEmptyInts ::= Int "," NonEmptyInts [klabel(operandList) right() userList(+)]
  syntax NonEmptyInts ::= ".NonEmptyInts" [klabel(.List{"operandList"}) userList(+)]
  syntax MulModInst ::= LValue "=" "mulmod" Operand "," Operand "," Operand [hybrid() seqstrict(2,3,4)]
  syntax MulInst ::= LValue "=" "mul" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax ModInst ::= LValue "=" "mod" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax LogInst ::= LValue "=" "log2" Operand [hybrid() strict(2)]
  syntax LogInst ::= "log" Operand [hybrid() strict(1)]
  syntax LogInst ::= "log" Operand "," NonEmptyOperands [hybrid() seqstrict(1,2)]
  syntax LocalNames ::= LocalName "," LocalNames [klabel(localNameList) right() userList(*)]
  syntax LocalNames ::= ".LocalNames" [klabel(.List{"localNameList"}) userList(*)]
  syntax LocalName ::= "%" IeleName
  syntax LocalCallInst ::= LValues "=" "call" Operand "(" Operands ")" [hybrid() strict(2,3)]
  syntax LocalCallInst ::= "call" Operand "(" Operands ")"
  syntax LoadInst ::= LValue "=" "load" Operand [hybrid() strict(2)]
  syntax LoadInst ::= LValue "=" "load" Operand "," Operand "," Operand [hybrid() seqstrict(2,3,4)]
  syntax LabeledBlocks ::= LabeledBlock "" LabeledBlocks [klabel(labeledBlockList) right() userList(*)]
  syntax LabeledBlocks ::= ".LabeledBlocks" [klabel(.List{"labeledBlockList"}) userList(*)]
  syntax LabeledBlock ::= IeleName ":" Instructions
  syntax LValues ::= LValue "," LValues [klabel(lvalueList) right() userList(+)]
  syntax LValues ::= ".LValues" [klabel(.List{"lvalueList"}) userList(+)]
  syntax LValue ::= LocalName
  syntax JumpInst ::= "br" IeleName
  syntax IsZeroInst ::= LValue "=" "iszero" Operand [hybrid() strict(2)]
  syntax Ints ::= NonEmptyInts
  syntax Ints ::= Int "," Ints [klabel(operandList) right() userList(*)]
  syntax Ints ::= ".Ints" [klabel(.List{"operandList"}) userList(*)]
  syntax IntConstant ::= Int
  syntax IntConstant ::= HexConstant
  syntax IntConstant ::= Bool
  syntax Instructions ::= Instruction "" Instructions [format(%1%2%n%3) klabel(instructionList) right() userList(*)]
  syntax Instructions ::= ".Instructions" [klabel(.List{"instructionList"}) userList(*)]
  syntax Instruction ::= XorInst
  syntax Instruction ::= TwosInst
  syntax Instruction ::= SubInst
  syntax Instruction ::= StoreInst
  syntax Instruction ::= ShiftInst
  syntax Instruction ::= SelfdestructInst
  syntax Instruction ::= SStoreInst
  syntax Instruction ::= SLoadInst
  syntax Instruction ::= SHA3Inst
  syntax Instruction ::= SExtInst
  syntax Instruction ::= RevertInst
  syntax Instruction ::= ReturnInst
  syntax Instruction ::= OrInst
  syntax Instruction ::= NotInst
  syntax Instruction ::= MulModInst
  syntax Instruction ::= MulInst
  syntax Instruction ::= ModInst
  syntax Instruction ::= LogInst
  syntax Instruction ::= LocalCallInst
  syntax Instruction ::= LoadInst
  syntax Instruction ::= JumpInst
  syntax Instruction ::= IsZeroInst
  syntax Instruction ::= ExpModInst
  syntax Instruction ::= ExpInst
  syntax Instruction ::= DivInst
  syntax Instruction ::= CreateInst
  syntax Instruction ::= CondJumpInst
  syntax Instruction ::= CmpInst
  syntax Instruction ::= CallAddressInst
  syntax Instruction ::= ByteInst
  syntax Instruction ::= BswapInst
  syntax Instruction ::= AssignInst
  syntax Instruction ::= AndInst
  syntax Instruction ::= AddModInst
  syntax Instruction ::= AddInst
  syntax Instruction ::= AccountCallInst
  syntax IeleName ::= StringIeleName [avoid() function() klabel(StringIeleName) symbol()]
  syntax IeleName ::= NumericIeleName
  syntax IeleName ::= "init" [token()]
  syntax IeleName ::= "iele.timestamp" [token()]
  syntax IeleName ::= "iele.sha256" [token()]
  syntax IeleName ::= "iele.rip160" [token()]
  syntax IeleName ::= "iele.origin" [token()]
  syntax IeleName ::= "iele.number" [token()]
  syntax IeleName ::= "iele.msize" [token()]
  syntax IeleName ::= "iele.invalid" [token()]
  syntax IeleName ::= "iele.id" [token()]
  syntax IeleName ::= "iele.gasprice" [token()]
  syntax IeleName ::= "iele.gaslimit" [token()]
  syntax IeleName ::= "iele.gas" [token()]
  syntax IeleName ::= "iele.extcodesize" [token()]
  syntax IeleName ::= "iele.ecrec" [token()]
  syntax IeleName ::= "iele.ecpairing" [token()]
  syntax IeleName ::= "iele.ecmul" [token()]
  syntax IeleName ::= "iele.ecadd" [token()]
  syntax IeleName ::= "iele.difficulty" [token()]
  syntax IeleName ::= "iele.codesize" [token()]
  syntax IeleName ::= "iele.callvalue" [token()]
  syntax IeleName ::= "iele.caller" [token()]
  syntax IeleName ::= "iele.blockhash" [token()]
  syntax IeleName ::= "iele.beneficiary" [token()]
  syntax IeleName ::= "iele.balance" [token()]
  syntax IeleName ::= "iele.address" [token()]
  syntax IeleName ::= "deposit" [token()]
  syntax HexConstant ::= r"0x[0-9a-fA-F]+" [token()]
  syntax GlobalName ::= "@" IeleName
  syntax GlobalDefinition ::= GlobalName "=" IntConstant [klabel(globalDefinition)]
  syntax FunctionSignature ::= GlobalName "(" FunctionParameters ")"
  syntax FunctionParameters ::= LocalNames
  syntax FunctionDefinition ::= "define" FunctionSignature "{" Blocks "}" [format(%1 %2 %3%i%n%4%d%n%5%n)]
  syntax FunctionDefinition ::= "define" "public" FunctionSignature "{" Blocks "}" [format(%1 %2 %3 %4%i%n%5%d%n%6%n)]
  syntax ExpModInst ::= LValue "=" "expmod" Operand "," Operand "," Operand [hybrid() seqstrict(2,3,4)]
  syntax ExpInst ::= LValue "=" "exp" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax DivInst ::= LValue "=" "div" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax CreateInst ::= LValue "," LValue "=" "create" IeleName "(" Operands ")" "send" Operand [hybrid() seqstrict(4,5)]
  syntax CreateInst ::= LValue "," LValue "=" "copycreate" Operand "(" Operands ")" "send" Operand [hybrid() seqstrict(3,4,5)]
  syntax ContractDefinition ::= "contract" IeleName "{" TopLevelDefinitions "}" [format(%1 %2 %3%n%i%4%d%n%5)]
  syntax ContractDeclaration ::= "external" "contract" IeleName
  syntax Contract ::= ContractDefinition "" Contract [klabel(contractDefinitionList) right() userList(*)]
  syntax Contract ::= ".Contract" [klabel(.List{"contractDefinitionList"}) userList(*)]
  syntax Constant ::= IntConstant
  syntax Constant ::= GlobalName
  syntax CondJumpInst ::= "br" Operand "," IeleName [hybrid() strict(1)]
  syntax CmpInst ::= LValue "=" "cmp" Predicate Operand "," Operand [hybrid() seqstrict(3,4)]
  syntax CallAddressInst ::= LValue "=" "calladdress" GlobalName "at" Operand [hybrid() strict(3)]
  syntax ByteInst ::= LValue "=" "byte" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax BswapInst ::= LValue "=" "bswap" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax Blocks [flatPredicate() org.kframework.attributes.Location(Location(375,3,375,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))]
  syntax Blocks ::= UnlabeledBlock LabeledBlocks [avoid()]
  syntax Blocks ::= LabeledBlocks
  syntax AssignInst ::= LValue "=" Operand
  syntax AndInst ::= LValue "=" "and" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax AddModInst ::= LValue "=" "addmod" Operand "," Operand "," Operand [hybrid() seqstrict(2,3,4)]
  syntax AddInst ::= LValue "=" "add" Operand "," Operand [hybrid() seqstrict(2,3)]
  syntax AccountCallInst ::= LValues "=" "staticcall" Operand "at" Operand "(" Operands ")" "gaslimit" Operand [hybrid() seqstrict(2,3,4,5)]
  syntax AccountCallInst ::= LValues "=" "call" Operand "at" Operand "(" Operands ")" "send" Operand "," "gaslimit" Operand [hybrid() seqstrict(2,3,4,5,6)]
endmodule


module IELE-CONFIGURATION [org.kframework.attributes.Location(Location(15,1,185,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports STRING
  imports MAP
  imports IELE-WELL-FORMEDNESS
  imports IELE-DATA
  imports IELE-CONFIGURATION$SYNTAX
  imports IELE-COMMON
  imports DEFAULT-STRATEGY
  imports DEFAULT-CONFIGURATION
  syntax Cell ::= WellFormednessScheduleCell
  syntax Cell ::= WellFormednessCell
  syntax Cell ::= ValueCell
  syntax Cell ::= TypesCell
  syntax Cell ::= TypeCheckingCell
  syntax Cell ::= TxPendingCell
  syntax Cell ::= TxOrderCell
  syntax Cell ::= TxNonceCell
  syntax Cell ::= TxGasPriceCell
  syntax Cell ::= TxGasLimitCell
  syntax Cell ::= TimestampCell
  syntax Cell ::= SubstateStackCell
  syntax Cell ::= SubstateCell
  syntax Cell ::= StorageCell
  syntax Cell ::= StaticCell
  syntax Cell ::= SendtoCell
  syntax Cell ::= SelfDestructCell
  syntax Cell ::= ScheduleCell
  syntax Cell ::= SCell
  syntax Cell ::= RegsCell
  syntax Cell ::= RefundCell
  syntax Cell ::= ProgramSizeCell
  syntax Cell ::= ProgramCell
  syntax Cell ::= PreviousGasCell
  syntax Cell ::= PeakMemoryCell
  syntax Cell ::= OutputCell
  syntax Cell ::= OriginCell
  syntax Cell ::= NumberCell
  syntax Cell ::= NregsCell
  syntax Cell ::= NparamsCell
  syntax Cell ::= NonceCell
  syntax Cell ::= NetworkCell
  syntax Cell ::= MsgIDCell
  syntax Cell ::= ModeCell
  syntax Cell ::= MessagesCell
  syntax Cell ::= MessageCell
  syntax Cell ::= LogDataCell
  syntax Cell ::= LocalMemCell
  syntax Cell ::= LocalCallsCell
  syntax Cell ::= LabelsCell
  syntax Cell ::= KCell
  syntax Cell ::= JumpTableCell
  syntax Cell ::= InterimStatesCell
  syntax Cell ::= InstructionsCell
  syntax Cell ::= IeleCell
  syntax Cell ::= IdCell
  syntax Cell ::= GeneratedTopCell
  syntax Cell ::= GasUsedCell
  syntax Cell ::= GasPriceCell
  syntax Cell ::= GasLimitCell
  syntax Cell ::= GasCell
  syntax Cell ::= FunctionsCell
  syntax Cell ::= FunctionNameCell
  syntax Cell ::= FunctionCell
  syntax Cell ::= FunctionBodiesCell
  syntax Cell ::= FuncLabelsCell
  syntax Cell ::= FuncIdsCell
  syntax Cell ::= FuncIdCell
  syntax Cell ::= FuncCell
  syntax Cell ::= FromCell
  syntax Cell ::= FidCell
  syntax Cell ::= ExportedCell
  syntax Cell ::= ExitCodeCell
  syntax Cell ::= ExistsCell
  syntax Cell ::= DifficultyCell
  syntax Cell ::= DeclaredContractsCell
  syntax Cell ::= DataCell
  syntax Cell ::= CurrentMemoryCell
  syntax Cell ::= CurrentInstructionsCell
  syntax Cell ::= CurrentFunctionCell
  syntax Cell ::= CurrentContractCell
  syntax Cell ::= ContractsCell
  syntax Cell ::= ContractNameCell
  syntax Cell ::= ContractCodeCell
  syntax Cell ::= CodeCell
  syntax Cell ::= CheckGasCell
  syntax Cell ::= CallerCell
  syntax Cell ::= CallValueCell
  syntax Cell ::= CallStackCell
  syntax Cell ::= CallFrameCell
  syntax Cell ::= CallDepthCell
  syntax Cell ::= CallDataCell
  syntax Cell ::= BlockhashCell
  syntax Cell ::= BeneficiaryCell
  syntax Cell ::= BalanceCell
  syntax Cell ::= ArgsCell
  syntax Cell ::= ActiveAccountsCell
  syntax Cell ::= AcctIDCell
  syntax Cell ::= AccountsCell
  syntax Cell ::= AccountCell
  rule initValueCell(.KList)=>`<value>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTxPendingCell(.KList)=>`<txPending>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTxOrderCell(.KList)=>`<txOrder>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTxNonceCell(.KList)=>`<txNonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTxGasPriceCell(.KList)=>`<txGasPrice>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTxGasLimitCell(.KList)=>`<txGasLimit>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTimestampCell(.KList)=>`<timestamp>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initSubstateStackCell(.KList)=>`<substateStack>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initSubstateCell(.KList)=>`<substate>`(#noDots(.KList),#cells(initSelfDestructCell(.KList),initLogDataCell(.KList),initRefundCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initStorageCell(.KList)=>`<storage>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initStaticCell(.KList)=>`<static>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initSendtoCell(.KList)=>`<sendto>`(#noDots(.KList),`.Account_IELE-DATA`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initSelfDestructCell(.KList)=>`<selfDestruct>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initScheduleCell(Init)=>`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(`project:Schedule`(`Map:lookup`(Init,#token("$SCHEDULE","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initRegsCell(.KList)=>`<regs>`(#noDots(.KList),`.Array_IELE-DATA`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initRefundCell(.KList)=>`<refund>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initProgramSizeCell(.KList)=>`<programSize>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initProgramCell(.KList)=>`<program>`(#noDots(.KList),#cells(initFunctionsCell(.KList),initFuncIdsCell(.KList),initFuncLabelsCell(.KList),initExportedCell(.KList),initProgramSizeCell(.KList),initContractCodeCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initPreviousGasCell(.KList)=>`<previousGas>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initPeakMemoryCell(.KList)=>`<peakMemory>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initOutputCell(.KList)=>`<output>`(#noDots(.KList),`.List{"operandList"}`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initOriginCell(.KList)=>`<origin>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initNumberCell(.KList)=>`<number>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initNregsCell(.KList)=>`<nregs>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initNparamsCell(.KList)=>`<nparams>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initNonceCell(.KList)=>`<nonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initNetworkCell(.KList)=>`<network>`(#noDots(.KList),#cells(initActiveAccountsCell(.KList),initAccountsCell(.KList),initTxOrderCell(.KList),initTxPendingCell(.KList),initMessagesCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initMsgIDCell(.KList)=>`<msgID>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initModeCell(Init)=>`<mode>`(#noDots(.KList),#SemanticCastToMode(`project:Mode`(`Map:lookup`(Init,#token("$MODE","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initMessagesCell(.KList)=>`<messages>`(#noDots(.KList),#cells(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initMessageCell(.KList)=>`<message>`(#noDots(.KList),#cells(initMsgIDCell(.KList),initTxNonceCell(.KList),initTxGasPriceCell(.KList),initTxGasLimitCell(.KList),initSendtoCell(.KList),initFuncCell(.KList),initValueCell(.KList),initFromCell(.KList),initDataCell(.KList),initArgsCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initLogDataCell(.KList)=>`<logData>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initLocalMemCell(.KList)=>`<localMem>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initLocalCallsCell(.KList)=>`<localCalls>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initJumpTableCell(.KList)=>`<jumpTable>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initInterimStatesCell(.KList)=>`<interimStates>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initInstructionsCell(.KList)=>`<instructions>`(#noDots(.KList),#SemanticCastToBlocks(`___IELE-COMMON`(`.List{"instructionList"}`(.KList),`.List{"labeledBlockList"}`(.KList))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initIeleCell(.KList)=>`<iele>`(#noDots(.KList),#cells(initOutputCell(.KList),initCallStackCell(.KList),initInterimStatesCell(.KList),initSubstateStackCell(.KList),initCallFrameCell(.KList),initSubstateCell(.KList),initGasPriceCell(.KList),initOriginCell(.KList),initBeneficiaryCell(.KList),initDifficultyCell(.KList),initNumberCell(.KList),initGasLimitCell(.KList),initGasUsedCell(.KList),initTimestampCell(.KList),initBlockhashCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initIdCell(.KList)=>`<id>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initGeneratedTopCell(Init)=>`<generatedTop>`(#noDots(.KList),#cells(initKCell(Init),initSCell(Init),initExitCodeCell(.KList),initModeCell(Init),initScheduleCell(Init),initCheckGasCell(.KList),initWellFormednessCell(Init),initIeleCell(.KList),initNetworkCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initGasUsedCell(.KList)=>`<gasUsed>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initGasPriceCell(.KList)=>`<gasPrice>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initGasLimitCell(.KList)=>`<gasLimit>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initGasCell(.KList)=>`<gas>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFunctionsCell(.KList)=>`<functions>`(#noDots(.KList),#cells(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFunctionCell(.KList)=>`<function>`(#noDots(.KList),#cells(initFuncIdCell(.KList),initNparamsCell(.KList),initInstructionsCell(.KList),initJumpTableCell(.KList),initNregsCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFuncLabelsCell(.KList)=>`<funcLabels>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFuncIdsCell(.KList)=>`<funcIds>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFuncIdCell(.KList)=>`<funcId>`(#noDots(.KList),#token("deposit","IeleName"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFuncCell(.KList)=>`<func>`(#noDots(.KList),#token("deposit","IeleName"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFromCell(.KList)=>`<from>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFidCell(.KList)=>`<fid>`(#noDots(.KList),#token("deposit","IeleName"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initExportedCell(.KList)=>`<exported>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initExitCodeCell(.KList)=>`<exit-code>`(#noDots(.KList),#token("1","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initExistsCell(.KList)=>`<exists>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initDifficultyCell(.KList)=>`<difficulty>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initDataCell(.KList)=>`<data>`(#noDots(.KList),`.WordStack_IELE-DATA`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCurrentMemoryCell(.KList)=>`<currentMemory>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initContractCodeCell(.KList)=>`<contractCode>`(#noDots(.KList),`.List{"contractDefinitionList"}`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCodeCell(.KList)=>`<code>`(#noDots(.KList),`#emptyCode_IELE-CONFIGURATION`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCheckGasCell(.KList)=>`<checkGas>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCallerCell(.KList)=>`<caller>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCallValueCell(.KList)=>`<callValue>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCallStackCell(.KList)=>`<callStack>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCallFrameCell(.KList)=>`<callFrame>`(#noDots(.KList),#cells(initProgramCell(.KList),initCallDepthCell(.KList),initLocalCallsCell(.KList),initIdCell(.KList),initCallerCell(.KList),initCallDataCell(.KList),initCallValueCell(.KList),initRegsCell(.KList),initLocalMemCell(.KList),initPeakMemoryCell(.KList),initCurrentMemoryCell(.KList),initFidCell(.KList),initGasCell(.KList),initPreviousGasCell(.KList),initStaticCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCallDepthCell(.KList)=>`<callDepth>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCallDataCell(.KList)=>`<callData>`(#noDots(.KList),`.List{"operandList"}`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initBlockhashCell(.KList)=>`<blockhash>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initBeneficiaryCell(.KList)=>`<beneficiary>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initBalanceCell(.KList)=>`<balance>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initArgsCell(.KList)=>`<args>`(#noDots(.KList),`.List{"operandList"}`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initActiveAccountsCell(.KList)=>`<activeAccounts>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initAcctIDCell(.KList)=>`<acctID>`(#noDots(.KList),#token("0","Int"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initAccountsCell(.KList)=>`<accounts>`(#noDots(.KList),#cells(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initAccountCell(.KList)=>`<account>`(#noDots(.KList),#cells(initAcctIDCell(.KList),initBalanceCell(.KList),initCodeCell(.KList),initStorageCell(.KList),initNonceCell(.KList),initExistsCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `#emptyCode_IELE-CONFIGURATION`(.KList)=>contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#token("iele.Wallet","IeleName"),#token("0","Int"),#token("\"\"","String"),topLevelDefinitionList(`definepublic_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#token("deposit","IeleName")),#token("0","Int")),`___IELE-COMMON`(instructionList(`ret__IELE-COMMON`(`.List{"operandList"}`(.KList)),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList))),`.List{"topLevelDefinitionList"}`(.KList))),`.List{"contractDefinitionList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(183) macro() org.kframework.attributes.Location(Location(183,10,183,148)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( when desugared to include the code size ,[org.kframework.attributes.Location(Location(181,136,181,180)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( size in bytes ,[org.kframework.attributes.Location(Location(181,59,181,77)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( byte string ,[org.kframework.attributes.Location(Location(181,83,181,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( \mu_*,[org.kframework.attributes.Location(Location(83,23,83,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Whether the call frame came from a staticcall,[org.kframework.attributes.Location(Location(92,71,92,119)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Value in funds to transfer by transaction,[org.kframework.attributes.Location(Location(153,71,153,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Value in funds passed to contract,[org.kframework.attributes.Location(Location(81,71,81,107)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Unique ID of transaction,[org.kframework.attributes.Location(Location(147,71,147,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( True if account exists in blockchain,[org.kframework.attributes.Location(Location(135,61,135,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Transactions Record,[org.kframework.attributes.Location(Location(139,21,139,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Timestamp of current block,[org.kframework.attributes.Location(Location(114,71,114,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( The number of parameters of the function,[org.kframework.attributes.Location(Location(62,70,62,113)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( The name of the function,[org.kframework.attributes.Location(Location(61,70,61,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( The loaded state of a IELE program,[org.kframework.attributes.Location(Location(56,23,56,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( The blocks of the function,[org.kframework.attributes.Location(Location(63,98,63,127)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Size in bytes of currently loaded contract,[org.kframework.attributes.Location(Location(71,70,71,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Set of keys in the accounts cell.,[org.kframework.attributes.Location(Location(127,61,127,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Set of contract ids that were destroyed by this transaction,[org.kframework.attributes.Location(Location(97,71,97,133)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Set of all names of functions in <functions> cell,[org.kframework.attributes.Location(Location(68,70,68,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Set of all names of functions defined with define public,[org.kframework.attributes.Location(Location(70,70,70,129)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Sender of transaction,[org.kframework.attributes.Location(Location(154,71,154,95)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Sender of current transaction,[org.kframework.attributes.Location(Location(106,71,106,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Return registers of current call frame,[org.kframework.attributes.Location(Location(48,70,48,111)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Remaining transactions in block,[org.kframework.attributes.Location(Location(143,61,143,95)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Refund for this transaction,[org.kframework.attributes.Location(Location(99,71,99,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Price of gas for this transaction,[org.kframework.attributes.Location(Location(105,71,105,107)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Permanent storage of account (for sload/sstore),[org.kframework.attributes.Location(Location(133,61,133,111)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Order of transactions in block,[org.kframework.attributes.Location(Location(142,61,142,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Number of registers used by this function,[org.kframework.attributes.Location(Location(65,70,65,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Number of current block,[org.kframework.attributes.Location(Location(111,71,111,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Nonce of transaction (not checked),[org.kframework.attributes.Location(Location(148,71,148,108)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Nonce of account,[org.kframework.attributes.Location(Location(134,61,134,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Name of currently executing function,[org.kframework.attributes.Location(Location(88,71,88,110)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Mutable during a single transaction,[org.kframework.attributes.Location(Location(45,21,45,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Miner of current block,[org.kframework.attributes.Location(Location(109,71,109,96)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Maximum memory used so far in call frame,[org.kframework.attributes.Location(Location(86,71,86,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Map of integer function IDS to all function names in the <functions> cell,[org.kframework.attributes.Location(Location(69,70,69,146)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Map from jump label to blocks, for branch instruction,[org.kframework.attributes.Location(Location(64,70,64,126)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Log entries for this transaction,[org.kframework.attributes.Location(Location(98,71,98,106)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( List of previous block's hashes,[org.kframework.attributes.Location(Location(115,71,115,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Intra-contract call stack,[org.kframework.attributes.Location(Location(75,70,75,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Inter-contract call stack,[org.kframework.attributes.Location(Location(49,70,49,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Inter-contract call stack depth,[org.kframework.attributes.Location(Location(74,70,74,104)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Immutable during a single transaction,[org.kframework.attributes.Location(Location(102,21,102,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( I_H* (block information),[org.kframework.attributes.Location(Location(108,21,108,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( I_*,[org.kframework.attributes.Location(Location(77,23,77,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( IELE Specific,[org.kframework.attributes.Location(Location(40,19,40,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( IELE Network Layer,[org.kframework.attributes.Location(Location(119,19,119,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ID of account,[org.kframework.attributes.Location(Location(130,61,130,77)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Gas used by current block,[org.kframework.attributes.Location(Location(113,71,113,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Gas remaining prior to last decrease,[org.kframework.attributes.Location(Location(90,71,90,110)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Gas price of transaction,[org.kframework.attributes.Location(Location(149,71,149,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Gas limit of transaction,[org.kframework.attributes.Location(Location(150,71,150,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Gas limit of current block,[org.kframework.attributes.Location(Location(112,71,112,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Gas Schedule: DEFAULT or ALBE,[org.kframework.attributes.Location(Location(35,70,35,102)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Function to call by transaction,[org.kframework.attributes.Location(Location(152,71,152,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Exit code of interpreter process,[org.kframework.attributes.Location(Location(33,70,33,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Execution mode: VMTESTS or NORMAL,[org.kframework.attributes.Location(Location(34,70,34,106)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Enables/disables gas check in test driver,[org.kframework.attributes.Location(Location(36,70,36,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Disassembled entire contract,[org.kframework.attributes.Location(Location(72,70,72,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Disassembled contract of account,[org.kframework.attributes.Location(Location(132,61,132,96)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Difficulty of current block,[org.kframework.attributes.Location(Location(110,71,110,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Destination of transaction (.Account for account creation),[org.kframework.attributes.Location(Location(151,71,151,132)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Currently executing contract,[org.kframework.attributes.Location(Location(78,71,78,102)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Current values of registers,[org.kframework.attributes.Location(Location(84,71,84,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Current values of local memory,[org.kframework.attributes.Location(Location(85,71,85,104)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Current strategy,[org.kframework.attributes.Location(Location(32,70,32,89)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Current memory used in call frame,[org.kframework.attributes.Location(Location(87,71,87,107)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Current gas remaining,[org.kframework.attributes.Location(Location(89,71,89,95)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Current computation,[org.kframework.attributes.Location(Location(31,70,31,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Copy of register arguments,[org.kframework.attributes.Location(Location(80,71,80,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Contract that called current contract,[org.kframework.attributes.Location(Location(79,71,79,111)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Checkpointed substate for rollback,[org.kframework.attributes.Location(Location(51,70,51,107)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Checkpointed network state for rollback,[org.kframework.attributes.Location(Location(50,70,50,112)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Balance of funds in account,[org.kframework.attributes.Location(Location(131,61,131,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Arguments to function called by transaction,[org.kframework.attributes.Location(Location(155,71,155,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( Accounts Record,[org.kframework.attributes.Location(Location(124,21,124,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( A_* (execution substate),[org.kframework.attributes.Location(Location(95,21,95,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( A single contract call frame,[org.kframework.attributes.Location(Location(53,21,53,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ==================,[org.kframework.attributes.Location(Location(120,19,120,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( =============,[org.kframework.attributes.Location(Location(41,19,41,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(182,2,182,181)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------,[org.kframework.attributes.Location(Location(103,21,103,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------,[org.kframework.attributes.Location(Location(46,21,46,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------,[org.kframework.attributes.Location(Location(57,23,57,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------,[org.kframework.attributes.Location(Location(166,2,166,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------,[org.kframework.attributes.Location(Location(54,21,54,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------,[org.kframework.attributes.Location(Location(140,21,140,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------,[org.kframework.attributes.Location(Location(125,21,125,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
endmodule


module IELE-CONFIGURATION$SYNTAX [org.kframework.attributes.Location(Location(15,1,185,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports STRING$SYNTAX
  imports MAP$SYNTAX
  imports IELE-WELL-FORMEDNESS$SYNTAX
  imports IELE-DATA$SYNTAX
  imports IELE-COMMON$SYNTAX
  imports DEFAULT-STRATEGY$SYNTAX
  imports DEFAULT-CONFIGURATION$SYNTAX
  syntax WellFormednessCellOpt ::= WellFormednessCell
  syntax WellFormednessCellOpt ::= "noWellFormednessCell" [cellOptAbsent(WellFormednessCell)]
  syntax ValueCellOpt ::= ValueCell
  syntax ValueCellOpt ::= "noValueCell" [cellOptAbsent(ValueCell)]
  syntax ValueCell ::= "initValueCell" [function() initializer() noThread()]
  syntax ValueCell ::= "<value>" Int "</value>" [cell() cellName(value) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax TxPendingCellOpt ::= TxPendingCell
  syntax TxPendingCellOpt ::= "noTxPendingCell" [cellOptAbsent(TxPendingCell)]
  syntax TxPendingCell ::= "initTxPendingCell" [function() initializer() noThread()]
  syntax TxPendingCell ::= "<txPending>" List "</txPending>" [cell() cellName(txPending) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax TxOrderCellOpt ::= TxOrderCell
  syntax TxOrderCellOpt ::= "noTxOrderCell" [cellOptAbsent(TxOrderCell)]
  syntax TxOrderCell ::= "initTxOrderCell" [function() initializer() noThread()]
  syntax TxOrderCell ::= "<txOrder>" List "</txOrder>" [cell() cellName(txOrder) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax TxNonceCellOpt ::= TxNonceCell
  syntax TxNonceCellOpt ::= "noTxNonceCell" [cellOptAbsent(TxNonceCell)]
  syntax TxNonceCell ::= "initTxNonceCell" [function() initializer() noThread()]
  syntax TxNonceCell ::= "<txNonce>" Int "</txNonce>" [cell() cellName(txNonce) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax TxGasPriceCellOpt ::= TxGasPriceCell
  syntax TxGasPriceCellOpt ::= "noTxGasPriceCell" [cellOptAbsent(TxGasPriceCell)]
  syntax TxGasPriceCell ::= "initTxGasPriceCell" [function() initializer() noThread()]
  syntax TxGasPriceCell ::= "<txGasPrice>" Int "</txGasPrice>" [cell() cellName(txGasPrice) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax TxGasLimitCellOpt ::= TxGasLimitCell
  syntax TxGasLimitCellOpt ::= "noTxGasLimitCell" [cellOptAbsent(TxGasLimitCell)]
  syntax TxGasLimitCell ::= "initTxGasLimitCell" [function() initializer() noThread()]
  syntax TxGasLimitCell ::= "<txGasLimit>" Int "</txGasLimit>" [cell() cellName(txGasLimit) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax TimestampCellOpt ::= TimestampCell
  syntax TimestampCellOpt ::= "noTimestampCell" [cellOptAbsent(TimestampCell)]
  syntax TimestampCell ::= "initTimestampCell" [function() initializer() noThread()]
  syntax TimestampCell ::= "<timestamp>" Int "</timestamp>" [cell() cellName(timestamp) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax SubstateStackCellOpt ::= SubstateStackCell
  syntax SubstateStackCellOpt ::= "noSubstateStackCell" [cellOptAbsent(SubstateStackCell)]
  syntax SubstateStackCell ::= "initSubstateStackCell" [function() initializer() noThread()]
  syntax SubstateStackCell ::= "<substateStack>" List "</substateStack>" [cell() cellName(substateStack) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax SubstateCellOpt ::= SubstateCell
  syntax SubstateCellOpt ::= "noSubstateCell" [cellOptAbsent(SubstateCell)]
  syntax SubstateCellFragment ::= "<substate>-fragment" SelfDestructCellOpt LogDataCellOpt RefundCellOpt "</substate>-fragment" [cellFragment(SubstateCell)]
  syntax SubstateCell ::= "initSubstateCell" [function() initializer() noThread()]
  syntax SubstateCell ::= "<substate>" SelfDestructCell LogDataCell RefundCell "</substate>" [cell() cellName(substate) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%d%n%5) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax StorageCellOpt ::= StorageCell
  syntax StorageCellOpt ::= "noStorageCell" [cellOptAbsent(StorageCell)]
  syntax StorageCell ::= "initStorageCell" [function() initializer() noThread()]
  syntax StorageCell ::= "<storage>" Map "</storage>" [cell() cellName(storage) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax StaticCellOpt ::= StaticCell
  syntax StaticCellOpt ::= "noStaticCell" [cellOptAbsent(StaticCell)]
  syntax StaticCell ::= "initStaticCell" [function() initializer() noThread()]
  syntax StaticCell ::= "<static>" Bool "</static>" [cell() cellName(static) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax SendtoCellOpt ::= SendtoCell
  syntax SendtoCellOpt ::= "noSendtoCell" [cellOptAbsent(SendtoCell)]
  syntax SendtoCell ::= "initSendtoCell" [function() initializer() noThread()]
  syntax SendtoCell ::= "<sendto>" Account "</sendto>" [cell() cellName(sendto) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax SelfDestructCellOpt ::= SelfDestructCell
  syntax SelfDestructCellOpt ::= "noSelfDestructCell" [cellOptAbsent(SelfDestructCell)]
  syntax SelfDestructCell ::= "initSelfDestructCell" [function() initializer() noThread()]
  syntax SelfDestructCell ::= "<selfDestruct>" Set "</selfDestruct>" [cell() cellName(selfDestruct) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ScheduleCellOpt ::= ScheduleCell
  syntax ScheduleCellOpt ::= "noScheduleCell" [cellOptAbsent(ScheduleCell)]
  syntax ScheduleCell ::= "initScheduleCell" "(" Map ")" [function() initializer() noThread()]
  syntax ScheduleCell ::= "<schedule>" Schedule "</schedule>" [cell() cellName(schedule) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Schedule [org.kframework.attributes.Location(Location(164,5,164,19)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  syntax SCellOpt ::= SCell
  syntax SCellOpt ::= "noSCell" [cellOptAbsent(SCell)]
  syntax RegsCellOpt ::= RegsCell
  syntax RegsCellOpt ::= "noRegsCell" [cellOptAbsent(RegsCell)]
  syntax RegsCell ::= "initRegsCell" [function() initializer() noThread()]
  syntax RegsCell ::= "<regs>" Array "</regs>" [cell() cellName(regs) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax RefundCellOpt ::= RefundCell
  syntax RefundCellOpt ::= "noRefundCell" [cellOptAbsent(RefundCell)]
  syntax RefundCell ::= "initRefundCell" [function() initializer() noThread()]
  syntax RefundCell ::= "<refund>" Int "</refund>" [cell() cellName(refund) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ProgramSizeCellOpt ::= ProgramSizeCell
  syntax ProgramSizeCellOpt ::= "noProgramSizeCell" [cellOptAbsent(ProgramSizeCell)]
  syntax ProgramSizeCell ::= "initProgramSizeCell" [function() initializer() noThread()]
  syntax ProgramSizeCell ::= "<programSize>" Int "</programSize>" [cell() cellName(programSize) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ProgramCellOpt ::= ProgramCell
  syntax ProgramCellOpt ::= "noProgramCell" [cellOptAbsent(ProgramCell)]
  syntax ProgramCellFragment ::= "<program>-fragment" FunctionsCellOpt FuncIdsCellOpt FuncLabelsCellOpt ExportedCellOpt ProgramSizeCellOpt ContractCodeCellOpt "</program>-fragment" [cellFragment(ProgramCell)]
  syntax ProgramCell ::= "initProgramCell" [function() initializer() noThread()]
  syntax ProgramCell ::= "<program>" FunctionsCell FuncIdsCell FuncLabelsCell ExportedCell ProgramSizeCell ContractCodeCell "</program>" [cell() cellName(program) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%d%n%8) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax PreviousGasCellOpt ::= PreviousGasCell
  syntax PreviousGasCellOpt ::= "noPreviousGasCell" [cellOptAbsent(PreviousGasCell)]
  syntax PreviousGasCell ::= "initPreviousGasCell" [function() initializer() noThread()]
  syntax PreviousGasCell ::= "<previousGas>" Int "</previousGas>" [cell() cellName(previousGas) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax PeakMemoryCellOpt ::= PeakMemoryCell
  syntax PeakMemoryCellOpt ::= "noPeakMemoryCell" [cellOptAbsent(PeakMemoryCell)]
  syntax PeakMemoryCell ::= "initPeakMemoryCell" [function() initializer() noThread()]
  syntax PeakMemoryCell ::= "<peakMemory>" Int "</peakMemory>" [cell() cellName(peakMemory) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax OutputCellOpt ::= OutputCell
  syntax OutputCellOpt ::= "noOutputCell" [cellOptAbsent(OutputCell)]
  syntax OutputCell ::= "initOutputCell" [function() initializer() noThread()]
  syntax OutputCell ::= "<output>" Ints "</output>" [cell() cellName(output) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax OriginCellOpt ::= OriginCell
  syntax OriginCellOpt ::= "noOriginCell" [cellOptAbsent(OriginCell)]
  syntax OriginCell ::= "initOriginCell" [function() initializer() noThread()]
  syntax OriginCell ::= "<origin>" Int "</origin>" [cell() cellName(origin) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax NumberCellOpt ::= NumberCell
  syntax NumberCellOpt ::= "noNumberCell" [cellOptAbsent(NumberCell)]
  syntax NumberCell ::= "initNumberCell" [function() initializer() noThread()]
  syntax NumberCell ::= "<number>" Int "</number>" [cell() cellName(number) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax NregsCellOpt ::= NregsCell
  syntax NregsCellOpt ::= "noNregsCell" [cellOptAbsent(NregsCell)]
  syntax NregsCell ::= "initNregsCell" [function() initializer() noThread()]
  syntax NregsCell ::= "<nregs>" Int "</nregs>" [cell() cellName(nregs) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax NparamsCellOpt ::= NparamsCell
  syntax NparamsCellOpt ::= "noNparamsCell" [cellOptAbsent(NparamsCell)]
  syntax NparamsCell ::= "initNparamsCell" [function() initializer() noThread()]
  syntax NparamsCell ::= "<nparams>" Int "</nparams>" [cell() cellName(nparams) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax NonceCellOpt ::= NonceCell
  syntax NonceCellOpt ::= "noNonceCell" [cellOptAbsent(NonceCell)]
  syntax NonceCell ::= "initNonceCell" [function() initializer() noThread()]
  syntax NonceCell ::= "<nonce>" Int "</nonce>" [cell() cellName(nonce) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax NetworkCellOpt ::= NetworkCell
  syntax NetworkCellOpt ::= "noNetworkCell" [cellOptAbsent(NetworkCell)]
  syntax NetworkCellFragment ::= "<network>-fragment" ActiveAccountsCellOpt AccountsCellOpt TxOrderCellOpt TxPendingCellOpt MessagesCellOpt "</network>-fragment" [cellFragment(NetworkCell)]
  syntax NetworkCell ::= "initNetworkCell" [function() initializer() noThread()]
  syntax NetworkCell ::= "<network>" ActiveAccountsCell AccountsCell TxOrderCell TxPendingCell MessagesCell "</network>" [cell() cellName(network) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax MsgIDCellOpt ::= MsgIDCell
  syntax MsgIDCellOpt ::= "noMsgIDCell" [cellOptAbsent(MsgIDCell)]
  syntax MsgIDCell ::= "initMsgIDCell" [function() initializer() noThread()]
  syntax MsgIDCell ::= "<msgID>" Int "</msgID>" [cell() cellName(msgID) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ModeCellOpt ::= ModeCell
  syntax ModeCellOpt ::= "noModeCell" [cellOptAbsent(ModeCell)]
  syntax ModeCell ::= "initModeCell" "(" Map ")" [function() initializer() noThread()]
  syntax ModeCell ::= "<mode>" Mode "</mode>" [cell() cellName(mode) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Mode [org.kframework.attributes.Location(Location(163,5,163,15)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  syntax MessagesCellOpt ::= MessagesCell
  syntax MessagesCellOpt ::= "noMessagesCell" [cellOptAbsent(MessagesCell)]
  syntax MessagesCellFragment ::= "<messages>-fragment" MessageCellMap "</messages>-fragment" [cellFragment(MessagesCell)]
  syntax MessagesCell ::= "initMessagesCell" [function() initializer() noThread()]
  syntax MessagesCell ::= "<messages>" MessageCellMap "</messages>" [cell() cellName(messages) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax MessageCellMap [hook(MAP.Map)]
  syntax MessageCellMap ::= MessageCellMap MessageCellMap [assoc() avoid() cellCollection() comm() element(MessageCellMapItem) function() hook(MAP.concat) unit(.MessageCellMap) wrapElement(<message>)]
  syntax MessageCellMap ::= MessageCell
  syntax MessageCellMap ::= "initMessageCell" [function() initializer() noThread()]
  syntax MessageCellMap ::= "MessageCellMapItem" "(" MsgIDCell "," MessageCell ")" [format(%5) function() hook(MAP.element)]
  syntax MessageCellMap ::= ".MessageCellMap" [function() hook(MAP.unit)]
  syntax MessageCellFragment ::= "<message>-fragment" MsgIDCellOpt TxNonceCellOpt TxGasPriceCellOpt TxGasLimitCellOpt SendtoCellOpt FuncCellOpt ValueCellOpt FromCellOpt DataCellOpt ArgsCellOpt "</message>-fragment" [cellFragment(MessageCell)]
  syntax MessageCell ::= "<message>" MsgIDCell TxNonceCell TxGasPriceCell TxGasLimitCell SendtoCell FuncCell ValueCell FromCell DataCell ArgsCell "</message>" [cell() cellName(message) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%d%n%12) multiplicity(*) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) type(Map)]
  syntax LogDataCellOpt ::= LogDataCell
  syntax LogDataCellOpt ::= "noLogDataCell" [cellOptAbsent(LogDataCell)]
  syntax LogDataCell ::= "initLogDataCell" [function() initializer() noThread()]
  syntax LogDataCell ::= "<logData>" List "</logData>" [cell() cellName(logData) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax LocalMemCellOpt ::= LocalMemCell
  syntax LocalMemCellOpt ::= "noLocalMemCell" [cellOptAbsent(LocalMemCell)]
  syntax LocalMemCell ::= "initLocalMemCell" [function() initializer() noThread()]
  syntax LocalMemCell ::= "<localMem>" Map "</localMem>" [cell() cellName(localMem) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax LocalCallsCellOpt ::= LocalCallsCell
  syntax LocalCallsCellOpt ::= "noLocalCallsCell" [cellOptAbsent(LocalCallsCell)]
  syntax LocalCallsCell ::= "initLocalCallsCell" [function() initializer() noThread()]
  syntax LocalCallsCell ::= "<localCalls>" List "</localCalls>" [cell() cellName(localCalls) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax KCellOpt ::= KCell
  syntax KCellOpt ::= "noKCell" [cellOptAbsent(KCell)]
  syntax JumpTableCellOpt ::= JumpTableCell
  syntax JumpTableCellOpt ::= "noJumpTableCell" [cellOptAbsent(JumpTableCell)]
  syntax JumpTableCell ::= "initJumpTableCell" [function() initializer() noThread()]
  syntax JumpTableCell ::= "<jumpTable>" Map "</jumpTable>" [cell() cellName(jumpTable) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax InterimStatesCellOpt ::= InterimStatesCell
  syntax InterimStatesCellOpt ::= "noInterimStatesCell" [cellOptAbsent(InterimStatesCell)]
  syntax InterimStatesCell ::= "initInterimStatesCell" [function() initializer() noThread()]
  syntax InterimStatesCell ::= "<interimStates>" List "</interimStates>" [cell() cellName(interimStates) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax InstructionsCellOpt ::= InstructionsCell
  syntax InstructionsCellOpt ::= "noInstructionsCell" [cellOptAbsent(InstructionsCell)]
  syntax InstructionsCell ::= "initInstructionsCell" [function() initializer() noThread()]
  syntax InstructionsCell ::= "<instructions>" Blocks "</instructions>" [cell() cellName(instructions) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax IeleName ::= "iele.Wallet" [token()]
  syntax IeleName ::= "Main" [token()]
  syntax IeleCellOpt ::= IeleCell
  syntax IeleCellOpt ::= "noIeleCell" [cellOptAbsent(IeleCell)]
  syntax IeleCellFragment ::= "<iele>-fragment" OutputCellOpt CallStackCellOpt InterimStatesCellOpt SubstateStackCellOpt CallFrameCellOpt SubstateCellOpt GasPriceCellOpt OriginCellOpt BeneficiaryCellOpt DifficultyCellOpt NumberCellOpt GasLimitCellOpt GasUsedCellOpt TimestampCellOpt BlockhashCellOpt "</iele>-fragment" [cellFragment(IeleCell)]
  syntax IeleCell ::= "initIeleCell" [function() initializer() noThread()]
  syntax IeleCell ::= "<iele>" OutputCell CallStackCell InterimStatesCell SubstateStackCell CallFrameCell SubstateCell GasPriceCell OriginCell BeneficiaryCell DifficultyCell NumberCell GasLimitCell GasUsedCell TimestampCell BlockhashCell "</iele>" [cell() cellName(iele) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%n%15%n%16%d%n%17) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax IdCellOpt ::= IdCell
  syntax IdCellOpt ::= "noIdCell" [cellOptAbsent(IdCell)]
  syntax IdCell ::= "initIdCell" [function() initializer() noThread()]
  syntax IdCell ::= "<id>" Int "</id>" [cell() cellName(id) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax IELESimulation [org.kframework.attributes.Location(Location(162,5,162,25)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  syntax GeneratedTopCellFragment ::= "<generatedTop>-fragment" KCellOpt SCellOpt ExitCodeCellOpt ModeCellOpt ScheduleCellOpt CheckGasCellOpt WellFormednessCellOpt IeleCellOpt NetworkCellOpt "</generatedTop>-fragment" [cellFragment(GeneratedTopCell)]
  syntax GeneratedTopCell ::= "initGeneratedTopCell" "(" Map ")" [function() initializer() noThread()]
  syntax GeneratedTopCell ::= "<generatedTop>" KCell SCell ExitCodeCell ModeCell ScheduleCell CheckGasCell WellFormednessCell IeleCell NetworkCell "</generatedTop>" [cell() cellName(generatedTop) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%d%n%11) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  syntax GasUsedCellOpt ::= GasUsedCell
  syntax GasUsedCellOpt ::= "noGasUsedCell" [cellOptAbsent(GasUsedCell)]
  syntax GasUsedCell ::= "initGasUsedCell" [function() initializer() noThread()]
  syntax GasUsedCell ::= "<gasUsed>" Int "</gasUsed>" [cell() cellName(gasUsed) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax GasPriceCellOpt ::= GasPriceCell
  syntax GasPriceCellOpt ::= "noGasPriceCell" [cellOptAbsent(GasPriceCell)]
  syntax GasPriceCell ::= "initGasPriceCell" [function() initializer() noThread()]
  syntax GasPriceCell ::= "<gasPrice>" Int "</gasPrice>" [cell() cellName(gasPrice) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax GasLimitCellOpt ::= GasLimitCell
  syntax GasLimitCellOpt ::= "noGasLimitCell" [cellOptAbsent(GasLimitCell)]
  syntax GasLimitCell ::= "initGasLimitCell" [function() initializer() noThread()]
  syntax GasLimitCell ::= "<gasLimit>" Int "</gasLimit>" [cell() cellName(gasLimit) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax GasCellOpt ::= GasCell
  syntax GasCellOpt ::= "noGasCell" [cellOptAbsent(GasCell)]
  syntax GasCell ::= "initGasCell" [function() initializer() noThread()]
  syntax GasCell ::= "<gas>" Int "</gas>" [cell() cellName(gas) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FunctionsCellOpt ::= FunctionsCell
  syntax FunctionsCellOpt ::= "noFunctionsCell" [cellOptAbsent(FunctionsCell)]
  syntax FunctionsCellFragment ::= "<functions>-fragment" FunctionCellMap "</functions>-fragment" [cellFragment(FunctionsCell)]
  syntax FunctionsCell ::= "initFunctionsCell" [function() initializer() noThread()]
  syntax FunctionsCell ::= "<functions>" FunctionCellMap "</functions>" [cell() cellName(functions) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FunctionCellMap [hook(MAP.Map)]
  syntax FunctionCellMap ::= FunctionCellMap FunctionCellMap [assoc() avoid() cellCollection() comm() element(FunctionCellMapItem) function() hook(MAP.concat) unit(.FunctionCellMap) wrapElement(<function>)]
  syntax FunctionCellMap ::= FunctionCell
  syntax FunctionCellMap ::= "initFunctionCell" [function() initializer() noThread()]
  syntax FunctionCellMap ::= "FunctionCellMapItem" "(" FuncIdCell "," FunctionCell ")" [format(%5) function() hook(MAP.element)]
  syntax FunctionCellMap ::= ".FunctionCellMap" [function() hook(MAP.unit)]
  syntax FunctionCellFragment ::= "<function>-fragment" FuncIdCellOpt NparamsCellOpt InstructionsCellOpt JumpTableCellOpt NregsCellOpt "</function>-fragment" [cellFragment(FunctionCell)]
  syntax FunctionCell ::= "<function>" FuncIdCell NparamsCell InstructionsCell JumpTableCell NregsCell "</function>" [cell() cellName(function) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7) multiplicity(*) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) type(Map)]
  syntax FuncLabelsCellOpt ::= FuncLabelsCell
  syntax FuncLabelsCellOpt ::= "noFuncLabelsCell" [cellOptAbsent(FuncLabelsCell)]
  syntax FuncLabelsCell ::= "initFuncLabelsCell" [function() initializer() noThread()]
  syntax FuncLabelsCell ::= "<funcLabels>" Map "</funcLabels>" [cell() cellName(funcLabels) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FuncIdsCellOpt ::= FuncIdsCell
  syntax FuncIdsCellOpt ::= "noFuncIdsCell" [cellOptAbsent(FuncIdsCell)]
  syntax FuncIdsCell ::= "initFuncIdsCell" [function() initializer() noThread()]
  syntax FuncIdsCell ::= "<funcIds>" Set "</funcIds>" [cell() cellName(funcIds) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FuncIdCellOpt ::= FuncIdCell
  syntax FuncIdCellOpt ::= "noFuncIdCell" [cellOptAbsent(FuncIdCell)]
  syntax FuncIdCell ::= "initFuncIdCell" [function() initializer() noThread()]
  syntax FuncIdCell ::= "<funcId>" IeleName "</funcId>" [cell() cellName(funcId) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FuncCellOpt ::= FuncCell
  syntax FuncCellOpt ::= "noFuncCell" [cellOptAbsent(FuncCell)]
  syntax FuncCell ::= "initFuncCell" [function() initializer() noThread()]
  syntax FuncCell ::= "<func>" IeleName "</func>" [cell() cellName(func) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FromCellOpt ::= FromCell
  syntax FromCellOpt ::= "noFromCell" [cellOptAbsent(FromCell)]
  syntax FromCell ::= "initFromCell" [function() initializer() noThread()]
  syntax FromCell ::= "<from>" Int "</from>" [cell() cellName(from) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FidCellOpt ::= FidCell
  syntax FidCellOpt ::= "noFidCell" [cellOptAbsent(FidCell)]
  syntax FidCell ::= "initFidCell" [function() initializer() noThread()]
  syntax FidCell ::= "<fid>" IeleName "</fid>" [cell() cellName(fid) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ExportedCellOpt ::= ExportedCell
  syntax ExportedCellOpt ::= "noExportedCell" [cellOptAbsent(ExportedCell)]
  syntax ExportedCell ::= "initExportedCell" [function() initializer() noThread()]
  syntax ExportedCell ::= "<exported>" Set "</exported>" [cell() cellName(exported) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ExitCodeCellOpt ::= ExitCodeCell
  syntax ExitCodeCellOpt ::= "noExitCodeCell" [cellOptAbsent(ExitCodeCell)]
  syntax ExitCodeCell ::= "initExitCodeCell" [function() initializer() noThread()]
  syntax ExitCodeCell ::= "<exit-code>" Int "</exit-code>" [cell() cellName(exit-code) contentStartColumn(19) contentStartLine(31) exit() format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ExistsCellOpt ::= ExistsCell
  syntax ExistsCellOpt ::= "noExistsCell" [cellOptAbsent(ExistsCell)]
  syntax ExistsCell ::= "initExistsCell" [function() initializer() noThread()]
  syntax ExistsCell ::= "<exists>" Bool "</exists>" [cell() cellName(exists) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax DifficultyCellOpt ::= DifficultyCell
  syntax DifficultyCellOpt ::= "noDifficultyCell" [cellOptAbsent(DifficultyCell)]
  syntax DifficultyCell ::= "initDifficultyCell" [function() initializer() noThread()]
  syntax DifficultyCell ::= "<difficulty>" Int "</difficulty>" [cell() cellName(difficulty) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax DataCellOpt ::= DataCell
  syntax DataCellOpt ::= "noDataCell" [cellOptAbsent(DataCell)]
  syntax DataCell ::= "initDataCell" [function() initializer() noThread()]
  syntax DataCell ::= "<data>" WordStack "</data>" [cell() cellName(data) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CurrentMemoryCellOpt ::= CurrentMemoryCell
  syntax CurrentMemoryCellOpt ::= "noCurrentMemoryCell" [cellOptAbsent(CurrentMemoryCell)]
  syntax CurrentMemoryCell ::= "initCurrentMemoryCell" [function() initializer() noThread()]
  syntax CurrentMemoryCell ::= "<currentMemory>" Int "</currentMemory>" [cell() cellName(currentMemory) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ContractDefinition ::= "contract" IeleName "!" Int String "{" TopLevelDefinitions "}"
  syntax ContractCodeCellOpt ::= ContractCodeCell
  syntax ContractCodeCellOpt ::= "noContractCodeCell" [cellOptAbsent(ContractCodeCell)]
  syntax ContractCodeCell ::= "initContractCodeCell" [function() initializer() noThread()]
  syntax ContractCodeCell ::= "<contractCode>" Contract "</contractCode>" [cell() cellName(contractCode) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Contract ::= "#emptyCode"
  syntax CodeCellOpt ::= CodeCell
  syntax CodeCellOpt ::= "noCodeCell" [cellOptAbsent(CodeCell)]
  syntax CodeCell ::= "initCodeCell" [function() initializer() noThread()]
  syntax CodeCell ::= "<code>" Contract "</code>" [cell() cellName(code) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CheckGasCellOpt ::= CheckGasCell
  syntax CheckGasCellOpt ::= "noCheckGasCell" [cellOptAbsent(CheckGasCell)]
  syntax CheckGasCell ::= "initCheckGasCell" [function() initializer() noThread()]
  syntax CheckGasCell ::= "<checkGas>" Bool "</checkGas>" [cell() cellName(checkGas) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Cell ::= WellFormednessScheduleCell
  syntax Cell ::= WellFormednessCell
  syntax Cell ::= TypesCell
  syntax Cell ::= TypeCheckingCell
  syntax Cell ::= SCell
  syntax Cell ::= LabelsCell
  syntax Cell ::= KCell
  syntax Cell ::= FunctionNameCell
  syntax Cell ::= FunctionBodiesCell
  syntax Cell ::= DeclaredContractsCell
  syntax Cell ::= CurrentInstructionsCell
  syntax Cell ::= CurrentFunctionCell
  syntax Cell ::= CurrentContractCell
  syntax Cell ::= ContractsCell
  syntax Cell ::= ContractNameCell
  syntax CallerCellOpt ::= CallerCell
  syntax CallerCellOpt ::= "noCallerCell" [cellOptAbsent(CallerCell)]
  syntax CallerCell ::= "initCallerCell" [function() initializer() noThread()]
  syntax CallerCell ::= "<caller>" Int "</caller>" [cell() cellName(caller) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CallValueCellOpt ::= CallValueCell
  syntax CallValueCellOpt ::= "noCallValueCell" [cellOptAbsent(CallValueCell)]
  syntax CallValueCell ::= "initCallValueCell" [function() initializer() noThread()]
  syntax CallValueCell ::= "<callValue>" Int "</callValue>" [cell() cellName(callValue) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CallStackCellOpt ::= CallStackCell
  syntax CallStackCellOpt ::= "noCallStackCell" [cellOptAbsent(CallStackCell)]
  syntax CallStackCell ::= "initCallStackCell" [function() initializer() noThread()]
  syntax CallStackCell ::= "<callStack>" List "</callStack>" [cell() cellName(callStack) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CallFrameCellOpt ::= CallFrameCell
  syntax CallFrameCellOpt ::= "noCallFrameCell" [cellOptAbsent(CallFrameCell)]
  syntax CallFrameCellFragment ::= "<callFrame>-fragment" ProgramCellOpt CallDepthCellOpt LocalCallsCellOpt IdCellOpt CallerCellOpt CallDataCellOpt CallValueCellOpt RegsCellOpt LocalMemCellOpt PeakMemoryCellOpt CurrentMemoryCellOpt FidCellOpt GasCellOpt PreviousGasCellOpt StaticCellOpt "</callFrame>-fragment" [cellFragment(CallFrameCell)]
  syntax CallFrameCell ::= "initCallFrameCell" [function() initializer() noThread()]
  syntax CallFrameCell ::= "<callFrame>" ProgramCell CallDepthCell LocalCallsCell IdCell CallerCell CallDataCell CallValueCell RegsCell LocalMemCell PeakMemoryCell CurrentMemoryCell FidCell GasCell PreviousGasCell StaticCell "</callFrame>" [cell() cellName(callFrame) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%n%15%n%16%d%n%17) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CallDepthCellOpt ::= CallDepthCell
  syntax CallDepthCellOpt ::= "noCallDepthCell" [cellOptAbsent(CallDepthCell)]
  syntax CallDepthCell ::= "initCallDepthCell" [function() initializer() noThread()]
  syntax CallDepthCell ::= "<callDepth>" Int "</callDepth>" [cell() cellName(callDepth) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CallDataCellOpt ::= CallDataCell
  syntax CallDataCellOpt ::= "noCallDataCell" [cellOptAbsent(CallDataCell)]
  syntax CallDataCell ::= "initCallDataCell" [function() initializer() noThread()]
  syntax CallDataCell ::= "<callData>" Ints "</callData>" [cell() cellName(callData) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax BlockhashCellOpt ::= BlockhashCell
  syntax BlockhashCellOpt ::= "noBlockhashCell" [cellOptAbsent(BlockhashCell)]
  syntax BlockhashCell ::= "initBlockhashCell" [function() initializer() noThread()]
  syntax BlockhashCell ::= "<blockhash>" List "</blockhash>" [cell() cellName(blockhash) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax BeneficiaryCellOpt ::= BeneficiaryCell
  syntax BeneficiaryCellOpt ::= "noBeneficiaryCell" [cellOptAbsent(BeneficiaryCell)]
  syntax BeneficiaryCell ::= "initBeneficiaryCell" [function() initializer() noThread()]
  syntax BeneficiaryCell ::= "<beneficiary>" Int "</beneficiary>" [cell() cellName(beneficiary) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax BalanceCellOpt ::= BalanceCell
  syntax BalanceCellOpt ::= "noBalanceCell" [cellOptAbsent(BalanceCell)]
  syntax BalanceCell ::= "initBalanceCell" [function() initializer() noThread()]
  syntax BalanceCell ::= "<balance>" Int "</balance>" [cell() cellName(balance) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ArgsCellOpt ::= ArgsCell
  syntax ArgsCellOpt ::= "noArgsCell" [cellOptAbsent(ArgsCell)]
  syntax ArgsCell ::= "initArgsCell" [function() initializer() noThread()]
  syntax ArgsCell ::= "<args>" Ints "</args>" [cell() cellName(args) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ActiveAccountsCellOpt ::= ActiveAccountsCell
  syntax ActiveAccountsCellOpt ::= "noActiveAccountsCell" [cellOptAbsent(ActiveAccountsCell)]
  syntax ActiveAccountsCell ::= "initActiveAccountsCell" [function() initializer() noThread()]
  syntax ActiveAccountsCell ::= "<activeAccounts>" Set "</activeAccounts>" [cell() cellName(activeAccounts) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax AcctIDCellOpt ::= AcctIDCell
  syntax AcctIDCellOpt ::= "noAcctIDCell" [cellOptAbsent(AcctIDCell)]
  syntax AcctIDCell ::= "initAcctIDCell" [function() initializer() noThread()]
  syntax AcctIDCell ::= "<acctID>" Int "</acctID>" [cell() cellName(acctID) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax AccountsCellOpt ::= AccountsCell
  syntax AccountsCellOpt ::= "noAccountsCell" [cellOptAbsent(AccountsCell)]
  syntax AccountsCellFragment ::= "<accounts>-fragment" AccountCellMap "</accounts>-fragment" [cellFragment(AccountsCell)]
  syntax AccountsCell ::= "initAccountsCell" [function() initializer() noThread()]
  syntax AccountsCell ::= "<accounts>" AccountCellMap "</accounts>" [cell() cellName(accounts) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax AccountCellMap [hook(MAP.Map)]
  syntax AccountCellMap ::= AccountCellMap AccountCellMap [assoc() avoid() cellCollection() comm() element(AccountCellMapItem) function() hook(MAP.concat) unit(.AccountCellMap) wrapElement(<account>)]
  syntax AccountCellMap ::= AccountCell
  syntax AccountCellMap ::= "initAccountCell" [function() initializer() noThread()]
  syntax AccountCellMap ::= "AccountCellMapItem" "(" AcctIDCell "," AccountCell ")" [format(%5) function() hook(MAP.element)]
  syntax AccountCellMap ::= ".AccountCellMap" [function() hook(MAP.unit)]
  syntax AccountCellFragment ::= "<account>-fragment" AcctIDCellOpt BalanceCellOpt CodeCellOpt StorageCellOpt NonceCellOpt ExistsCellOpt "</account>-fragment" [cellFragment(AccountCell)]
  syntax AccountCell ::= "<account>" AcctIDCell BalanceCell CodeCell StorageCell NonceCell ExistsCell "</account>" [cell() cellName(account) contentStartColumn(19) contentStartLine(31) format(%1%i%n%2%n%3%n%4%n%5%n%6%n%7%d%n%8) multiplicity(*) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) type(Map)]
  Bubble(config,<k/>                                               // Current computation
                  <s/>                                               // Current strategy
                  <exit-code exit=""> 1 </exit-code>                 // Exit code of interpreter process
                  <mode> $MODE:Mode </mode>                          // Execution mode: VMTESTS or NORMAL
                  <schedule> $SCHEDULE:Schedule </schedule>          // Gas Schedule: DEFAULT or ALBE
                  <checkGas> true </checkGas>                        // Enables/disables gas check in test driver

                  <well-formedness/>

                  // IELE Specific
                  // =============

                  <iele>

                    // Mutable during a single transaction
                    // -----------------------------------

                    <output>        .Ints </output>                  // Return registers of current call frame
                    <callStack>     .List </callStack>               // Inter-contract call stack
                    <interimStates> .List </interimStates>           // Checkpointed network state for rollback
                    <substateStack> .List </substateStack>           // Checkpointed substate for rollback

                    // A single contract call frame
                    // ----------------------------
                    <callFrame>
                      // The loaded state of a IELE program
                      // ----------------------------------
                      <program>
                        <functions>
                          <function multiplicity="*" type="Map">
                            <funcId>       deposit </funcId>         // The name of the function
                            <nparams>      0       </nparams>        // The number of parameters of the function
                            <instructions> (.Instructions .LabeledBlocks):Blocks </instructions> // The blocks of the function
                            <jumpTable>    .Map    </jumpTable>      // Map from jump label to blocks, for branch instruction
                            <nregs>        0       </nregs>          // Number of registers used by this function
                          </function>
                        </functions>
                        <funcIds>     .Set </funcIds>                // Set of all names of functions in <functions> cell
                        <funcLabels>  .Map </funcLabels>             // Map of integer function IDS to all function names in the <functions> cell
                        <exported>    .Set </exported>               // Set of all names of functions defined with define public
                        <programSize> 0    </programSize>            // Size in bytes of currently loaded contract
                        <contractCode> .Contract </contractCode>     // Disassembled entire contract
                      </program>
                      <callDepth>    0          </callDepth>         // Inter-contract call stack depth
                      <localCalls>   .List      </localCalls>        // Intra-contract call stack

                      // I_*
                      <id>        0     </id>                         // Currently executing contract
                      <caller>    0     </caller>                     // Contract that called current contract
                      <callData>  .Ints </callData>                   // Copy of register arguments
                      <callValue> 0     </callValue>                  // Value in funds passed to contract

                      // \mu_*
                      <regs>          .Array  </regs>                 // Current values of registers
                      <localMem>      .Map    </localMem>             // Current values of local memory
                      <peakMemory>    0       </peakMemory>           // Maximum memory used so far in call frame
                      <currentMemory> 0       </currentMemory>        // Current memory used in call frame
                      <fid>           deposit </fid>                  // Name of currently executing function
                      <gas>           0       </gas>                  // Current gas remaining
                      <previousGas>   0       </previousGas>          // Gas remaining prior to last decrease

                      <static> false </static>                        // Whether the call frame came from a staticcall
                    </callFrame>

                    // A_* (execution substate)
                    <substate>
                      <selfDestruct> .Set  </selfDestruct>            // Set of contract ids that were destroyed by this transaction
                      <logData>  .List </logData>                     // Log entries for this transaction
                      <refund>       0     </refund>                  // Refund for this transaction
                    </substate>

                    // Immutable during a single transaction
                    // -------------------------------------

                    <gasPrice> 0 </gasPrice>                          // Price of gas for this transaction
                    <origin>   0 </origin>                            // Sender of current transaction

                    // I_H* (block information)
                    <beneficiary>      0          </beneficiary>      // Miner of current block
                    <difficulty>       0          </difficulty>       // Difficulty of current block
                    <number>           0          </number>           // Number of current block
                    <gasLimit>         0          </gasLimit>         // Gas limit of current block
                    <gasUsed>          0          </gasUsed>          // Gas used by current block
                    <timestamp>        0          </timestamp>        // Timestamp of current block
                    <blockhash>         .List     </blockhash>        // List of previous block's hashes

                  </iele>

                  // IELE Network Layer
                  // ==================

                  <network>

                    // Accounts Record
                    // ---------------

                    <activeAccounts> .Set </activeAccounts> // Set of keys in the accounts cell.
                    <accounts>
                      <account multiplicity="*" type="Map">
                        <acctID>   0          </acctID>     // ID of account
                        <balance>  0          </balance>    // Balance of funds in account
                        <code>     #emptyCode </code>       // Disassembled contract of account
                        <storage>  .Map       </storage>    // Permanent storage of account (for sload/sstore)
                        <nonce>    0          </nonce>      // Nonce of account
                        <exists>   false      </exists>     // True if account exists in blockchain
                      </account>
                    </accounts>

                    // Transactions Record
                    // -------------------

                    <txOrder>   .List </txOrder>            // Order of transactions in block
                    <txPending> .List </txPending>          // Remaining transactions in block

                    <messages>
                      <message multiplicity="*" type="Map">
                        <msgID>      0          </msgID>              // Unique ID of transaction
                        <txNonce>    0          </txNonce>            // Nonce of transaction (not checked)
                        <txGasPrice> 0          </txGasPrice>         // Gas price of transaction
                        <txGasLimit> 0          </txGasLimit>         // Gas limit of transaction
                        <sendto>     .Account   </sendto>             // Destination of transaction (.Account for account creation)
                        <func>       deposit    </func>               // Function to call by transaction
                        <value>      0          </value>              // Value in funds to transfer by transaction
                        <from>       0          </from>               // Sender of transaction
                        <data>       .WordStack </data>               // Arguments to function called by transaction
                        <args>       .Ints      </args>
                      </message>
                    </messages>

                  </network>,[contentStartColumn(19) contentStartLine(31) org.kframework.attributes.Location(Location(31,5,160,28)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
endmodule


module IELE-CONSTANTS [org.kframework.attributes.Location(Location(20,1,24,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))]
  imports IELE-CONSTANTS$SYNTAX
endmodule


module IELE-CONSTANTS$SYNTAX [org.kframework.attributes.Location(Location(20,1,24,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))]
  syntax Schedule ::= "DANSE"
  syntax Schedule ::= "ALBE"
  syntax Mode ::= "VMTESTS"
  syntax Mode ::= "NORMAL" [klabel(NORMAL) symbol()]
endmodule


module IELE-DATA [org.kframework.attributes.Location(Location(12,1,592,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))]
  imports STRING-BUFFER
  imports KRYPTO
  imports IELE-DATA$SYNTAX
  imports IELE-CONSTANTS
  imports IELE-COMMON
  imports DOMAINS
  imports COLLECTIONS
  imports BYTES
  imports ARRAY
  rule word2Bool(#token("0","Int"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(76) org.kframework.attributes.Location(Location(76,10,76,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule word2Bool(#SemanticCastToInt(W))=>#token("true","Bool") requires `_=/=K_`(#SemanticCastToInt(W),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(77) org.kframework.attributes.Location(Location(77,10,77,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule twos(#SemanticCastToInt(N),#SemanticCastToInt(W))=>bitRangeInt(#SemanticCastToInt(W),#token("0","Int"),`_<<Int__INT-COMMON`(#SemanticCastToInt(N),#token("3","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(227) org.kframework.attributes.Location(Location(227,10,227,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule sizeWordStackAux(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToInt(SIZE))=>sizeWordStackAux(#SemanticCastToWordStack(WS),`_+Int_`(#SemanticCastToInt(SIZE),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(311) org.kframework.attributes.Location(Location(311,10,311,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule sizeWordStackAux(`.WordStack_IELE-DATA`(.KList),#SemanticCastToInt(SIZE))=>#SemanticCastToInt(SIZE) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(310) org.kframework.attributes.Location(Location(310,10,310,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule signextend(#SemanticCastToInt(N),#SemanticCastToInt(W))=>signExtendBitRangeInt(#SemanticCastToInt(W),#token("0","Int"),`_<<Int__INT-COMMON`(#SemanticCastToInt(N),#token("3","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(225) org.kframework.attributes.Location(Location(225,10,225,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule rlpEncodeInts(#SemanticCastToInts(INTS))=>#rlpEncodeIntsAux(`.StringBuffer_STRING-BUFFER-HOOKED`(.KList),#SemanticCastToInts(INTS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(522) org.kframework.attributes.Location(Location(522,10,522,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule rlpDecode(#SemanticCastToString(STR))=>#rlpDecodeAux(#SemanticCastToString(STR),#decodeLengthPrefix(#SemanticCastToString(STR),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(562) org.kframework.attributes.Location(Location(562,10,562,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule powmod(#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2))=>`_^%Int___INT-COMMON`(#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(W2),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(182) org.kframework.attributes.Location(Location(182,10,182,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule keccak(#SemanticCastToBytes(WS))=>#parseHexWord(`Keccak256`(`Bytes2String`(#SemanticCastToBytes(WS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(237) org.kframework.attributes.Location(Location(237,10,237,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule intSizesAux(#SemanticCastToArray(ARR),#SemanticCastToInt(I),#SemanticCastToInt(J),`ALBE_IELE-CONSTANTS`(.KList))=>`_+Int_`(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(ARR),#SemanticCastToInt(J))),intSizesAux(#SemanticCastToArray(ARR),#SemanticCastToInt(I),`_+Int_`(#SemanticCastToInt(J),#token("1","Int")),`ALBE_IELE-CONSTANTS`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(165) org.kframework.attributes.Location(Location(165,10,165,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule intSizesAux(#SemanticCastToArray(ARR),#SemanticCastToInt(I),#SemanticCastToInt(J),#SemanticCastToSchedule(SCHED))=>`_+Int_`(intSize(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(ARR),#SemanticCastToInt(J)))),intSizesAux(#SemanticCastToArray(ARR),#SemanticCastToInt(I),`_+Int_`(#SemanticCastToInt(J),#token("1","Int")),#SemanticCastToSchedule(SCHED))) requires `_=/=K_`(#SemanticCastToSchedule(SCHED),`ALBE_IELE-CONSTANTS`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(163) org.kframework.attributes.Location(Location(163,10,164,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) owise()]
  rule intSizesAux(#SemanticCastToArray(ARR),#SemanticCastToInt(I),#SemanticCastToInt(I),#SemanticCastToSchedule(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(162) org.kframework.attributes.Location(Location(162,10,162,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule intSizesArr(#SemanticCastToArray(ARR),#SemanticCastToInt(I),#SemanticCastToSchedule(SCHED))=>intSizesAux(#SemanticCastToArray(ARR),#SemanticCastToInt(I),#token("0","Int"),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(161) org.kframework.attributes.Location(Location(161,10,161,70)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule intSizes(operandList(#SemanticCastToInt(I),#SemanticCastToInts(INTS)))=>`_+Int_`(intSize(#SemanticCastToInt(I)),intSizes(#SemanticCastToInts(INTS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(156) org.kframework.attributes.Location(Location(156,10,156,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule intSizes(`.List{"operandList"}`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(155) org.kframework.attributes.Location(Location(155,10,155,30)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule intSize(#token("0","Int"))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(150) org.kframework.attributes.Location(Location(150,10,150,25)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule intSize(#SemanticCastToInt(N))=>intSize(`~Int__INT-COMMON`(#SemanticCastToInt(N))) requires `_<Int__INT-COMMON`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(151) org.kframework.attributes.Location(Location(151,10,151,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule intSize(#SemanticCastToInt(N))=>ceilDiv(`_+Int_`(log2Int(#SemanticCastToInt(N)),#token("2","Int")),#token("64","Int")) requires `_>Int__INT-COMMON`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(149) org.kframework.attributes.Location(Location(149,10,149,71)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule getInt(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(122) org.kframework.attributes.Location(Location(122,10,122,28)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule getIeleName(#SemanticCastToIeleName(X))=>#SemanticCastToIeleName(X) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(123) org.kframework.attributes.Location(Location(123,10,123,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule gcdInt(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#gcdInt(absInt(#SemanticCastToInt(B)),absInt(#SemanticCastToInt(A))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(192) org.kframework.attributes.Location(Location(192,10,192,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule gcdInt(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#gcdInt(absInt(#SemanticCastToInt(A)),absInt(#SemanticCastToInt(B))) requires `_>=Int__INT-COMMON`(absInt(#SemanticCastToInt(A)),absInt(#SemanticCastToInt(B))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(191) org.kframework.attributes.Location(Location(191,10,191,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule chop(#SemanticCastToInt(I))=>bitRangeInt(#SemanticCastToInt(I),#token("0","Int"),#token("256","Int")) requires `_orBool__BOOL`(`_<Int__INT-COMMON`(#SemanticCastToInt(I),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(I),`pow256_IELE-DATA`(.KList))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(61) org.kframework.attributes.Location(Location(61,10,61,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule chop(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(I),#token("0","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(I),`pow256_IELE-DATA`(.KList))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(62) org.kframework.attributes.Location(Location(62,10,62,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule ceilDiv(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_/Int__INT-COMMON`(`_+Int_`(#SemanticCastToInt(I1),`_-Int__INT-COMMON`(#SemanticCastToInt(I2),#token("1","Int"))),#SemanticCastToInt(I2)) requires `_>Int__INT-COMMON`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(138) org.kframework.attributes.Location(Location(138,10,138,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule bytesRange(#SemanticCastToBytes(B),#SemanticCastToInt(I),#SemanticCastToInt(J))=>padRightBytes(substrBytes(#SemanticCastToBytes(B),#SemanticCastToInt(I),`minInt(_,_)_INT-COMMON`(lengthBytes(#SemanticCastToBytes(B)),`_+Int_`(#SemanticCastToInt(I),#SemanticCastToInt(J)))),#SemanticCastToInt(J),#token("0","Int")) requires `_<Int__INT-COMMON`(#SemanticCastToInt(I),lengthBytes(#SemanticCastToBytes(B))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(362) org.kframework.attributes.Location(Location(362,10,363,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule bytesRange(#SemanticCastToBytes(B),#SemanticCastToInt(I),#SemanticCastToInt(J))=>padRightBytes(`.Bytes_BYTES-HOOKED`(.KList),#SemanticCastToInt(J),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(364) org.kframework.attributes.Location(Location(364,10,364,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule bytesInWords(#SemanticCastToInt(I))=>ceilDiv(#SemanticCastToInt(I),#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(174) org.kframework.attributes.Location(Location(174,10,174,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule byte(#SemanticCastToInt(N),#SemanticCastToInt(W))=>bitRangeInt(#SemanticCastToInt(W),`_<<Int__INT-COMMON`(#SemanticCastToInt(N),#token("3","Int")),#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(205) org.kframework.attributes.Location(Location(205,10,205,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule bswap(#SemanticCastToInt(N),#SemanticCastToInt(W))=>`Bytes2Int`(`Int2Bytes`(#SemanticCastToInt(N),twos(#SemanticCastToInt(N),#SemanticCastToInt(W)),bigEndianBytes(.KList)),littleEndianBytes(.KList),unsignedBytes(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(229) org.kframework.attributes.Location(Location(229,10,229,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule bool2Word(#token("true","Bool"))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(71) org.kframework.attributes.Location(Location(71,10,71,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule bool2Word(#token("false","Bool"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(72) org.kframework.attributes.Location(Location(72,10,72,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule bitsInWords(#SemanticCastToInt(I),`ALBE_IELE-CONSTANTS`(.KList))=>ceilDiv(#SemanticCastToInt(I),#token("256","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(169) org.kframework.attributes.Location(Location(169,10,169,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule bitsInWords(#SemanticCastToInt(I),#SemanticCastToSchedule(_))=>ceilDiv(#SemanticCastToInt(I),#token("64","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(170) org.kframework.attributes.Location(Location(170,10,170,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule assignWordStackRange(#SemanticCastToWordStack(WS1),#SemanticCastToInt(N),#SemanticCastToWordStack(WS2))=>`_++__IELE-DATA`(#take(#SemanticCastToInt(N),#SemanticCastToWordStack(WS1)),`_++__IELE-DATA`(#SemanticCastToWordStack(WS2),#drop(`_+Int_`(#SemanticCastToInt(N),#sizeWordStack(#SemanticCastToWordStack(WS2))),#SemanticCastToWordStack(WS1)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(299) org.kframework.attributes.Location(Location(299,10,299,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule assignBytesRange(#SemanticCastToBytes(B),#SemanticCastToInt(I),#SemanticCastToBytes(B'))=>replaceAtBytes(padRightBytes(#SemanticCastToBytes(B),`_+Int_`(#SemanticCastToInt(I),lengthBytes(#SemanticCastToBytes(B'))),#token("0","Int")),#SemanticCastToInt(I),#SemanticCastToBytes(B')) requires `_=/=K_`(#SemanticCastToBytes(B'),`.Bytes_BYTES-HOOKED`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(368) org.kframework.attributes.Location(Location(368,10,369,30)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule assignBytesRange(#SemanticCastToBytes(B),#SemanticCastToInt(I),#SemanticCastToBytes(B'))=>#SemanticCastToBytes(B) requires `_==K_`(#SemanticCastToBytes(B'),`.Bytes_BYTES-HOOKED`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(370) org.kframework.attributes.Location(Location(370,10,371,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `pow30_IELE-DATA`(.KList)=>`_^Int__INT-COMMON`(#token("2","Int"),#token("30","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(32) org.kframework.attributes.Location(Location(32,10,32,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `pow256_IELE-DATA`(.KList)=>`_^Int__INT-COMMON`(#token("2","Int"),#token("256","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(34) org.kframework.attributes.Location(Location(34,10,34,30)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `pow160_IELE-DATA`(.KList)=>`_^Int__INT-COMMON`(#token("2","Int"),#token("160","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(33) org.kframework.attributes.Location(Location(33,10,33,30)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_[_.._]_IELE-DATA`(#SemanticCastToWordStack(WS),#SemanticCastToInt(START),#SemanticCastToInt(WIDTH))=>#take(chop(#SemanticCastToInt(WIDTH)),#drop(chop(#SemanticCastToInt(START)),#SemanticCastToWordStack(WS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(291) org.kframework.attributes.Location(Location(291,10,291,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<Byte__IELE-DATA`(#SemanticCastToInt(N),#SemanticCastToInt(M))=>`_<<Int__INT-COMMON`(#SemanticCastToInt(N),`_*Int__INT-COMMON`(#token("8","Int"),#SemanticCastToInt(M))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(213) org.kframework.attributes.Location(Location(213,10,213,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_++__IELE-DATA`(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToWordStack(WS'))=>`_:__IELE-DATA`(#SemanticCastToInt(W),`_++__IELE-DATA`(#SemanticCastToWordStack(WS),#SemanticCastToWordStack(WS'))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(268) org.kframework.attributes.Location(Location(268,10,268,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_++__IELE-DATA`(`.WordStack_IELE-DATA`(.KList),#SemanticCastToWordStack(WS'))=>#SemanticCastToWordStack(WS') requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(267) org.kframework.attributes.Location(Location(267,10,267,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `IeleName2String`(#SemanticCastToInt(I))=>`Int2String`(#SemanticCastToInt(I)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(114) org.kframework.attributes.Location(Location(114,10,114,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `IeleName2String`(#SemanticCastToIeleName(N))=>`IeleNameToken2String`(#SemanticCastToIeleName(N)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(115) org.kframework.attributes.Location(Location(115,10,115,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `.Array_IELE-DATA`(.KList)=>makeArrayOcaml(`pow30_IELE-DATA`(.KList),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(333) org.kframework.attributes.Location(Location(333,10,333,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #unparseByteStackAux(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)),#SemanticCastToStringBuffer(BUFFER))=>#unparseByteStackAux(#SemanticCastToWordStack(WS),`_+String__STRING-BUFFER-HOOKED`(#SemanticCastToStringBuffer(BUFFER),chrChar(#SemanticCastToInt(W)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(489) org.kframework.attributes.Location(Location(489,10,489,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #unparseByteStackAux(`.WordStack_IELE-DATA`(.KList),#SemanticCastToStringBuffer(BUFFER))=>`StringBuffer2String`(#SemanticCastToStringBuffer(BUFFER)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(488) org.kframework.attributes.Location(Location(488,10,488,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #unparseByteStack(#SemanticCastToWordStack(WS))=>#unparseByteStackAux(#SemanticCastToWordStack(WS),`.StringBuffer_STRING-BUFFER-HOOKED`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(486) org.kframework.attributes.Location(Location(486,10,486,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #takeAux(#token("0","Int"),#SemanticCastToWordStack(_),#SemanticCastToWordStack(WS))=>#rev(#SemanticCastToWordStack(WS),`.WordStack_IELE-DATA`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(279) org.kframework.attributes.Location(Location(279,10,279,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #takeAux(#SemanticCastToInt(N),`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS1)),#SemanticCastToWordStack(WS2))=>#takeAux(`_-Int__INT-COMMON`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToWordStack(WS1),`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS2))) requires `_>Int__INT-COMMON`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(281) org.kframework.attributes.Location(Location(281,10,281,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #takeAux(#SemanticCastToInt(N),`.WordStack_IELE-DATA`(.KList),#SemanticCastToWordStack(WS))=>#takeAux(`_-Int__INT-COMMON`(#SemanticCastToInt(N),#token("1","Int")),`.WordStack_IELE-DATA`(.KList),`_:__IELE-DATA`(#token("0","Int"),#SemanticCastToWordStack(WS))) requires `_>Int__INT-COMMON`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(280) org.kframework.attributes.Location(Location(280,10,280,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #take(#SemanticCastToInt(N),#SemanticCastToWordStack(WS))=>#takeAux(#SemanticCastToInt(N),#SemanticCastToWordStack(WS),`.WordStack_IELE-DATA`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(278) org.kframework.attributes.Location(Location(278,10,278,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeWordStack(#SemanticCastToWordStack(WS))=>sizeWordStackAux(#SemanticCastToWordStack(WS),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(309) org.kframework.attributes.Location(Location(309,10,309,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeRegsAux(operandList(#SemanticCastToOperand(REG),#SemanticCastToOperands(REGS)),#SemanticCastToInt(N))=>#sizeRegsAux(#SemanticCastToOperands(REGS),`_+Int_`(#SemanticCastToInt(N),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(100) org.kframework.attributes.Location(Location(100,10,100,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeRegsAux(`.List{"operandList"}`(.KList),#SemanticCastToInt(N))=>#SemanticCastToInt(N) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(101) org.kframework.attributes.Location(Location(101,10,101,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeRegs(#SemanticCastToOperands(REGS))=>#sizeRegsAux(#SemanticCastToOperands(REGS),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(99) org.kframework.attributes.Location(Location(99,10,99,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeLValuesAux(lvalueList(#SemanticCastToLValue(REG),#SemanticCastToLValues(REGS)),#SemanticCastToInt(N))=>#sizeLValuesAux(#SemanticCastToLValues(REGS),`_+Int_`(#SemanticCastToInt(N),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(107) org.kframework.attributes.Location(Location(107,10,107,65)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeLValuesAux(`.List{"lvalueList"}`(.KList),#SemanticCastToInt(N))=>#SemanticCastToInt(N) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(108) org.kframework.attributes.Location(Location(108,10,108,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeLVals(#SemanticCastToLValues(REGS))=>#sizeLValuesAux(#SemanticCastToLValues(REGS),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(106) org.kframework.attributes.Location(Location(106,10,106,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #senderAux2(#token("\"\"","String"))=>`.Account_IELE-DATA`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(404) org.kframework.attributes.Location(Location(404,10,404,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #senderAux2(#SemanticCastToString(STR))=>#addr(#parseHexWord(`Keccak256`(#SemanticCastToString(STR)))) requires `_=/=String__STRING`(#SemanticCastToString(STR),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(405) org.kframework.attributes.Location(Location(405,10,405,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #senderAux(#SemanticCastToString(HT),#SemanticCastToInt(TW),#SemanticCastToString(TR),#SemanticCastToString(TS))=>#senderAux2(`ECDSARecover`(#SemanticCastToString(HT),#SemanticCastToInt(TW),#SemanticCastToString(TR),#SemanticCastToString(TS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(402) org.kframework.attributes.Location(Location(402,10,402,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpEncodeWord(#token("0","Int"))=>#token("\"\\x80\"","String") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(513) org.kframework.attributes.Location(Location(513,10,513,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpEncodeWord(#SemanticCastToInt(WORD))=>chrChar(#SemanticCastToInt(WORD)) requires `_andBool_`(`_>Int__INT-COMMON`(#SemanticCastToInt(WORD),#token("0","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(WORD),#token("128","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(514) org.kframework.attributes.Location(Location(514,10,514,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #rlpEncodeWord(#SemanticCastToInt(WORD))=>#rlpEncodeLength(`Bytes2String`(`Int2BytesNoLen`(#SemanticCastToInt(WORD),bigEndianBytes(.KList),unsignedBytes(.KList))),#token("128","Int")) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(WORD),#token("128","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(515) org.kframework.attributes.Location(Location(515,10,515,124)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #rlpEncodeString(#SemanticCastToString(STR))=>#rlpEncodeLength(#SemanticCastToString(STR),#token("128","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(520) org.kframework.attributes.Location(Location(520,10,520,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #rlpEncodeString(#SemanticCastToString(STR))=>#SemanticCastToString(STR) requires `_andBool_`(`_==Int_`(lengthString(#SemanticCastToString(STR)),#token("1","Int")),`_<Int__INT-COMMON`(ordChar(#SemanticCastToString(STR)),#token("128","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(519) org.kframework.attributes.Location(Location(519,10,519,126)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #rlpEncodeLengthAux(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET),#SemanticCastToString(BL))=>`_+String__STRING`(`_+String__STRING`(chrChar(`_+Int_`(`_+Int_`(lengthString(#SemanticCastToString(BL)),#SemanticCastToInt(OFFSET)),#token("55","Int"))),#SemanticCastToString(BL)),#SemanticCastToString(STR)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(532) org.kframework.attributes.Location(Location(532,10,532,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpEncodeLength(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET))=>`_+String__STRING`(chrChar(`_+Int_`(lengthString(#SemanticCastToString(STR)),#SemanticCastToInt(OFFSET))),#SemanticCastToString(STR)) requires `_<Int__INT-COMMON`(lengthString(#SemanticCastToString(STR)),#token("56","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(530) org.kframework.attributes.Location(Location(530,10,530,128)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #rlpEncodeLength(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET))=>#rlpEncodeLengthAux(#SemanticCastToString(STR),#SemanticCastToInt(OFFSET),`Bytes2String`(`Int2BytesNoLen`(lengthString(#SemanticCastToString(STR)),bigEndianBytes(.KList),unsignedBytes(.KList)))) requires `_>=Int__INT-COMMON`(lengthString(#SemanticCastToString(STR)),#token("56","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(531) org.kframework.attributes.Location(Location(531,10,531,166)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #rlpEncodeIntsAux(#SemanticCastToStringBuffer(BUF)=>`_+String__STRING-BUFFER-HOOKED`(#SemanticCastToStringBuffer(BUF),#rlpEncodeString(`Bytes2String`(`Int2BytesNoLen`(#SemanticCastToInt(I),bigEndianBytes(.KList),signedBytes(.KList))))),operandList(#SemanticCastToInt(I),#SemanticCastToInts(INTS))=>#SemanticCastToInts(INTS)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(I),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(523) org.kframework.attributes.Location(Location(523,10,523,141)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #rlpEncodeIntsAux(#SemanticCastToStringBuffer(BUF)=>`_+String__STRING-BUFFER-HOOKED`(#SemanticCastToStringBuffer(BUF),#rlpEncodeString(#token("\"\\x00\"","String"))),operandList(#token("0","Int"),#SemanticCastToInts(INTS))=>#SemanticCastToInts(INTS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(524) org.kframework.attributes.Location(Location(524,10,524,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpEncodeIntsAux(#SemanticCastToStringBuffer(BUF),`.List{"operandList"}`(.KList))=>#rlpEncodeLength(`StringBuffer2String`(#SemanticCastToStringBuffer(BUF)),#token("192","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(525) org.kframework.attributes.Location(Location(525,10,525,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpEncodeBytes(#SemanticCastToInt(WORD),#SemanticCastToInt(LEN))=>#rlpEncodeString(`Bytes2String`(`Int2Bytes`(#SemanticCastToInt(LEN),#SemanticCastToInt(WORD),bigEndianBytes(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(517) org.kframework.attributes.Location(Location(517,10,517,96)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpDecodeListAux(#SemanticCastToString(STR),#SemanticCastToInt(POS),`_(_,_)_IELE-DATA`(#SemanticCastToLengthPrefixType(_),#SemanticCastToInt(L),#SemanticCastToInt(P)))=>`_,__IELE-DATA`(rlpDecode(substrString(#SemanticCastToString(STR),#SemanticCastToInt(POS),`_+Int_`(#SemanticCastToInt(L),#SemanticCastToInt(P)))),#rlpDecodeList(#SemanticCastToString(STR),`_+Int_`(#SemanticCastToInt(L),#SemanticCastToInt(P)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(571) org.kframework.attributes.Location(Location(571,10,571,140)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpDecodeList(#SemanticCastToString(STR),#SemanticCastToInt(POS))=>`.List{"_,__IELE-DATA"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(570) org.kframework.attributes.Location(Location(570,10,570,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #rlpDecodeList(#SemanticCastToString(STR),#SemanticCastToInt(POS))=>#rlpDecodeListAux(#SemanticCastToString(STR),#SemanticCastToInt(POS),#decodeLengthPrefix(#SemanticCastToString(STR),#SemanticCastToInt(POS))) requires `_<Int__INT-COMMON`(#SemanticCastToInt(POS),lengthString(#SemanticCastToString(STR))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(569) org.kframework.attributes.Location(Location(569,10,569,129)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #rlpDecodeAux(#SemanticCastToString(STR),`_(_,_)_IELE-DATA`(`#str_IELE-DATA`(.KList),#SemanticCastToInt(LEN),#SemanticCastToInt(POS)))=>substrString(#SemanticCastToString(STR),#SemanticCastToInt(POS),`_+Int_`(#SemanticCastToInt(POS),#SemanticCastToInt(LEN))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(563) org.kframework.attributes.Location(Location(563,10,563,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rlpDecodeAux(#SemanticCastToString(STR),`_(_,_)_IELE-DATA`(`#list_IELE-DATA`(.KList),#SemanticCastToInt(LEN),#SemanticCastToInt(POS)))=>`[_]_IELE-DATA`(#rlpDecodeList(#SemanticCastToString(STR),#SemanticCastToInt(POS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(564) org.kframework.attributes.Location(Location(564,10,564,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rev(`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS1)),#SemanticCastToWordStack(WS2))=>#rev(#SemanticCastToWordStack(WS1),`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(273) org.kframework.attributes.Location(Location(273,10,273,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #rev(`.WordStack_IELE-DATA`(.KList),#SemanticCastToWordStack(WS))=>#SemanticCastToWordStack(WS) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(272) org.kframework.attributes.Location(Location(272,10,272,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #removeZerosAux(`_List_`(`ListItem`(#SemanticCastToKItem(KEY)),#SemanticCastToList(L)),`_Map_`(`_|->_`(#SemanticCastToKItem(KEY),#token("0","Int")),#SemanticCastToMap(REST)))=>#removeZerosAux(#SemanticCastToList(L),#SemanticCastToMap(REST)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(419) org.kframework.attributes.Location(Location(419,10,419,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #removeZerosAux(`_List_`(`ListItem`(#SemanticCastToKItem(KEY)),#SemanticCastToList(L)),`_Map_`(`_|->_`(#SemanticCastToKItem(KEY),#SemanticCastToKItem(VALUE)),#SemanticCastToMap(REST)))=>`_Map_`(`_|->_`(#SemanticCastToKItem(KEY),#SemanticCastToKItem(VALUE)),#removeZerosAux(#SemanticCastToList(L),#SemanticCastToMap(REST))) requires `_=/=K_`(#SemanticCastToKItem(VALUE),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(420) org.kframework.attributes.Location(Location(420,10,420,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #removeZerosAux(`.List`(.KList),`.Map`(.KList))=>`.Map`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(418) org.kframework.attributes.Location(Location(418,10,418,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #removeZeros(#SemanticCastToMap(M))=>#removeZerosAux(`Set2List`(keys(#SemanticCastToMap(M))),#SemanticCastToMap(M)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(417) org.kframework.attributes.Location(Location(417,10,417,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseWord(#token("\"\"","String"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(448) org.kframework.attributes.Location(Location(448,10,448,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseWord(#SemanticCastToString(S))=>`String2Int`(#SemanticCastToString(S)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(450) org.kframework.attributes.Location(Location(450,10,450,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #parseWord(#SemanticCastToString(S))=>#parseHexWord(#SemanticCastToString(S)) requires `_andBool_`(`_>=Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("2","Int")),`_==String__STRING`(substrString(#SemanticCastToString(S),#token("0","Int"),#token("2","Int")),#token("\"0x\"","String"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(449) org.kframework.attributes.Location(Location(449,10,449,121)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #parseMap(`{_}_IELE-DATA`(`_,__IELE-DATA`(`_:__IELE-DATA`(#SemanticCastToString(KEY),#SemanticCastToString(VALUE)),#SemanticCastToJSONList(REST))))=>`_[_<-_]_MAP`(#parseMap(`{_}_IELE-DATA`(#SemanticCastToJSONList(REST))),#parseHexWord(#SemanticCastToString(KEY)),#parseHexWord(#SemanticCastToString(VALUE))) requires `_=/=K_`(#parseHexWord(#SemanticCastToString(VALUE)),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(468) org.kframework.attributes.Location(Location(468,10,468,161)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #parseMap(`{_}_IELE-DATA`(`_,__IELE-DATA`(`_:__IELE-DATA`(#SemanticCastToJSONKey(_),#SemanticCastToString(VALUE)),#SemanticCastToJSONList(REST))))=>#parseMap(`{_}_IELE-DATA`(#SemanticCastToJSONList(REST))) requires `_==K_`(#parseHexWord(#SemanticCastToString(VALUE)),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(467) org.kframework.attributes.Location(Location(467,10,467,160)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #parseMap(`{_}_IELE-DATA`(`.List{"_,__IELE-DATA"}`(.KList)))=>`.Map`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(466) org.kframework.attributes.Location(Location(466,10,466,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseHexWord(#token("\"\"","String"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(444) org.kframework.attributes.Location(Location(444,10,444,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseHexWord(#token("\"0x\"","String"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(445) org.kframework.attributes.Location(Location(445,10,445,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseHexWord(#SemanticCastToString(S))=>`String2Base`(`replaceAll(_,_,_)_STRING`(#SemanticCastToString(S),#token("\"0x\"","String"),#token("\"\"","String")),#token("16","Int")) requires `_andBool_`(`_=/=String__STRING`(#SemanticCastToString(S),#token("\"\"","String")),`_=/=String__STRING`(#SemanticCastToString(S),#token("\"0x\"","String"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(446) org.kframework.attributes.Location(Location(446,10,446,126)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #parseByteStackRawAux(#SemanticCastToString(S),#SemanticCastToWordStack(WS),#SemanticCastToInt(LEN),#SemanticCastToInt(LEN))=>#rev(#SemanticCastToWordStack(WS),`.WordStack_IELE-DATA`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(461) org.kframework.attributes.Location(Location(461,10,461,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseByteStackRawAux(#SemanticCastToString(S),#SemanticCastToWordStack(WS),#SemanticCastToInt(I),#SemanticCastToInt(LEN))=>#parseByteStackRawAux(#SemanticCastToString(S),`_:__IELE-DATA`(ordChar(substrString(#SemanticCastToString(S),#SemanticCastToInt(I),`_+Int_`(#SemanticCastToInt(I),#token("1","Int")))),#SemanticCastToWordStack(WS)),`_+Int_`(#SemanticCastToInt(I),#token("1","Int")),#SemanticCastToInt(LEN)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(462) org.kframework.attributes.Location(Location(462,10,462,127)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #parseByteStackRaw(#SemanticCastToString(S))=>#parseByteStackRawAux(#SemanticCastToString(S),`.WordStack_IELE-DATA`(.KList),#token("0","Int"),lengthString(#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(460) org.kframework.attributes.Location(Location(460,10,460,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseByteStackAux(#SemanticCastToString(_),#SemanticCastToWordStack(WS),#SemanticCastToInt(LEN),#SemanticCastToInt(LEN))=>#rev(#SemanticCastToWordStack(WS),`.WordStack_IELE-DATA`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(458) org.kframework.attributes.Location(Location(458,10,458,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseByteStackAux(#SemanticCastToString(S),#SemanticCastToWordStack(WS),#SemanticCastToInt(I),#SemanticCastToInt(LEN))=>#parseByteStackAux(#SemanticCastToString(S),`_:__IELE-DATA`(#parseHexWord(substrString(#SemanticCastToString(S),#SemanticCastToInt(I),`_+Int_`(#SemanticCastToInt(I),#token("2","Int")))),#SemanticCastToWordStack(WS)),`_+Int_`(#SemanticCastToInt(I),#token("2","Int")),#SemanticCastToInt(LEN)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(459) org.kframework.attributes.Location(Location(459,10,459,128)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #parseByteStack(#SemanticCastToString(S))=>#fun2(#SemanticCastToString(STR)=>#parseByteStackAux(#SemanticCastToString(STR),`.WordStack_IELE-DATA`(.KList),#token("0","Int"),lengthString(#SemanticCastToString(STR))),`replaceAll(_,_,_)_STRING`(#SemanticCastToString(S),#token("\"0x\"","String"),#token("\"\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(457) org.kframework.attributes.Location(Location(457,10,457,124)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #parseAddr(#SemanticCastToString(S))=>#addr(#parseHexWord(#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(472) org.kframework.attributes.Location(Location(472,10,472,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #padToWidth(#SemanticCastToInt(N),#SemanticCastToWordStack(WS))=>#padToWidth(#SemanticCastToInt(N),`_:__IELE-DATA`(#token("0","Int"),#SemanticCastToWordStack(WS))) requires `_<Int__INT-COMMON`(#sizeWordStack(#SemanticCastToWordStack(WS)),#SemanticCastToInt(N)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(320) org.kframework.attributes.Location(Location(320,10,320,89)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #padToWidth(#SemanticCastToInt(N),#SemanticCastToWordStack(WS))=>#SemanticCastToWordStack(WS) requires `notBool_`(`_<Int__INT-COMMON`(#sizeWordStack(#SemanticCastToWordStack(WS)),#SemanticCastToInt(N))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(319) org.kframework.attributes.Location(Location(319,10,319,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #newAddr(#SemanticCastToInt(ACCT),#SemanticCastToInt(NONCE))=>`_|Int__INT-COMMON`(`_&Int__INT-COMMON`(#parseHexWord(`Keccak256`(`_+String__STRING`(`Bytes2String`(`Int2Bytes`(#token("32","Int"),#SemanticCastToInt(ACCT),bigEndianBytes(.KList))),`Bytes2String`(`Int2BytesNoLen`(#SemanticCastToInt(NONCE),bigEndianBytes(.KList),unsignedBytes(.KList)))))),#parseHexWord(#token("\"0xffffffffffffffffffffffffffffffffffffffff0000\"","String"))),`_&Int__INT-COMMON`(#SemanticCastToInt(ACCT),#parseHexWord(#token("\"0xffff\"","String")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(391) org.kframework.attributes.Location(Location(391,10,397,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #loadOffset(`_:__IELE-DATA`(#SemanticCastToInt(B0),#SemanticCastToWordStack(WS)))=>`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("182","Int")) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("184","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(557) org.kframework.attributes.Location(Location(557,10,557,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #loadOffset(`_:__IELE-DATA`(#SemanticCastToInt(B0),#SemanticCastToWordStack(WS)))=>#token("1","Int") requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("184","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(556) org.kframework.attributes.Location(Location(556,10,556,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #loadOffset(`_:__IELE-DATA`(#SemanticCastToInt(B0),#SemanticCastToWordStack(WS)))=>#token("0","Int") requires `_orBool__BOOL`(`_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(555) org.kframework.attributes.Location(Location(555,10,555,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #loadLen(`_:__IELE-DATA`(#SemanticCastToInt(B0),#SemanticCastToWordStack(WS)))=>`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("184","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(550) org.kframework.attributes.Location(Location(550,10,550,108)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #loadLen(`_:__IELE-DATA`(#SemanticCastToInt(B0),#SemanticCastToWordStack(WS)))=>#token("1","Int") requires `_orBool__BOOL`(`_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(549) org.kframework.attributes.Location(Location(549,10,549,108)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #loadLen(`_:__IELE-DATA`(#SemanticCastToInt(B0),#SemanticCastToWordStack(WS)))=>#asUnsigned(#take(`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("183","Int")),#SemanticCastToWordStack(WS))) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("184","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(551) org.kframework.attributes.Location(Location(551,10,551,112)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #gcdInt(#SemanticCastToInt(A),#token("0","Int"))=>#SemanticCastToInt(A) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(193) org.kframework.attributes.Location(Location(193,10,193,28)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #gcdInt(#SemanticCastToInt(A),#SemanticCastToInt(B))=>#gcdInt(#SemanticCastToInt(B),`_modInt__INT-COMMON`(#SemanticCastToInt(A),#SemanticCastToInt(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(194) org.kframework.attributes.Location(Location(194,10,194,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #drop(#token("0","Int"),#SemanticCastToWordStack(WS))=>#SemanticCastToWordStack(WS) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(285) org.kframework.attributes.Location(Location(285,10,285,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #drop(#SemanticCastToInt(N),`_:__IELE-DATA`(#SemanticCastToInt(W),#SemanticCastToWordStack(WS)))=>#drop(`_-Int__INT-COMMON`(#SemanticCastToInt(N),#token("1","Int")),#SemanticCastToWordStack(WS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(287) org.kframework.attributes.Location(Location(287,10,287,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #drop(#SemanticCastToInt(N),`.WordStack_IELE-DATA`(.KList))=>`.WordStack_IELE-DATA`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(286) org.kframework.attributes.Location(Location(286,10,286,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #decodeLengthPrefixLengthAux(#SemanticCastToLengthPrefixType(TYPE),#SemanticCastToInt(START),#SemanticCastToInt(LL),#SemanticCastToInt(L))=>`_(_,_)_IELE-DATA`(#SemanticCastToLengthPrefixType(TYPE),#SemanticCastToInt(L),`_+Int_`(`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),#SemanticCastToInt(LL))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(590) org.kframework.attributes.Location(Location(590,10,590,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #decodeLengthPrefixLength(`#str_IELE-DATA`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>#decodeLengthPrefixLengthAux(`#str_IELE-DATA`(.KList),#SemanticCastToInt(START),`_+Int_`(`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),#token("56","Int")),#token("1","Int")),`Bytes2Int`(`String2Bytes`(substrString(#SemanticCastToString(STR),`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),#token("56","Int")),#token("1","Int"))))),bigEndianBytes(.KList),unsignedBytes(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(588) org.kframework.attributes.Location(Location(588,10,588,249)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #decodeLengthPrefixLength(`#list_IELE-DATA`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>#decodeLengthPrefixLengthAux(`#list_IELE-DATA`(.KList),#SemanticCastToInt(START),`_+Int_`(`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int")),#token("56","Int")),#token("1","Int")),`Bytes2Int`(`String2Bytes`(substrString(#SemanticCastToString(STR),`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_+Int_`(#SemanticCastToInt(START),#token("1","Int")),`_+Int_`(`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int")),#token("56","Int")),#token("1","Int"))))),bigEndianBytes(.KList),unsignedBytes(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(589) org.kframework.attributes.Location(Location(589,10,589,249)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #decodeLengthPrefixAux(#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`_(_,_)_IELE-DATA`(`#str_IELE-DATA`(.KList),`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),`_+Int_`(#SemanticCastToInt(START),#token("1","Int"))) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(B0),`_+Int_`(#token("128","Int"),#token("56","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(583) org.kframework.attributes.Location(Location(583,10,583,149)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #decodeLengthPrefixAux(#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`_(_,_)_IELE-DATA`(`#str_IELE-DATA`(.KList),#token("1","Int"),#SemanticCastToInt(START)) requires `_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("128","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(582) org.kframework.attributes.Location(Location(582,10,582,118)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #decodeLengthPrefixAux(#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>`_(_,_)_IELE-DATA`(`#list_IELE-DATA`(.KList),`_-Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int")),`_+Int_`(#SemanticCastToInt(START),#token("1","Int"))) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(B0),`_+Int_`(#token("192","Int"),#token("56","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(585) org.kframework.attributes.Location(Location(585,10,585,147)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #decodeLengthPrefixAux(#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>#decodeLengthPrefixLength(`#str_IELE-DATA`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0)) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(B0),`_+Int_`(#token("128","Int"),#token("56","Int"))),`_<Int__INT-COMMON`(#SemanticCastToInt(B0),#token("192","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(584) org.kframework.attributes.Location(Location(584,10,584,149)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #decodeLengthPrefixAux(#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0))=>#decodeLengthPrefixLength(`#list_IELE-DATA`(.KList),#SemanticCastToString(STR),#SemanticCastToInt(START),#SemanticCastToInt(B0)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(586) org.kframework.attributes.Location(Location(586,10,586,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #decodeLengthPrefix(#SemanticCastToString(STR),#SemanticCastToInt(START))=>#decodeLengthPrefixAux(#SemanticCastToString(STR),#SemanticCastToInt(START),ordChar(substrString(#SemanticCastToString(STR),#SemanticCastToInt(START),`_+Int_`(#SemanticCastToInt(START),#token("1","Int"))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(580) org.kframework.attributes.Location(Location(580,10,580,125)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #asUnsigned(`_:__IELE-DATA`(#SemanticCastToInt(W0),`_:__IELE-DATA`(#SemanticCastToInt(W1),#SemanticCastToWordStack(WS))))=>#asUnsigned(`_:__IELE-DATA`(`_|Int__INT-COMMON`(`_<<Int__INT-COMMON`(#SemanticCastToInt(W0),#token("8","Int")),#SemanticCastToInt(W1)),#SemanticCastToWordStack(WS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(352) org.kframework.attributes.Location(Location(352,10,352,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #asUnsigned(`_:__IELE-DATA`(#SemanticCastToInt(W),`.WordStack_IELE-DATA`(.KList)))=>#SemanticCastToInt(W) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(351) org.kframework.attributes.Location(Location(351,10,351,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #asUnsigned(`.WordStack_IELE-DATA`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(350) org.kframework.attributes.Location(Location(350,10,350,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #asAccount(#token("\"\"","String"))=>`.Account_IELE-DATA`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(356) org.kframework.attributes.Location(Location(356,10,356,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #asAccount(#token("\"0x\"","String"))=>`.Account_IELE-DATA`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(357) org.kframework.attributes.Location(Location(357,10,357,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #asAccount(#SemanticCastToString(S))=>#parseHexWord(#SemanticCastToString(S)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(358) org.kframework.attributes.Location(Location(358,10,358,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #addr(#SemanticCastToInt(W))=>`_modInt__INT-COMMON`(#SemanticCastToInt(W),`pow256_IELE-DATA`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(382) org.kframework.attributes.Location(Location(382,10,382,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( --------------------------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(579,2,579,145)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(401,2,401,134)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(456,2,456,121)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(308,2,308,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(485,2,485,110)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(529,2,529,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(568,2,568,104)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(298,2,298,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(117,2,117,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(512,2,512,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(277,2,277,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(113,2,113,89)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(561,2,561,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(367,2,367,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(105,2,105,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(416,2,416,83)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -----------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(160,2,160,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(98,2,98,81)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(361,2,361,79)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------------,[org.kframework.attributes.Location(Location(318,2,318,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------------,[org.kframework.attributes.Location(Location(266,2,266,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------------------------,[org.kframework.attributes.Location(Location(290,2,290,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------------------------,[org.kframework.attributes.Location(Location(271,2,271,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------------------------,[org.kframework.attributes.Location(Location(545,2,545,65)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -----------------------------------------------------------,[org.kframework.attributes.Location(Location(137,2,137,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------------,[org.kframework.attributes.Location(Location(284,2,284,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------------------,[org.kframework.attributes.Location(Location(355,2,355,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -----------------------------------------------------,[org.kframework.attributes.Location(Location(255,2,255,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------,[org.kframework.attributes.Location(Location(554,2,554,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------------,[org.kframework.attributes.Location(Location(349,2,349,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------------,[org.kframework.attributes.Location(Location(443,2,443,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------------,[org.kframework.attributes.Location(Location(224,2,224,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------------,[org.kframework.attributes.Location(Location(548,2,548,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------------,[org.kframework.attributes.Location(Location(390,2,390,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -----------------------------------------------,[org.kframework.attributes.Location(Location(471,2,471,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -----------------------------------------------,[org.kframework.attributes.Location(Location(181,2,181,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------------------,[org.kframework.attributes.Location(Location(236,2,236,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------------------,[org.kframework.attributes.Location(Location(173,2,173,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------,[org.kframework.attributes.Location(Location(332,2,332,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------,[org.kframework.attributes.Location(Location(168,2,168,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------------,[org.kframework.attributes.Location(Location(121,2,121,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------,[org.kframework.attributes.Location(Location(75,2,75,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------,[org.kframework.attributes.Location(Location(70,2,70,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------,[org.kframework.attributes.Location(Location(465,2,465,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------------,[org.kframework.attributes.Location(Location(204,2,204,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -------------------------------------------,[org.kframework.attributes.Location(Location(190,2,190,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -------------------------------------------,[org.kframework.attributes.Location(Location(154,2,154,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------------,[org.kframework.attributes.Location(Location(212,2,212,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( -----------------------------------------,[org.kframework.attributes.Location(Location(148,2,148,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ---------------------------------------,[org.kframework.attributes.Location(Location(381,2,381,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( --------------------------------------,[org.kframework.attributes.Location(Location(60,2,60,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ------------------------------------,[org.kframework.attributes.Location(Location(47,2,47,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
  ModuleComment( ----------------------------------,[org.kframework.attributes.Location(Location(31,2,31,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))])
endmodule


module IELE-DATA$SYNTAX [org.kframework.attributes.Location(Location(12,1,592,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))]
  imports STRING-BUFFER$SYNTAX
  imports KRYPTO$SYNTAX
  imports IELE-CONSTANTS$SYNTAX
  imports IELE-COMMON$SYNTAX
  imports DOMAINS$SYNTAX
  imports COLLECTIONS$SYNTAX
  imports BYTES$SYNTAX
  imports ARRAY$SYNTAX
  syntax associativity right _++__IELE-DATA
  syntax WordStack [flatPredicate() org.kframework.attributes.Location(Location(253,5,253,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/data.k))]
  syntax WordStack ::= WordStack "[" Int ":=" WordStack "]" [function() klabel(assignWordStackRange)]
  syntax WordStack ::= WordStack "[" Int ".." Int "]" [function()]
  syntax WordStack ::= WordStack "++" WordStack [function() right()]
  syntax WordStack ::= Int ":" WordStack
  syntax WordStack ::= ".WordStack"
  syntax WordStack ::= "#take" "(" Int "," WordStack "," WordStack ")" [function() klabel(#takeAux)]
  syntax WordStack ::= "#take" "(" Int "," WordStack ")" [function() klabel(#take)]
  syntax WordStack ::= "#rev" "(" WordStack "," WordStack ")" [function() klabel(#rev)]
  syntax WordStack ::= "#parseByteStackRaw" "(" String "," WordStack "," Int "," Int ")" [function() klabel(#parseByteStackRawAux)]
  syntax WordStack ::= "#parseByteStackRaw" "(" String ")" [function() klabel(#parseByteStackRaw)]
  syntax WordStack ::= "#parseByteStack" "(" String "," WordStack "," Int "," Int ")" [function() klabel(#parseByteStackAux)]
  syntax WordStack ::= "#parseByteStack" "(" String ")" [function() klabel(#parseByteStack)]
  syntax WordStack ::= "#padToWidth" "(" Int "," WordStack ")" [function() klabel(#padToWidth)]
  syntax WordStack ::= "#drop" "(" Int "," WordStack ")" [function() klabel(#drop)]
  syntax String ::= "StringIeleName2String" "(" StringIeleName ")" [function() hook(STRING.token2string) klabel(StringIeleName2String)]
  syntax String ::= "IeleNameToken2String" "(" IeleName ")" [function() hook(STRING.token2string) klabel(IeleNameToken2String)]
  syntax String ::= "IeleName2String" "(" IeleName ")" [function() klabel(IeleName2String)]
  syntax String ::= "#unparseByteStack" "(" WordStack "," StringBuffer ")" [function() klabel(#unparseByteStackAux)]
  syntax String ::= "#unparseByteStack" "(" WordStack ")" [function() klabel(#unparseByteStack)]
  syntax String ::= "#rlpEncodeWord" "(" Int ")" [function() klabel(#rlpEncodeWord)]
  syntax String ::= "#rlpEncodeString" "(" String ")" [function() klabel(#rlpEncodeString)]
  syntax String ::= "#rlpEncodeLength" "(" String "," Int "," String ")" [function() klabel(#rlpEncodeLengthAux)]
  syntax String ::= "#rlpEncodeLength" "(" String "," Int ")" [function() klabel(#rlpEncodeLength)]
  syntax String ::= "#rlpEncodeInts" "(" StringBuffer "," Ints ")" [function() klabel(#rlpEncodeIntsAux)]
  syntax String ::= "#rlpEncodeInts" "(" Ints ")" [function() klabel(rlpEncodeInts) symbol()]
  syntax String ::= "#rlpEncodeBytes" "(" Int "," Int ")" [function() klabel(#rlpEncodeBytes)]
  syntax Map ::= "#removeZeros" "(" Map ")" [function() klabel(#removeZeros)]
  syntax Map ::= "#removeZeros" "(" List "," Map ")" [function() klabel(#removeZerosAux)]
  syntax Map ::= "#parseMap" "(" JSON ")" [function() klabel(#parseMap)]
  syntax LengthPrefixType ::= "#str"
  syntax LengthPrefixType ::= "#list"
  syntax LengthPrefix ::= LengthPrefixType "(" Int "," Int ")"
  syntax LengthPrefix ::= "#decodeLengthPrefixLength" "(" LengthPrefixType "," String "," Int "," Int ")" [function() klabel(#decodeLengthPrefixLength)]
  syntax LengthPrefix ::= "#decodeLengthPrefixLength" "(" LengthPrefixType "," Int "," Int "," Int ")" [function() klabel(#decodeLengthPrefixLengthAux)]
  syntax LengthPrefix ::= "#decodeLengthPrefix" "(" String "," Int "," Int ")" [function() klabel(#decodeLengthPrefixAux)]
  syntax LengthPrefix ::= "#decodeLengthPrefix" "(" String "," Int ")" [function() klabel(#decodeLengthPrefix)]
  syntax KResult ::= Int
  syntax JSONList ::= JSON "," JSONList [right() userList(*)]
  syntax JSONList ::= ".JSONList" [klabel(.List{"_,__IELE-DATA"}) userList(*)]
  syntax JSONList ::= "#rlpDecodeList" "(" String "," Int "," LengthPrefix ")" [function() klabel(#rlpDecodeListAux)]
  syntax JSONList ::= "#rlpDecodeList" "(" String "," Int ")" [function() klabel(#rlpDecodeList)]
  syntax JSONKey ::= String
  syntax JSONKey ::= Int
  syntax JSON ::= String
  syntax JSON ::= JSONKey ":" JSON
  syntax JSON ::= Bool
  syntax JSON ::= "{" JSONList "}"
  syntax JSON ::= "[" JSONList "]"
  syntax JSON ::= "#rlpDecode" "(" String "," LengthPrefix ")" [function() klabel(#rlpDecodeAux)]
  syntax JSON ::= "#rlpDecode" "(" String ")" [function() klabel(rlpDecode) symbol()]
  syntax Int ::= Int "up/Int" Int [function() klabel(ceilDiv)]
  syntax Int ::= Int "<<Byte" Int [function()]
  syntax Int ::= "twos" "(" Int "," Int ")" [function() klabel(twos)]
  syntax Int ::= "signextend" "(" Int "," Int ")" [function() klabel(signextend)]
  syntax Int ::= "powmod" "(" Int "," Int "," Int ")" [function() klabel(powmod)]
  syntax Int ::= "pow30" [function()]
  syntax Int ::= "pow256" [function()]
  syntax Int ::= "pow160" [function()]
  syntax Int ::= "keccak" "(" Bytes ")" [function() klabel(keccak)]
  syntax Int ::= "intSizes" "(" Ints ")" [function() klabel(intSizes)]
  syntax Int ::= "intSizes" "(" Array "," Int "," Schedule ")" [function() klabel(intSizesArr)]
  syntax Int ::= "intSizes" "(" Array "," Int "," Int "," Schedule ")" [function() klabel(intSizesAux)]
  syntax Int ::= "intSize" "(" Int ")" [function() klabel(intSize)]
  syntax Int ::= "getInt" "(" K ")" [function() klabel(getInt)]
  syntax Int ::= "gcdInt" "(" Int "," Int ")" [function() klabel(gcdInt)]
  syntax Int ::= "chop" "(" Int ")" [function() klabel(chop)]
  syntax Int ::= "bytesInWords" "(" Int ")" [function() klabel(bytesInWords)]
  syntax Int ::= "byte" "(" Int "," Int ")" [function() klabel(byte)]
  syntax Int ::= "bswap" "(" Int "," Int ")" [function() klabel(bswap)]
  syntax Int ::= "bool2Word" "(" Bool ")" [function() klabel(bool2Word)]
  syntax Int ::= "bitsInWords" "(" Int "," Schedule ")" [function() klabel(bitsInWords)]
  syntax Int ::= "#sizeWordStack" "(" WordStack "," Int ")" [function() klabel(sizeWordStackAux) smtlib(sizeWordStackAux)]
  syntax Int ::= "#sizeWordStack" "(" WordStack ")" [function() klabel(#sizeWordStack) smtlib(sizeWordStack)]
  syntax Int ::= "#sizeRegs" "(" Operands "," Int ")" [function() klabel(#sizeRegsAux)]
  syntax Int ::= "#sizeRegs" "(" Operands ")" [function() klabel(#sizeRegs)]
  syntax Int ::= "#sizeLVals" "(" LValues "," Int ")" [function() klabel(#sizeLValuesAux)]
  syntax Int ::= "#sizeLVals" "(" LValues ")" [function() klabel(#sizeLVals)]
  syntax Int ::= "#parseWord" "(" String ")" [function() klabel(#parseWord)]
  syntax Int ::= "#parseHexWord" "(" String ")" [function() klabel(#parseHexWord)]
  syntax Int ::= "#parseAddr" "(" String ")" [function() klabel(#parseAddr)]
  syntax Int ::= "#newAddr" "(" Int "," Int ")" [function() klabel(#newAddr)]
  syntax Int ::= "#loadOffset" "(" WordStack ")" [function() klabel(#loadOffset)]
  syntax Int ::= "#loadLen" "(" WordStack ")" [function() klabel(#loadLen)]
  syntax Int ::= "#gcdInt" "(" Int "," Int ")" [function() klabel(#gcdInt)]
  syntax Int ::= "#asUnsigned" "(" WordStack ")" [function() klabel(#asUnsigned)]
  syntax Int ::= "#addr" "(" Int ")" [function() klabel(#addr)]
  syntax IeleName ::= "getIeleName" "(" K ")" [function() klabel(getIeleName)]
  syntax IeleName ::= "String2IeleName" "(" String ")" [function() hook(STRING.string2token) klabel(String2IeleName)]
  syntax Bytes ::= Bytes "[" Int ":=" Bytes "]" [function() klabel(assignBytesRange)]
  syntax Bytes ::= Bytes "[" Int ".." Int "]" [function() klabel(bytesRange)]
  syntax Bool ::= "word2Bool" "(" Int ")" [function() klabel(word2Bool)]
  syntax Array ::= ".Array" [function()]
  syntax Account ::= Int
  syntax Account ::= ".Account"
  syntax Account ::= "#sender" "(" String "," Int "," String "," String ")" [function() klabel(#senderAux)]
  syntax Account ::= "#sender" "(" String ")" [function() klabel(#senderAux2)]
  syntax Account ::= "#asAccount" "(" String ")" [function() klabel(#asAccount)]
endmodule


module IELE-GAS [org.kframework.attributes.Location(Location(9,1,1188,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))]
  imports IELE-PRECOMPILED
  imports IELE-INFRASTRUCTURE
  imports IELE-GAS$SYNTAX
  imports IELE-DATA
  imports IELE-CONFIGURATION
  imports IELE-COMMON
  rule `_<_>_IELE-GAS`(`Smemallowance_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("4096","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1074) org.kframework.attributes.Location(Location(1074,10,1074,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1075) org.kframework.attributes.Location(Location(1075,10,1075,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1181) org.kframework.attributes.Location(Location(1181,10,1181,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Rsstoreset_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("1875","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1035) org.kframework.attributes.Location(Location(1035,10,1035,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Rselfdestruct_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("24000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1066) org.kframework.attributes.Location(Location(1066,10,1066,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Rb_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>`_*Int__INT-COMMON`(#token("3","Int"),`_^Int__INT-COMMON`(#token("10","Int"),#token("18","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1067) org.kframework.attributes.Location(Location(1067,10,1067,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtxdatazero_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1064) org.kframework.attributes.Location(Location(1064,10,1064,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtxdatanonzero_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("68","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1065) org.kframework.attributes.Location(Location(1065,10,1065,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtxcreate_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("53000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1063) org.kframework.attributes.Location(Location(1063,10,1063,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtwosword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1006) org.kframework.attributes.Location(Location(1006,10,1006,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtwosword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1126) org.kframework.attributes.Location(Location(1126,10,1126,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtwos_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1005) org.kframework.attributes.Location(Location(1005,10,1005,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtwos_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3100","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1125) org.kframework.attributes.Location(Location(1125,10,1125,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gtransaction_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("21000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1062) org.kframework.attributes.Location(Location(1062,10,1062,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gstoreword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1024) org.kframework.attributes.Location(Location(1024,10,1024,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gstoreword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1144) org.kframework.attributes.Location(Location(1144,10,1144,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gstorecell_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1022) org.kframework.attributes.Location(Location(1022,10,1022,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gstorecell_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2800","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1142) org.kframework.attributes.Location(Location(1142,10,1142,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gstore_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1023) org.kframework.attributes.Location(Location(1023,10,1023,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gstore_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3900","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1143) org.kframework.attributes.Location(Location(1143,10,1143,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstoreword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("500","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1032) org.kframework.attributes.Location(Location(1032,10,1032,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstoreword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1152) org.kframework.attributes.Location(Location(1152,10,1152,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstoresetkey_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("1875","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1036) org.kframework.attributes.Location(Location(1036,10,1036,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstoresetkey_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1875000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1155) org.kframework.attributes.Location(Location(1155,10,1155,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstoreset_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("1875","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1034) org.kframework.attributes.Location(Location(1034,10,1034,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstoreset_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1875000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1154) org.kframework.attributes.Location(Location(1154,10,1154,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstorekey_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("500","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1033) org.kframework.attributes.Location(Location(1033,10,1033,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstorekey_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("400","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1153) org.kframework.attributes.Location(Location(1153,10,1153,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstore_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("1000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1031) org.kframework.attributes.Location(Location(1031,10,1031,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsstore_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("4950000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1151) org.kframework.attributes.Location(Location(1151,10,1151,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsloadword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("50","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1039) org.kframework.attributes.Location(Location(1039,10,1039,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsloadword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1158) org.kframework.attributes.Location(Location(1158,10,1158,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsloadkey_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("100","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1038) org.kframework.attributes.Location(Location(1038,10,1038,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsloadkey_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("8000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1157) org.kframework.attributes.Location(Location(1157,10,1157,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsload_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("50","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1037) org.kframework.attributes.Location(Location(1037,10,1037,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsload_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("190000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1156) org.kframework.attributes.Location(Location(1156,10,1156,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha3word_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("6","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1018) org.kframework.attributes.Location(Location(1018,10,1018,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha3word_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("20","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1138) org.kframework.attributes.Location(Location(1138,10,1138,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha3_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("30","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1017) org.kframework.attributes.Location(Location(1017,10,1017,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha3_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("8300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1137) org.kframework.attributes.Location(Location(1137,10,1137,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha256word_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1053) org.kframework.attributes.Location(Location(1053,10,1053,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha256word_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("30","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1172) org.kframework.attributes.Location(Location(1172,10,1172,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha256_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("60","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1052) org.kframework.attributes.Location(Location(1052,10,1052,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsha256_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("25000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1171) org.kframework.attributes.Location(Location(1171,10,1171,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsextword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1008) org.kframework.attributes.Location(Location(1008,10,1008,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsextword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1128) org.kframework.attributes.Location(Location(1128,10,1128,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsext_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1007) org.kframework.attributes.Location(Location(1007,10,1007,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gsext_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1127) org.kframework.attributes.Location(Location(1127,10,1127,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gselfdestruct_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1040) org.kframework.attributes.Location(Location(1040,10,1040,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gselfdestruct_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1159) org.kframework.attributes.Location(Location(1159,10,1159,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gselfdestruct_IELE-GAS`(.KList),`ALBE_IELE-CONSTANTS`(.KList))=>#token("5000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1086) org.kframework.attributes.Location(Location(1086,10,1086,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Grip160word_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("30","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1055) org.kframework.attributes.Location(Location(1055,10,1055,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Grip160word_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("30","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1174) org.kframework.attributes.Location(Location(1174,10,1174,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Grip160_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("600","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1054) org.kframework.attributes.Location(Location(1054,10,1054,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Grip160_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("25000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1173) org.kframework.attributes.Location(Location(1173,10,1173,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(982) org.kframework.attributes.Location(Location(982,10,982,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1102) org.kframework.attributes.Location(Location(1102,10,1102,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gquadcoeff_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("8192","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1061) org.kframework.attributes.Location(Location(1061,10,1061,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gnotword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(999) org.kframework.attributes.Location(Location(999,10,999,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gnotword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1119) org.kframework.attributes.Location(Location(1119,10,1119,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gnot_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(998) org.kframework.attributes.Location(Location(998,10,998,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gnot_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2700","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1118) org.kframework.attributes.Location(Location(1118,10,1118,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gnewaccount_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("25000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1047) org.kframework.attributes.Location(Location(1047,10,1047,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gnewaccount_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("25000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1166) org.kframework.attributes.Location(Location(1166,10,1166,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmulword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(986) org.kframework.attributes.Location(Location(986,10,986,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmulword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1106) org.kframework.attributes.Location(Location(1106,10,1106,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmulkara_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(987) org.kframework.attributes.Location(Location(987,10,987,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmulkara_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1107) org.kframework.attributes.Location(Location(1107,10,1107,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmul_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(985) org.kframework.attributes.Location(Location(985,10,985,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmul_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("4900","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1105) org.kframework.attributes.Location(Location(1105,10,1105,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(981) org.kframework.attributes.Location(Location(981,10,981,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1101) org.kframework.attributes.Location(Location(1101,10,1101,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmemory_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1060) org.kframework.attributes.Location(Location(1060,10,1060,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gmemory_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("750","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1179) org.kframework.attributes.Location(Location(1179,10,1179,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogtopic_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("375","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1030) org.kframework.attributes.Location(Location(1030,10,1030,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogtopic_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("375000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1150) org.kframework.attributes.Location(Location(1150,10,1150,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogdata_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("8","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1029) org.kframework.attributes.Location(Location(1029,10,1029,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogdata_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("8000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1149) org.kframework.attributes.Location(Location(1149,10,1149,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogarithmword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1003) org.kframework.attributes.Location(Location(1003,10,1003,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogarithmword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1123) org.kframework.attributes.Location(Location(1123,10,1123,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogarithm_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1002) org.kframework.attributes.Location(Location(1002,10,1002,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glogarithm_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1122) org.kframework.attributes.Location(Location(1122,10,1122,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glog_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("375","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1028) org.kframework.attributes.Location(Location(1028,10,1028,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glog_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("375000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1148) org.kframework.attributes.Location(Location(1148,10,1148,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glocalcall_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("11","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1043) org.kframework.attributes.Location(Location(1043,10,1043,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Glocalcall_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("6800","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1162) org.kframework.attributes.Location(Location(1162,10,1162,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gloadword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1021) org.kframework.attributes.Location(Location(1021,10,1021,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gloadword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1141) org.kframework.attributes.Location(Location(1141,10,1141,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gloadcell_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1019) org.kframework.attributes.Location(Location(1019,10,1019,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gloadcell_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2900","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1139) org.kframework.attributes.Location(Location(1139,10,1139,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gload_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1020) org.kframework.attributes.Location(Location(1020,10,1020,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gload_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1140) org.kframework.attributes.Location(Location(1140,10,1140,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Giszero_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1011) org.kframework.attributes.Location(Location(1011,10,1011,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Giszero_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1800","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1131) org.kframework.attributes.Location(Location(1131,10,1131,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gextcodesize_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("700","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1026) org.kframework.attributes.Location(Location(1026,10,1026,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gextcodesize_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("700000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1146) org.kframework.attributes.Location(Location(1146,10,1146,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("10","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(992) org.kframework.attributes.Location(Location(992,10,992,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("80","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1112) org.kframework.attributes.Location(Location(1112,10,1112,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmodmod_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(995) org.kframework.attributes.Location(Location(995,10,995,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmodmod_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("180","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1115) org.kframework.attributes.Location(Location(1115,10,1115,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmodkara_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("40","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(994) org.kframework.attributes.Location(Location(994,10,994,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmodkara_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("15","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1114) org.kframework.attributes.Location(Location(1114,10,1114,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmodexp_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(996) org.kframework.attributes.Location(Location(996,10,996,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmodexp_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("8","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1116) org.kframework.attributes.Location(Location(1116,10,1116,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmod_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(997) org.kframework.attributes.Location(Location(997,10,997,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpmod_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("6000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1117) org.kframework.attributes.Location(Location(1117,10,1117,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpkara_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("50","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(991) org.kframework.attributes.Location(Location(991,10,991,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexpkara_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1111) org.kframework.attributes.Location(Location(1111,10,1111,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexp_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(993) org.kframework.attributes.Location(Location(993,10,993,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gexp_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("5300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1113) org.kframework.attributes.Location(Location(1113,10,1113,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecrec_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1051) org.kframework.attributes.Location(Location(1051,10,1051,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecrec_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1170) org.kframework.attributes.Location(Location(1170,10,1170,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecpairingpair_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("80000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1059) org.kframework.attributes.Location(Location(1059,10,1059,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecpairingpair_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("26000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1178) org.kframework.attributes.Location(Location(1178,10,1178,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecpairing_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("100000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1058) org.kframework.attributes.Location(Location(1058,10,1058,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecpairing_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("100000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1177) org.kframework.attributes.Location(Location(1177,10,1177,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecmul_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("40000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1057) org.kframework.attributes.Location(Location(1057,10,1057,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecmul_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1700000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1176) org.kframework.attributes.Location(Location(1176,10,1176,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecadd_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("500","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1056) org.kframework.attributes.Location(Location(1056,10,1056,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gecadd_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("35000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1175) org.kframework.attributes.Location(Location(1175,10,1175,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gdivword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(989) org.kframework.attributes.Location(Location(989,10,989,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gdivword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1109) org.kframework.attributes.Location(Location(1109,10,1109,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gdivkara_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(990) org.kframework.attributes.Location(Location(990,10,990,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gdivkara_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("8","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1110) org.kframework.attributes.Location(Location(1110,10,1110,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gdiv_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(988) org.kframework.attributes.Location(Location(988,10,988,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gdiv_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("4900","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1108) org.kframework.attributes.Location(Location(1108,10,1108,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcreate_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("32000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1048) org.kframework.attributes.Location(Location(1048,10,1048,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcreate_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("32000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1167) org.kframework.attributes.Location(Location(1167,10,1167,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcopycreate_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("33000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1049) org.kframework.attributes.Location(Location(1049,10,1049,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcopycreate_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("33000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1168) org.kframework.attributes.Location(Location(1168,10,1168,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcodedeposit_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("200","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1050) org.kframework.attributes.Location(Location(1050,10,1050,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcodedeposit_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("200000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1169) org.kframework.attributes.Location(Location(1169,10,1169,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcmpword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1013) org.kframework.attributes.Location(Location(1013,10,1013,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcmpword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1133) org.kframework.attributes.Location(Location(1133,10,1133,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcmp_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1012) org.kframework.attributes.Location(Location(1012,10,1012,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcmp_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2500","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1132) org.kframework.attributes.Location(Location(1132,10,1132,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallvalue_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("9000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1046) org.kframework.attributes.Location(Location(1046,10,1046,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallvalue_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("9000000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1165) org.kframework.attributes.Location(Location(1165,10,1165,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallstipend_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("2300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1045) org.kframework.attributes.Location(Location(1045,10,1045,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallstipend_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2300000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1164) org.kframework.attributes.Location(Location(1164,10,1164,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallreg_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1042) org.kframework.attributes.Location(Location(1042,10,1042,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallreg_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1161) org.kframework.attributes.Location(Location(1161,10,1161,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallmemory_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1041) org.kframework.attributes.Location(Location(1041,10,1041,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcallmemory_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1160) org.kframework.attributes.Location(Location(1160,10,1160,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcalladdress_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("700","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1027) org.kframework.attributes.Location(Location(1027,10,1027,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcalladdress_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("700000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1147) org.kframework.attributes.Location(Location(1147,10,1147,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcall_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("40","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1044) org.kframework.attributes.Location(Location(1044,10,1044,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcall_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("40000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1163) org.kframework.attributes.Location(Location(1163,10,1163,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gcall_IELE-GAS`(.KList),`ALBE_IELE-CONSTANTS`(.KList))=>#token("700","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1085) org.kframework.attributes.Location(Location(1085,10,1085,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbyte_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1004) org.kframework.attributes.Location(Location(1004,10,1004,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbyte_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2500","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1124) org.kframework.attributes.Location(Location(1124,10,1124,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbswapword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1010) org.kframework.attributes.Location(Location(1010,10,1010,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbswapword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("10","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1130) org.kframework.attributes.Location(Location(1130,10,1130,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbswap_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1009) org.kframework.attributes.Location(Location(1009,10,1009,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbswap_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("3300","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1129) org.kframework.attributes.Location(Location(1129,10,1129,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbrcond_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("10","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1015) org.kframework.attributes.Location(Location(1015,10,1015,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbrcond_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("5000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1135) org.kframework.attributes.Location(Location(1135,10,1135,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbr_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("8","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1014) org.kframework.attributes.Location(Location(1014,10,1014,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbr_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("5000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1134) org.kframework.attributes.Location(Location(1134,10,1134,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gblockhash_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("20","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1016) org.kframework.attributes.Location(Location(1016,10,1016,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gblockhash_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("20000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1136) org.kframework.attributes.Location(Location(1136,10,1136,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbitwiseword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1001) org.kframework.attributes.Location(Location(1001,10,1001,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbitwiseword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1121) org.kframework.attributes.Location(Location(1121,10,1121,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbitwise_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1000) org.kframework.attributes.Location(Location(1000,10,1000,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbitwise_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2900","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1120) org.kframework.attributes.Location(Location(1120,10,1120,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbalance_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("400","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1025) org.kframework.attributes.Location(Location(1025,10,1025,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gbalance_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("400000","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1145) org.kframework.attributes.Location(Location(1145,10,1145,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gaddword_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(984) org.kframework.attributes.Location(Location(984,10,984,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gaddword_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1104) org.kframework.attributes.Location(Location(1104,10,1104,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gadd_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(983) org.kframework.attributes.Location(Location(983,10,983,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(`Gadd_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("2800","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1103) org.kframework.attributes.Location(Location(1103,10,1103,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<_>_IELE-GAS`(#SemanticCastToScheduleConst(SCHEDCONST),`DANSE_IELE-CONSTANTS`(.KList))=>`_<_>_IELE-GAS`(#SemanticCastToScheduleConst(SCHEDCONST),`ALBE_IELE-CONSTANTS`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1182) org.kframework.attributes.Location(Location(1182,10,1182,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `_<_>_IELE-GAS`(#SemanticCastToScheduleConst(SCHEDCONST),`ALBE_IELE-CONSTANTS`(.KList))=>`_<_>_IELE-GAS`(#SemanticCastToScheduleConst(SCHEDCONST),`DEFAULT_IELE-GAS`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1087) org.kframework.attributes.Location(Location(1087,10,1087,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1070) org.kframework.attributes.Location(Location(1070,10,1070,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),`ALBE_IELE-CONSTANTS`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1090) org.kframework.attributes.Location(Location(1090,10,1090,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(`Gselfdestructnewaccount_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1069) org.kframework.attributes.Location(Location(1069,10,1069,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(`Gselfdestructnewaccount_IELE-GAS`(.KList),`ALBE_IELE-CONSTANTS`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1089) org.kframework.attributes.Location(Location(1089,10,1089,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1071) org.kframework.attributes.Location(Location(1071,10,1071,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1184) org.kframework.attributes.Location(Location(1184,10,1184,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(`Gnewarith_IELE-GAS`(.KList),`DEFAULT_IELE-GAS`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1072) org.kframework.attributes.Location(Location(1072,10,1072,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(`Gnewarith_IELE-GAS`(.KList),`DANSE_IELE-CONSTANTS`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1185) org.kframework.attributes.Location(Location(1185,10,1185,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<<_>>_IELE-GAS`(#SemanticCastToScheduleFlag(SCHEDCONST),`DANSE_IELE-CONSTANTS`(.KList))=>`_<<_>>_IELE-GAS`(#SemanticCastToScheduleFlag(SCHEDCONST),`ALBE_IELE-CONSTANTS`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1186) org.kframework.attributes.Location(Location(1186,10,1186,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `_<<_>>_IELE-GAS`(#SemanticCastToScheduleFlag(SCHEDCONST),`ALBE_IELE-CONSTANTS`(.KList))=>`_<<_>>_IELE-GAS`(#SemanticCastToScheduleFlag(SCHEDCONST),`DEFAULT_IELE-GAS`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1091) org.kframework.attributes.Location(Location(1091,10,1091,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `G0create`(#SemanticCastToSchedule(SCHED),#SemanticCastToWordStack(WS),#SemanticCastToInts(ARGS))=>`G0aux`(#SemanticCastToSchedule(SCHED),#parseByteStackRaw(#rlpEncodeLength(`_+String__STRING`(#rlpEncodeString(#unparseByteStack(#SemanticCastToWordStack(WS))),rlpEncodeInts(#SemanticCastToInts(ARGS))),#token("192","Int"))),#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(812) org.kframework.attributes.Location(Location(812,10,812,161)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `G0call`(#SemanticCastToSchedule(SCHED),#SemanticCastToString(FUNC),#SemanticCastToInts(ARGS))=>`G0aux`(#SemanticCastToSchedule(SCHED),#parseByteStackRaw(#rlpEncodeLength(`_+String__STRING`(#rlpEncodeString(#SemanticCastToString(FUNC)),rlpEncodeInts(#SemanticCastToInts(ARGS))),#token("192","Int"))),#token("false","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(813) org.kframework.attributes.Location(Location(813,10,813,147)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `G0aux`(#SemanticCastToSchedule(SCHED),`_:__IELE-DATA`(#token("0","Int"),#SemanticCastToWordStack(REST)),#SemanticCastToBool(ISCREATE))=>`_+Int_`(`_<_>_IELE-GAS`(`Gtxdatazero_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`G0aux`(#SemanticCastToSchedule(SCHED),#SemanticCastToWordStack(REST),#SemanticCastToBool(ISCREATE))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(815) org.kframework.attributes.Location(Location(815,10,815,104)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `G0aux`(#SemanticCastToSchedule(SCHED),`_:__IELE-DATA`(#SemanticCastToInt(N),#SemanticCastToWordStack(REST)),#SemanticCastToBool(ISCREATE))=>`_+Int_`(`_<_>_IELE-GAS`(`Gtxdatanonzero_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`G0aux`(#SemanticCastToSchedule(SCHED),#SemanticCastToWordStack(REST),#SemanticCastToBool(ISCREATE))) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(816) org.kframework.attributes.Location(Location(816,10,816,124)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `G0aux`(#SemanticCastToSchedule(SCHED),`.WordStack_IELE-DATA`(.KList),#token("true","Bool"))=>`_<_>_IELE-GAS`(`Gtxcreate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(809) org.kframework.attributes.Location(Location(809,10,809,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `G0aux`(#SemanticCastToSchedule(SCHED),`.WordStack_IELE-DATA`(.KList),#token("false","Bool"))=>`_<_>_IELE-GAS`(`Gtransaction_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(810) org.kframework.attributes.Location(Location(810,10,810,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `G*(_,_,_)_IELE-GAS`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(REFUND))=>`_+Int_`(#SemanticCastToInt(GAVAIL),`minInt(_,_)_INT-COMMON`(`_/Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(GLIMIT),#SemanticCastToInt(GAVAIL)),#token("2","Int")),#SemanticCastToInt(REFUND))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(820) org.kframework.attributes.Location(Location(820,10,820,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Cxfer`(#SemanticCastToSchedule(SCHED),#token("0","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(765) org.kframework.attributes.Location(Location(765,10,765,30)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Cxfer`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N))=>`_<_>_IELE-GAS`(`Gcallvalue_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires `_=/=K_`(#SemanticCastToInt(N),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(766) org.kframework.attributes.Location(Location(766,10,766,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Csstore`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(INDEX),#SemanticCastToInt(VALUE),#SemanticCastToInt(OLDVALUE))=>`_+Int_`(`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Gsstore_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsstorekey_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(#SemanticCastToInt(INDEX)))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsstoreword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(#SemanticCastToInt(VALUE)))),`#if_#then_#else_#fi_K-EQUAL`(`_andBool_`(`_=/=Int__INT-COMMON`(#SemanticCastToInt(VALUE),#token("0","Int")),`_==Int_`(#SemanticCastToInt(OLDVALUE),#token("0","Int"))),`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsstoresetkey_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(#SemanticCastToInt(INDEX))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsstoreset_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(#SemanticCastToInt(VALUE)))),`maxInt(_,_)_INT-COMMON`(#token("0","Int"),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsstoreset_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_-Int__INT-COMMON`(intSize(#SemanticCastToInt(VALUE)),intSize(#SemanticCastToInt(OLDVALUE))))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(745) org.kframework.attributes.Location(Location(745,10,745,394)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Cselfdestruct`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(BAL))=>`_<_>_IELE-GAS`(`Gselfdestruct_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires `notBool_`(#SemanticCastToBool(ISEMPTY)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(784) org.kframework.attributes.Location(Location(784,10,785,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cselfdestruct`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(BAL))=>`_<_>_IELE-GAS`(`Gselfdestruct_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires `_andBool_`(#SemanticCastToBool(ISEMPTY),`_orBool__BOOL`(`notBool_`(`_<<_>>_IELE-GAS`(`Gselfdestructnewaccount_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),`_==Int_`(#SemanticCastToInt(BAL),#token("0","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(782) org.kframework.attributes.Location(Location(782,10,783,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cselfdestruct`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(BAL))=>`_+Int_`(`_<_>_IELE-GAS`(`Gselfdestruct_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_<_>_IELE-GAS`(`Gnewaccount_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires `_andBool_`(`_andBool_`(#SemanticCastToBool(ISEMPTY),`_<<_>>_IELE-GAS`(`Gselfdestructnewaccount_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),`_=/=Int__INT-COMMON`(#SemanticCastToInt(BAL),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(780) org.kframework.attributes.Location(Location(780,10,781,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cpricedmem`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N))=>`maxInt(_,_)_INT-COMMON`(#token("0","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(N),`_<_>_IELE-GAS`(`Smemallowance_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(415) org.kframework.attributes.Location(Location(415,10,415,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Cnew`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE))=>`_<_>_IELE-GAS`(`Gnewaccount_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires `_andBool_`(#SemanticCastToBool(ISEMPTY),`_=/=Int__INT-COMMON`(#SemanticCastToInt(VALUE),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(768) org.kframework.attributes.Location(Location(768,10,769,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cnew`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE))=>#token("0","Int") requires `_orBool__BOOL`(`notBool_`(#SemanticCastToBool(ISEMPTY)),`_==Int_`(#SemanticCastToInt(VALUE),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(770) org.kframework.attributes.Location(Location(770,10,771,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cmul`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L1),#SemanticCastToInt(L2))=>`_+Int_`(`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gmulkara_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`Ckara`(#SemanticCastToInt(L1),#SemanticCastToInt(L2))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gmulword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_+Int_`(#SemanticCastToInt(L1),#SemanticCastToInt(L2)))),`_<_>_IELE-GAS`(`Gmul_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(831) org.kframework.attributes.Location(Location(831,10,834,23)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `Cmul`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L1),#SemanticCastToInt(L2))=>`Cmul`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L2),#SemanticCastToInt(L1)) requires `_>Int__INT-COMMON`(#SemanticCastToInt(L2),#SemanticCastToInt(L1)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(828) org.kframework.attributes.Location(Location(828,10,829,26)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cmem`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N))=>`_+Int_`(`_*Int__INT-COMMON`(`Cpricedmem`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N)),`_<_>_IELE-GAS`(`Gmemory_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(`Cpricedmem`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N)),`Cpricedmem`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(N))),`_<_>_IELE-GAS`(`Gquadcoeff_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(414) org.kframework.attributes.Location(Location(414,10,414,156)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Ckara`(#SemanticCastToInt(L1),#SemanticCastToInt(L2))=>`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(#SemanticCastToInt(L2),#overApproxKara(#SemanticCastToInt(L1))),#SemanticCastToInt(L1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(841) org.kframework.attributes.Location(Location(841,10,841,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `Ckara`(#SemanticCastToInt(L1),#SemanticCastToInt(L2))=>`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(#SemanticCastToInt(L1),#overApproxKara(#SemanticCastToInt(L2))),#SemanticCastToInt(L2)) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(L1),#SemanticCastToInt(L2)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(838) org.kframework.attributes.Location(Location(838,10,839,27)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cgascap`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))=>`minInt(_,_)_INT-COMMON`(#allBut64th(`_-Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))),#SemanticCastToInt(GCAP)) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA)),`notBool_`(`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(760) org.kframework.attributes.Location(Location(760,10,760,169)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cgascap`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA))=>#SemanticCastToInt(GCAP) requires `_orBool__BOOL`(`_<Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(GEXTRA)),`_<<_>>_IELE-GAS`(`Gstaticcalldepth_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(761) org.kframework.attributes.Location(Location(761,10,761,160)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cextra`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS))=>`_+Int_`(`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Gcall_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`Cnew`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE))),`Cxfer`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(VALUE))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gcallreg_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_+Int_`(#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(763) org.kframework.attributes.Location(Location(763,10,763,174)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Cexpmod`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(LB),#SemanticCastToInt(LEX),#SemanticCastToInt(LM),#SemanticCastToInt(EX))=>`_+Int_`(`_+Int_`(`_+Int_`(ceilDiv(`_*Int__INT-COMMON`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpmodkara_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#overApproxKara(#SemanticCastToInt(LM))),#adjustedBitLength(#SemanticCastToInt(LEX),#SemanticCastToInt(EX))),#token("10","Int")),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpmodmod_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(LM))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpmodexp_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#adjustedBitLength(#SemanticCastToInt(LEX),#SemanticCastToInt(EX)))),`_<_>_IELE-GAS`(`Gexpmod_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires `_<=Int__INT-COMMON`(#SemanticCastToInt(LB),#SemanticCastToInt(LM)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(872) org.kframework.attributes.Location(Location(872,10,877,27)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cexpmod`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(LB),#SemanticCastToInt(LEX),#SemanticCastToInt(LM),#SemanticCastToInt(EX))=>`_+Int_`(`_+Int_`(`_+Int_`(`_+Int_`(ceilDiv(`_*Int__INT-COMMON`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpmodkara_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#overApproxKara(#SemanticCastToInt(LM))),#adjustedBitLength(#SemanticCastToInt(LEX),#SemanticCastToInt(EX))),#token("10","Int")),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpmodmod_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(LM))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpmodexp_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#adjustedBitLength(#SemanticCastToInt(LEX),#SemanticCastToInt(EX)))),`Cdiv`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(LB),#SemanticCastToInt(LM))),`_<_>_IELE-GAS`(`Gexpmod_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(879) org.kframework.attributes.Location(Location(879,10,884,26)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule `Cexp`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L1),#SemanticCastToInt(W1),#SemanticCastToInt(W2))=>`_+Int_`(`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpkara_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#overApproxKara(`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(#adjustedBitLength(#SemanticCastToInt(L1),#SemanticCastToInt(W1)),#SemanticCastToInt(W2)),#token("64","Int")))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#adjustedBitLength(#SemanticCastToInt(L1),#SemanticCastToInt(W1)))),`_<_>_IELE-GAS`(`Gexp_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires `_<<_>>_IELE-GAS`(`Gnewarith_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(866) org.kframework.attributes.Location(Location(866,10,870,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cexp`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L1),#SemanticCastToInt(W1),#SemanticCastToInt(W2))=>`_+Int_`(`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpkara_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#overApproxKara(`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(#adjustedBitLength(#SemanticCastToInt(L1),#SemanticCastToInt(W1)),#SemanticCastToInt(W2)),#token("64","Int")))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gexpword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(L1))),`_<_>_IELE-GAS`(`Gexp_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewarith_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(860) org.kframework.attributes.Location(Location(860,10,864,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cdiv`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L1),#SemanticCastToInt(L2))=>`_<_>_IELE-GAS`(`Gdiv_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires `_<<_>>_IELE-GAS`(`Gnewarith_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(855) org.kframework.attributes.Location(Location(855,10,857,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) owise()]
  rule `Cdiv`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L1),#SemanticCastToInt(L2))=>`_+Int_`(`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gdivkara_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`Ckara`(`_+Int_`(`_-Int__INT-COMMON`(#SemanticCastToInt(L1),#SemanticCastToInt(L2)),#token("1","Int")),#SemanticCastToInt(L2))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gdivword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(L1))),`_<_>_IELE-GAS`(`Gdiv_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(L1),#SemanticCastToInt(L2)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(843) org.kframework.attributes.Location(Location(843,10,847,27)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Cdiv`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(L1),#SemanticCastToInt(L2))=>`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gdivword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(L1)),`_<_>_IELE-GAS`(`Gdiv_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewarith_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(849) org.kframework.attributes.Location(Location(849,10,852,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) owise()]
  rule `Ccallgas`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#token("0","Int"),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS))=>`Cgascap`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),`Cextra`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#token("0","Int"),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(757) org.kframework.attributes.Location(Location(757,10,757,147)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `Ccallgas`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(VALUE),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS))=>`_+Int_`(`Cgascap`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),`Cextra`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS))),`_<_>_IELE-GAS`(`Gcallstipend_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) requires `_=/=K_`(#SemanticCastToInt(VALUE),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(758) org.kframework.attributes.Location(Location(758,10,758,197)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToOperands(ARGS))=>#sizeRegs(#SemanticCastToOperands(ARGS)) requires `_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(775) org.kframework.attributes.Location(Location(775,10,776,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToInts(ARGS))=>intSizes(#SemanticCastToInts(ARGS)) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(773) org.kframework.attributes.Location(Location(773,10,774,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `Ccall`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(VALUE),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS))=>`_+Int_`(`Cextra`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS)),`Cgascap`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(GCAP),#SemanticCastToInt(GAVAIL),`Cextra`(#SemanticCastToSchedule(SCHED),#SemanticCastToBool(ISEMPTY),#SemanticCastToInt(VALUE),#SemanticCastToInt(RETS),#SemanticCastToInt(ARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(755) org.kframework.attributes.Location(Location(755,10,755,191)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=__IELE-COMMON`(#SemanticCastToLValue(DEST),#SemanticCastToInt(SRC)))=>#registerDelta(#SemanticCastToLValue(DEST),intSize(#SemanticCastToInt(SRC))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(199) org.kframework.attributes.Location(Location(199,10,199,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`ret__IELE-COMMON`(#SemanticCastToNonEmptyInts(_)),#SemanticCastToSchedule(SCHED))=>#token("0","Int"),#dots(.KList)) requires `_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(608) org.kframework.attributes.Location(Location(608,10,609,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=__IELE-COMMON`(#SemanticCastToLValue(DEST),#SemanticCastToInt(SRC)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires `_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(561) org.kframework.attributes.Location(Location(561,10,562,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=__IELE-COMMON`(#SemanticCastToLValue(DEST),#SemanticCastToInt(SRC)),#SemanticCastToSchedule(SCHED))=>`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(#SemanticCastToInt(SRC))),#dots(.KList)) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(558) org.kframework.attributes.Location(Location(558,10,559,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`ID_IELE-PRECOMPILED`(.KList),#SemanticCastToSchedule(SCHED))=>#token("0","Int"),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(731) org.kframework.attributes.Location(Location(731,10,731,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`ECREC_IELE-PRECOMPILED`(.KList),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gecrec_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(728) org.kframework.attributes.Location(Location(728,10,728,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`store_,__IELE-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(INDEX)))=>#memoryDelta(#SemanticCastToInt(INDEX),intSize(#SemanticCastToInt(VALUE))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(262) org.kframework.attributes.Location(Location(262,10,262,81)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToOperand(INDEX1),#SemanticCastToOperand(INDEX2),#SemanticCastToInt(WIDTH)))=>.K requires `_==Int_`(chop(#SemanticCastToInt(WIDTH)),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(255) org.kframework.attributes.Location(Location(255,10,255,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#memory[_]_IELE-GAS`(`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToInt(INDEX1),#SemanticCastToInt(INDEX2),#SemanticCastToInt(WIDTH)))=>#memoryExpand(#SemanticCastToInt(INDEX1),bytesInWords(`_+Int_`(chop(#SemanticCastToInt(INDEX2)),chop(#SemanticCastToInt(WIDTH))))) requires `_>Int__INT-COMMON`(chop(#SemanticCastToInt(WIDTH)),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(254) org.kframework.attributes.Location(Location(254,10,254,154)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#memory[_]_IELE-GAS`(`sstore_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(292) org.kframework.attributes.Location(Location(292,10,292,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`selfdestruct__IELE-COMMON`(#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(312) org.kframework.attributes.Location(Location(312,10,312,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`revert__IELE-COMMON`(#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(309) org.kframework.attributes.Location(Location(309,10,309,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`log__IELE-COMMON`(#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(310) org.kframework.attributes.Location(Location(310,10,310,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`log_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToNonEmptyOperands(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(311) org.kframework.attributes.Location(Location(311,10,311,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`br__IELE-COMMON`(#SemanticCastToIeleName(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(307) org.kframework.attributes.Location(Location(307,10,307,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`br_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToIeleName(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(308) org.kframework.attributes.Location(Location(308,10,308,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=xor_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(88) org.kframework.attributes.Location(Location(88,10,88,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=twos_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(WIDTH),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(chop(#SemanticCastToInt(WIDTH)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(153) org.kframework.attributes.Location(Location(153,10,153,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=sub_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`_+Int_`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(118) org.kframework.attributes.Location(Location(118,10,118,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=staticcall_at_(_)gaslimit__IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(317) org.kframework.attributes.Location(Location(317,10,317,65)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=sext_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(WIDTH),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(chop(#SemanticCastToInt(WIDTH)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(152) org.kframework.attributes.Location(Location(152,10,152,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=or_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(87) org.kframework.attributes.Location(Location(87,10,87,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=not__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W)))=>#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(W))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(85) org.kframework.attributes.Location(Location(85,10,85,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=mulmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W0),#SemanticCastToOperand(W1),#SemanticCastToInt(W2)))=>#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(132) org.kframework.attributes.Location(Location(132,10,132,83)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=mul_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`_+Int_`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(119) org.kframework.attributes.Location(Location(119,10,119,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=mod_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`minInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(121) org.kframework.attributes.Location(Location(121,10,121,96)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=log2__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(W)))=>#registerDelta(#SemanticCastToLValue(REG),#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(90) org.kframework.attributes.Location(Location(90,10,90,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=load_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(INDEX1),#SemanticCastToOperand(INDEX2),#SemanticCastToInt(WIDTH)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(chop(#SemanticCastToInt(WIDTH)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(253) org.kframework.attributes.Location(Location(253,10,253,106)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=iszero__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(98) org.kframework.attributes.Location(Location(98,10,98,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=expmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(_),#SemanticCastToOperand(_),#SemanticCastToInt(W2)))=>#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(133) org.kframework.attributes.Location(Location(133,10,133,83)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=exp_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(#adjustedBitLength(intSize(#SemanticCastToInt(W0)),#SemanticCastToInt(W0)),#SemanticCastToInt(W1)),#token("64","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(122) org.kframework.attributes.Location(Location(122,10,122,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=div_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`maxInt(_,_)_INT-COMMON`(#token("1","Int"),`_+Int_`(`_-Int__INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(120) org.kframework.attributes.Location(Location(120,10,120,110)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToPredicate(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(99) org.kframework.attributes.Location(Location(99,10,99,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToGlobalName(_),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(169) org.kframework.attributes.Location(Location(169,10,169,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(316) org.kframework.attributes.Location(Location(316,10,316,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.origin","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(#token("20","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(177) org.kframework.attributes.Location(Location(177,10,177,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.number","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(165) org.kframework.attributes.Location(Location(165,10,165,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.msize","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(166) org.kframework.attributes.Location(Location(166,10,166,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gasprice","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(163) org.kframework.attributes.Location(Location(163,10,163,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gaslimit","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(164) org.kframework.attributes.Location(Location(164,10,164,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.gas","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(162) org.kframework.attributes.Location(Location(162,10,162,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),#SemanticCastToOperands(_)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(168) org.kframework.attributes.Location(Location(168,10,168,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.codesize","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(167) org.kframework.attributes.Location(Location(167,10,167,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.caller","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(#token("20","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(178) org.kframework.attributes.Location(Location(178,10,178,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.beneficiary","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(#token("20","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(175) org.kframework.attributes.Location(Location(175,10,175,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.address","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(#token("20","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(176) org.kframework.attributes.Location(Location(176,10,176,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=byte_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(INDEX),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(151) org.kframework.attributes.Location(Location(151,10,151,83)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=bswap_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(WIDTH),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(chop(#SemanticCastToInt(WIDTH)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(154) org.kframework.attributes.Location(Location(154,10,154,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=and_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`minInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(86) org.kframework.attributes.Location(Location(86,10,86,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=addmod_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(_),#SemanticCastToOperand(_),#SemanticCastToInt(W2)))=>#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(W2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(131) org.kframework.attributes.Location(Location(131,10,131,83)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_=add_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`_+Int_`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),#token("1","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(117) org.kframework.attributes.Location(Location(117,10,117,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_,_=create_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToIeleName(_),#SemanticCastToOperands(_),#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(318) org.kframework.attributes.Location(Location(318,10,318,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToOperand(_),#SemanticCastToOperands(_),#SemanticCastToOperand(_)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(319) org.kframework.attributes.Location(Location(319,10,319,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`SHA256_IELE-PRECOMPILED`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(322) org.kframework.attributes.Location(Location(322,10,322,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`RIP160_IELE-PRECOMPILED`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(323) org.kframework.attributes.Location(Location(323,10,323,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`ID_IELE-PRECOMPILED`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(324) org.kframework.attributes.Location(Location(324,10,324,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`ECREC_IELE-PRECOMPILED`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(321) org.kframework.attributes.Location(Location(321,10,321,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`ECPAIRING_IELE-PRECOMPILED`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(327) org.kframework.attributes.Location(Location(327,10,327,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`ECMUL_IELE-PRECOMPILED`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(326) org.kframework.attributes.Location(Location(326,10,326,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#memory[_]_IELE-GAS`(`ECADD_IELE-PRECOMPILED`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(325) org.kframework.attributes.Location(Location(325,10,325,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`store_,__IELE-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToOperand(INDEX)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gstorecell_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(intSize(#SemanticCastToInt(VALUE)),`_<_>_IELE-GAS`(`Gstoreword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(662) org.kframework.attributes.Location(Location(662,10,662,119)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(VALUE),#SemanticCastToOperand(INDEX),#SemanticCastToOperand(OFFSET),#SemanticCastToInt(WIDTH)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gstore_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(bytesInWords(#SemanticCastToInt(WIDTH)),`_<_>_IELE-GAS`(`Gstoreword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(663) org.kframework.attributes.Location(Location(663,10,663,137)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`revert__IELE-COMMON`(#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(610) org.kframework.attributes.Location(Location(610,10,610,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`br__IELE-COMMON`(#SemanticCastToIeleName(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gbr_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(571) org.kframework.attributes.Location(Location(571,10,571,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`br_,__IELE-COMMON`(#SemanticCastToOperand(_),#SemanticCastToIeleName(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gbrcond_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(572) org.kframework.attributes.Location(Location(572,10,572,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=xor_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gnot_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`_<_>_IELE-GAS`(`Gnotword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(442) org.kframework.attributes.Location(Location(442,10,442,127)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=twos_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(WIDTH),#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gtwos_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(#token("1","Int"),bytesInWords(chop(#SemanticCastToInt(WIDTH)))),`_<_>_IELE-GAS`(`Gtwosword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(504) org.kframework.attributes.Location(Location(504,10,504,136)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=sub_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gadd_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`_<_>_IELE-GAS`(`Gaddword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(464) org.kframework.attributes.Location(Location(464,10,464,125)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=shift_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gbitwise_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(#token("1","Int"),`_+Int_`(intSize(#SemanticCastToInt(W0)),bitsInWords(#SemanticCastToInt(W1),#SemanticCastToSchedule(SCHED)))),`_<_>_IELE-GAS`(`Gbitwiseword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(443) org.kframework.attributes.Location(Location(443,10,443,153)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=sext_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(WIDTH),#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gsext_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(#token("1","Int"),bytesInWords(chop(#SemanticCastToInt(WIDTH)))),`_<_>_IELE-GAS`(`Gsextword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(505) org.kframework.attributes.Location(Location(505,10,505,136)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=or_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gbitwise_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`_<_>_IELE-GAS`(`Gbitwiseword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(441) org.kframework.attributes.Location(Location(441,10,441,135)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=not__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gnot_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(intSize(#SemanticCastToInt(W)),`_<_>_IELE-GAS`(`Gnotword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(439) org.kframework.attributes.Location(Location(439,10,439,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=mulmod_,_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`Cmul`(#SemanticCastToSchedule(SCHED),intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`Cdiv`(#SemanticCastToSchedule(SCHED),`_+Int_`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),intSize(#SemanticCastToInt(W2)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(480) org.kframework.attributes.Location(Location(480,10,480,154)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=mul_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`Cmul`(#SemanticCastToSchedule(SCHED),intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(465) org.kframework.attributes.Location(Location(465,10,465,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=mod_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`Cdiv`(#SemanticCastToSchedule(SCHED),intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(467) org.kframework.attributes.Location(Location(467,10,467,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=log2__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Glogarithm_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(intSize(#SemanticCastToInt(W)),`_<_>_IELE-GAS`(`Glogarithmword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(444) org.kframework.attributes.Location(Location(444,10,444,117)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=load_,_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToOperand(INDEX),#SemanticCastToOperand(OFFSET),#SemanticCastToInt(WIDTH)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gload_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(bytesInWords(#SemanticCastToInt(WIDTH)),`_<_>_IELE-GAS`(`Gloadword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(660) org.kframework.attributes.Location(Location(660,10,660,130)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=iszero__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToOperand(W)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Giszero_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(452) org.kframework.attributes.Location(Location(452,10,452,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=expmod_,_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)),#SemanticCastToSchedule(SCHED))=>`Cexpmod`(#SemanticCastToSchedule(SCHED),intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1)),intSize(#SemanticCastToInt(W2)),#SemanticCastToInt(W2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(481) org.kframework.attributes.Location(Location(481,10,481,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=exp_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`Cexp`(#SemanticCastToSchedule(SCHED),intSize(#SemanticCastToInt(W0)),#SemanticCastToInt(W0),#SemanticCastToInt(W1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(468) org.kframework.attributes.Location(Location(468,10,468,81)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=div_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`Cdiv`(#SemanticCastToSchedule(SCHED),intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(466) org.kframework.attributes.Location(Location(466,10,466,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToPredicate(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gcmp_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`minInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`_<_>_IELE-GAS`(`Gcmpword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(453) org.kframework.attributes.Location(Location(453,10,453,127)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToGlobalName(_),#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gcalladdress_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(542) org.kframework.attributes.Location(Location(542,10,542,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.timestamp","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(524) org.kframework.attributes.Location(Location(524,10,524,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.origin","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(522) org.kframework.attributes.Location(Location(522,10,522,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.number","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(517) org.kframework.attributes.Location(Location(517,10,517,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.msize","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(518) org.kframework.attributes.Location(Location(518,10,518,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.gasprice","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(515) org.kframework.attributes.Location(Location(515,10,515,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.gaslimit","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(516) org.kframework.attributes.Location(Location(516,10,516,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.gas","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(514) org.kframework.attributes.Location(Location(514,10,514,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gextcodesize_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(541) org.kframework.attributes.Location(Location(541,10,541,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.difficulty","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(525) org.kframework.attributes.Location(Location(525,10,525,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.codesize","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(519) org.kframework.attributes.Location(Location(519,10,519,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.callvalue","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(526) org.kframework.attributes.Location(Location(526,10,526,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.caller","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(523) org.kframework.attributes.Location(Location(523,10,523,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.blockhash","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gblockhash_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(532) org.kframework.attributes.Location(Location(532,10,532,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.beneficiary","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(520) org.kframework.attributes.Location(Location(520,10,520,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.balance","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gbalance_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(540) org.kframework.attributes.Location(Location(540,10,540,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#token("iele.address","IeleName")),#SemanticCastToOperands(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Greadstate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(521) org.kframework.attributes.Location(Location(521,10,521,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=byte_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToOperand(_),#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gbyte_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(503) org.kframework.attributes.Location(Location(503,10,503,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=bswap_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(WIDTH),#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gbswap_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(#token("1","Int"),bytesInWords(chop(#SemanticCastToInt(WIDTH)))),`_<_>_IELE-GAS`(`Gbswapword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(506) org.kframework.attributes.Location(Location(506,10,506,136)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=and_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gbitwise_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`minInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`_<_>_IELE-GAS`(`Gbitwiseword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(440) org.kframework.attributes.Location(Location(440,10,440,135)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=addmod_,_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1),#SemanticCastToInt(W2)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Gadd_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`_<_>_IELE-GAS`(`Gaddword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),`Cdiv`(#SemanticCastToSchedule(SCHED),`_+Int_`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),#token("1","Int")),intSize(#SemanticCastToInt(W2)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(479) org.kframework.attributes.Location(Location(479,10,479,204)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_=add_,__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(W0),#SemanticCastToInt(W1)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gadd_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`maxInt(_,_)_INT-COMMON`(intSize(#SemanticCastToInt(W0)),intSize(#SemanticCastToInt(W1))),`_<_>_IELE-GAS`(`Gaddword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(463) org.kframework.attributes.Location(Location(463,10,463,125)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_,_=create_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToIeleName(_),#SemanticCastToOperands(ARGS),#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gcreate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToOperands(ARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(707) org.kframework.attributes.Location(Location(707,10,707,131)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToLValue(_),#SemanticCastToOperand(_),#SemanticCastToOperands(ARGS),#SemanticCastToOperand(_)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gcopycreate_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToOperands(ARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(708) org.kframework.attributes.Location(Location(708,10,708,139)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`ECMUL_IELE-PRECOMPILED`(.KList),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gecmul_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(734) org.kframework.attributes.Location(Location(734,10,734,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#compute[_,_]_IELE-GAS`(`ECADD_IELE-PRECOMPILED`(.KList),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gecadd_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(733) org.kframework.attributes.Location(Location(733,10,733,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registerDeltas(lvalueList(#SemanticCastToLValue(REG),#SemanticCastToLValues(REGS)),operandList(#SemanticCastToInt(INT),#SemanticCastToInts(INTS)))=>#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(INT)))~>#registerDeltas(#SemanticCastToLValues(REGS),#SemanticCastToInts(INTS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(354) org.kframework.attributes.Location(Location(354,10,354,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registerDeltas(`.List{"lvalueList"}`(.KList),#SemanticCastToInts(_))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(355) org.kframework.attributes.Location(Location(355,10,355,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registerDeltas(#SemanticCastToLValues(_),`.List{"operandList"}`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(356) org.kframework.attributes.Location(Location(356,10,356,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #overApproxKara(#SemanticCastToInt(N))=>`#if_#then_#else_#fi_K-EQUAL`(`_<=Int__INT-COMMON`(#SemanticCastToInt(N),#token("32","Int")),`_*Int__INT-COMMON`(#SemanticCastToInt(N),#SemanticCastToInt(N)),`#if_#then_#else_#fi_K-EQUAL`(`_<=Int__INT-COMMON`(#SemanticCastToInt(N),#token("1024","Int")),`_-Int__INT-COMMON`(`_+Int_`(`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(#SemanticCastToInt(N),#SemanticCastToInt(N)),#token("4","Int")),`_*Int__INT-COMMON`(#token("48","Int"),#SemanticCastToInt(N))),#token("768","Int")),`_-Int__INT-COMMON`(`_+Int_`(`_/Int__INT-COMMON`(`_*Int__INT-COMMON`(#SemanticCastToInt(N),#SemanticCastToInt(N)),#token("16","Int")),`_*Int__INT-COMMON`(#token("432","Int"),#SemanticCastToInt(N))),#token("197376","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(905) org.kframework.attributes.Location(Location(905,10,908,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))``~>#accountEmpty(#SemanticCastToInt(ACCT)),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(797) org.kframework.attributes.Location(Location(797,10,799,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`ret__IELE-COMMON`(#SemanticCastToNonEmptyOperands(_)))=>.K,#dots(.KList)),`<localCalls>`(#noDots(.KList),`.List`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(314) org.kframework.attributes.Location(Location(314,10,314,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=shift_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(W0),#SemanticCastToInt(W1)))=>#registerDelta(#SemanticCastToLValue(REG),`maxInt(_,_)_INT-COMMON`(#token("1","Int"),`_+Int_`(intSize(#SemanticCastToInt(W0)),bitsInWords(#SemanticCastToInt(W1),#SemanticCastToSchedule(SCHED))))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(89) org.kframework.attributes.Location(Location(89,10,89,158)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=sha3__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(_)))=>#registerDelta(#SemanticCastToLValue(REG),bitsInWords(#token("256","Int"),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(141) org.kframework.attributes.Location(Location(141,10,141,124)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=load__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(INDEX)))=>#registerDelta(#SemanticCastToLValue(REG),bytesInWords(lengthBytes(#SemanticCastToBytes(LM)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(INDEX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(257) org.kframework.attributes.Location(Location(257,10,258,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=load__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(INDEX)))=>#registerDelta(#SemanticCastToLValue(REG),#token("0","Int")),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(INDEX),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(259) org.kframework.attributes.Location(Location(259,10,261,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.timestamp","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),bitsInWords(#token("256","Int"),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(184) org.kframework.attributes.Location(Location(184,10,184,150)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.difficulty","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),bitsInWords(#token("256","Int"),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(185) org.kframework.attributes.Location(Location(185,10,185,150)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.callvalue","IeleName")),`.List{"operandList"}`(.KList)))=>#registerDelta(#SemanticCastToLValue(REG),bitsInWords(#token("256","Int"),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(186) org.kframework.attributes.Location(Location(186,10,186,150)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.blockhash","IeleName")),#SemanticCastToOperands(_)))=>#registerDelta(#SemanticCastToLValue(REG),bitsInWords(#token("256","Int"),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(187) org.kframework.attributes.Location(Location(187,10,187,150)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.balance","IeleName")),#SemanticCastToOperands(_)))=>#registerDelta(#SemanticCastToLValue(REG),bitsInWords(#token("256","Int"),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(188) org.kframework.attributes.Location(Location(188,10,188,150)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToInt(IDX)=>`@__IELE-COMMON`(#SemanticCastToIeleName(FUNC)),#SemanticCastToOperands(_))),#dots(.KList)),`<funcLabels>`(#dots(.KList),`_|->_`(#SemanticCastToInt(IDX),#SemanticCastToIeleName(FUNC)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(215) org.kframework.attributes.Location(Location(215,10,216,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToInt(IDX),#SemanticCastToOperands(_)))=>.K,#dots(.KList)),`<funcLabels>`(#noDots(.KList),#SemanticCastToMap(LABELS),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(IDX),#SemanticCastToMap(LABELS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(218) org.kframework.attributes.Location(Location(218,10,220,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=__IELE-COMMON`(#SemanticCastToLValue(DEST),`%__IELE-COMMON`(#SemanticCastToInt(SRC))))=>#registerDelta(#SemanticCastToLValue(DEST),intSize(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(SRC))))),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(197) org.kframework.attributes.Location(Location(197,10,198,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#gas[_]_IELE-INFRASTRUCTURE`(#SemanticCastToInstruction(OP))=>`#memory[_]_IELE-GAS`(#SemanticCastToInstruction(OP))~>`#compute[_,_]_IELE-GAS`(#SemanticCastToInstruction(OP),#SemanticCastToSchedule(SCHED))~>`#deductGas_IELE-GAS`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(29) org.kframework.attributes.Location(Location(29,10,29,122)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`ret__IELE-COMMON`(#SemanticCastToNonEmptyInts(_)),#SemanticCastToSchedule(SCHED))=>#token("0","Int"),#dots(.KList)),`<localCalls>`(#noDots(.KList),`.List`(.KList),#noDots(.KList))) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(604) org.kframework.attributes.Location(Location(604,10,606,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`ret__IELE-COMMON`(#SemanticCastToNonEmptyInts(ARGS)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#sizeRegs(#SemanticCastToNonEmptyInts(ARGS))),#token("8","Int")),#dots(.KList)),`<localCalls>`(#noDots(.KList),`ListItem`(#SemanticCastToKItem(_)),#dots(.KList))) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(601) org.kframework.attributes.Location(Location(601,10,603,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`log__IELE-COMMON`(#SemanticCastToOperand(IDX)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Glog_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Glogdata_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),bytesInWords(lengthBytes(#SemanticCastToBytes(LM))))),`_*Int__INT-COMMON`(#token("0","Int"),`_<_>_IELE-GAS`(`Glogtopic_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(IDX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(634) org.kframework.attributes.Location(Location(634,10,634,237)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`log__IELE-COMMON`(#SemanticCastToOperand(IDX)),#SemanticCastToSchedule(SCHED)),#dots(.KList)),`<localMem>`(#noDots(.KList),`_Map_`(#SemanticCastToMap(LM),`.Map`(.KList)=>`_|->_`(#SemanticCastToOperand(IDX),`.Bytes_BYTES-HOOKED`(.KList))),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(IDX),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(640) org.kframework.attributes.Location(Location(640,10,642,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`log_,__IELE-COMMON`(#SemanticCastToOperand(IDX),operandList(#SemanticCastToInt(_),operandList(#SemanticCastToInt(_),operandList(#SemanticCastToInt(_),operandList(#SemanticCastToInt(_),`.List{"operandList"}`(.KList)))))),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Glog_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Glogdata_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),bytesInWords(lengthBytes(#SemanticCastToBytes(LM))))),`_*Int__INT-COMMON`(#token("4","Int"),`_<_>_IELE-GAS`(`Glogtopic_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(IDX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(638) org.kframework.attributes.Location(Location(638,10,638,237)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`log_,__IELE-COMMON`(#SemanticCastToOperand(IDX),operandList(#SemanticCastToInt(_),operandList(#SemanticCastToInt(_),operandList(#SemanticCastToInt(_),`.List{"operandList"}`(.KList))))),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Glog_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Glogdata_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),bytesInWords(lengthBytes(#SemanticCastToBytes(LM))))),`_*Int__INT-COMMON`(#token("3","Int"),`_<_>_IELE-GAS`(`Glogtopic_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(IDX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(637) org.kframework.attributes.Location(Location(637,10,637,237)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`log_,__IELE-COMMON`(#SemanticCastToOperand(IDX),operandList(#SemanticCastToInt(_),operandList(#SemanticCastToInt(_),`.List{"operandList"}`(.KList)))),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Glog_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Glogdata_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),bytesInWords(lengthBytes(#SemanticCastToBytes(LM))))),`_*Int__INT-COMMON`(#token("2","Int"),`_<_>_IELE-GAS`(`Glogtopic_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(IDX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(636) org.kframework.attributes.Location(Location(636,10,636,237)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`log_,__IELE-COMMON`(#SemanticCastToOperand(IDX),operandList(#SemanticCastToInt(_),`.List{"operandList"}`(.KList))),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Glog_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Glogdata_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),bytesInWords(lengthBytes(#SemanticCastToBytes(LM))))),`_*Int__INT-COMMON`(#token("1","Int"),`_<_>_IELE-GAS`(`Glogtopic_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(IDX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(635) org.kframework.attributes.Location(Location(635,10,635,237)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`log_,__IELE-COMMON`(#SemanticCastToOperand(IDX),#SemanticCastToNonEmptyOperands(_)),#SemanticCastToSchedule(SCHED)),#dots(.KList)),`<localMem>`(#noDots(.KList),`_Map_`(#SemanticCastToMap(LM),`.Map`(.KList)=>`_|->_`(#SemanticCastToOperand(IDX),`.Bytes_BYTES-HOOKED`(.KList))),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(IDX),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(643) org.kframework.attributes.Location(Location(643,10,645,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=staticcall_at_(_)gaslimit__IELE-COMMON`(lvalueList(#SemanticCastToLValue(_),#SemanticCastToLValues(RETS)),#SemanticCastToOperand(_),#SemanticCastToInt(ACCTTO),#SemanticCastToOperands(ARGS),#SemanticCastToInt(GCAP)),#SemanticCastToSchedule(SCHED))=>`Ccall`(#SemanticCastToSchedule(SCHED),#accountEmpty(#SemanticCastToInt(ACCTTO)),`_*Int__INT-COMMON`(#SemanticCastToInt(GCAP),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(GAVAIL),#token("0","Int"),#sizeLVals(#SemanticCastToLValues(RETS)),`Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToOperands(ARGS))),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(625) org.kframework.attributes.Location(Location(625,10,626,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=sha3__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToOperand(W0)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gsha3_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(W0),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(492) org.kframework.attributes.Location(Location(492,10,494,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=sha3__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToOperand(W0)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gsha3_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(bytesInWords(lengthBytes(#SemanticCastToBytes(LM))),`_<_>_IELE-GAS`(`Gsha3word_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(W0),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(489) org.kframework.attributes.Location(Location(489,10,490,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=load__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToOperand(INDEX)),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gloadcell_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToOperand(INDEX),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(656) org.kframework.attributes.Location(Location(656,10,658,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=load__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToOperand(INDEX)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gloadcell_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(bytesInWords(lengthBytes(#SemanticCastToBytes(LM))),`_<_>_IELE-GAS`(`Gloadword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(INDEX),#SemanticCastToBytes(LM)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(654) org.kframework.attributes.Location(Location(654,10,655,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(lvalueList(#SemanticCastToLValue(_),#SemanticCastToLValues(RETS)),#SemanticCastToOperand(_),#SemanticCastToInt(ACCTTO),#SemanticCastToOperands(ARGS),#SemanticCastToInt(VALUE),#SemanticCastToInt(GCAP)),#SemanticCastToSchedule(SCHED))=>`Ccall`(#SemanticCastToSchedule(SCHED),#accountEmpty(#SemanticCastToInt(ACCTTO)),`_*Int__INT-COMMON`(#SemanticCastToInt(GCAP),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(VALUE),#sizeLVals(#SemanticCastToLValues(RETS)),`Ccallarg`(#SemanticCastToSchedule(SCHED),#SemanticCastToOperands(ARGS))),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(622) org.kframework.attributes.Location(Location(622,10,623,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToInt(IDX)=>`@__IELE-COMMON`(#SemanticCastToIeleName(FUNC)),#SemanticCastToOperands(_)),#SemanticCastToSchedule(_)),#dots(.KList)),`<funcLabels>`(#dots(.KList),`_|->_`(#SemanticCastToInt(IDX),#SemanticCastToIeleName(FUNC)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(590) org.kframework.attributes.Location(Location(590,10,591,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),#SemanticCastToInt(IDX),#SemanticCastToOperands(_)),#SemanticCastToSchedule(_))=>#token("0","Int"),#dots(.KList)),`<funcLabels>`(#noDots(.KList),#SemanticCastToMap(LABELS),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(IDX),#SemanticCastToMap(LABELS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(593) org.kframework.attributes.Location(Location(593,10,595,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=__IELE-COMMON`(#SemanticCastToLValue(DEST),`%__IELE-COMMON`(#SemanticCastToInt(SRC))),#SemanticCastToSchedule(SCHED))=>`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires `_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(554) org.kframework.attributes.Location(Location(554,10,556,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=__IELE-COMMON`(#SemanticCastToLValue(DEST),`%__IELE-COMMON`(#SemanticCastToInt(SRC))),#SemanticCastToSchedule(SCHED))=>`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(SRC))))),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(550) org.kframework.attributes.Location(Location(550,10,552,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`SHA256_IELE-PRECOMPILED`(.KList),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gsha256_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsha256word_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),bytesInWords(`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(LEN),intSize(#SemanticCastToInt(DATA)))))),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),operandList(#SemanticCastToInt(DATA),`.List{"operandList"}`(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(729) org.kframework.attributes.Location(Location(729,10,729,185)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`RIP160_IELE-PRECOMPILED`(.KList),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Grip160_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Grip160word_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),bytesInWords(`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(LEN),intSize(#SemanticCastToInt(DATA)))))),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),operandList(#SemanticCastToInt(DATA),`.List{"operandList"}`(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(730) org.kframework.attributes.Location(Location(730,10,730,185)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`ECPAIRING_IELE-PRECOMPILED`(.KList),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_<_>_IELE-GAS`(`Gecpairing_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(#SemanticCastToInt(LEN),`_<_>_IELE-GAS`(`Gecpairingpair_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),#SemanticCastToInts(_)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(735) org.kframework.attributes.Location(Location(735,10,735,146)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#accountEmpty(#SemanticCastToInt(ACCT))=>`notBool_`(#SemanticCastToBool(EXISTS)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<exists>`(#noDots(.KList),#SemanticCastToBool(EXISTS),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(791) org.kframework.attributes.Location(Location(791,10,796,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#SemanticCastToInt(G)~>`#deductGas_IELE-GAS`(.KList)=>`#exception__IELE-INFRASTRUCTURE`(`OUT_OF_GAS_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires `_<Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(G)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(31) org.kframework.attributes.Location(Location(31,10,31,127)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),memoryDirectDelta(#SemanticCastToInt(DELTA))=>#deductMemory(#SemanticCastToInt(PEAK)),#dots(.KList)),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(CURR)=>`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(DELTA)),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(PEAK)=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(PEAK),`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(DELTA))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(394) org.kframework.attributes.Location(Location(394,10,396,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>#lookupStorage(#SemanticCastToInt(ACCT),#SemanticCastToInt(INDEX))``~>`#memory[_]_IELE-GAS`(`_=sload__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(INDEX))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(INDEX),#SemanticCastToMap(STORAGE))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(279) org.kframework.attributes.Location(Location(279,10,286,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>#lookupStorage(#SemanticCastToInt(ACCT),#SemanticCastToInt(INDEX))``~>`#compute[_,_]_IELE-GAS`(`sstore_,__IELE-COMMON`(#SemanticCastToOperand(VALUE),#SemanticCastToInt(INDEX)),#SemanticCastToSchedule(_)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(INDEX),#SemanticCastToMap(STORAGE))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(691) org.kframework.attributes.Location(Location(691,10,698,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=sload__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToOperand(INDEX)))=>#registerDelta(#SemanticCastToLValue(REG),intSize(#SemanticCastToInt(VALUE))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#dots(.KList),`_|->_`(#SemanticCastToOperand(INDEX),#SemanticCastToInt(VALUE)),#dots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(271) org.kframework.attributes.Location(Location(271,10,277,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`sstore_,__IELE-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(INDEX)),#SemanticCastToSchedule(SCHED))=>`Csstore`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(INDEX),#SemanticCastToInt(VALUE),#SemanticCastToInt(OLDVALUE)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#dots(.KList),`_|->_`(#SemanticCastToInt(INDEX),#SemanticCastToInt(OLDVALUE)),#dots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(683) org.kframework.attributes.Location(Location(683,10,689,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`selfdestruct__IELE-COMMON`(#SemanticCastToInt(ACCTTO)),#SemanticCastToSchedule(SCHED))=>`Cselfdestruct`(#SemanticCastToSchedule(SCHED),#accountEmpty(#SemanticCastToInt(ACCTTO)),#SemanticCastToInt(BAL)),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(BAL),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(714) org.kframework.attributes.Location(Location(714,10,720,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=sload__IELE-COMMON`(#SemanticCastToLValue(_),#SemanticCastToInt(INDEX)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_<_>_IELE-GAS`(`Gsload_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsloadkey_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(#SemanticCastToInt(INDEX)))),`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gsloadword_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),intSize(#SemanticCastToInt(VALUE)))),#dots(.KList)),`<id>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#dots(.KList),`_|->_`(#SemanticCastToInt(INDEX),#SemanticCastToInt(VALUE)),#dots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(14) contentStartLine(671) org.kframework.attributes.Location(Location(671,14,677,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToOperands(ARGS)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gcallreg_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(REGISTERS)),`_<_>_IELE-GAS`(`Glocalcall_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList))),`<nregs>`(#noDots(.KList),#SemanticCastToInt(REGISTERS),#noDots(.KList))) requires `_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(585) org.kframework.attributes.Location(Location(585,10,588,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#compute[_,_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(_),`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInts(ARGS)),#SemanticCastToSchedule(SCHED))=>`_+Int_`(`_+Int_`(`_*Int__INT-COMMON`(`_<_>_IELE-GAS`(`Gcallreg_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)),#SemanticCastToInt(REGISTERS)),`_*Int__INT-COMMON`(intSizes(#SemanticCastToInts(ARGS)),`_<_>_IELE-GAS`(`Gmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),`_<_>_IELE-GAS`(`Glocalcall_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#dots(.KList)),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList))),`<nregs>`(#noDots(.KList),#SemanticCastToInt(REGISTERS),#noDots(.KList))) requires `notBool_`(`_<<_>>_IELE-GAS`(`Gnewmove_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(581) org.kframework.attributes.Location(Location(581,10,584,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#deductMemory(#SemanticCastToInt(OLDPEAK))=>`_-Int__INT-COMMON`(`Cmem`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(NEWPEAK)),`Cmem`(#SemanticCastToSchedule(SCHED),#SemanticCastToInt(OLDPEAK)))~>`#deductGas_IELE-GAS`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(NEWPEAK),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(400) org.kframework.attributes.Location(Location(400,10,402,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),#SemanticCastToInt(G)~>`#deductGas_IELE-GAS`(.KList)=>.K,#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL)=>`_-Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(G)),#noDots(.KList))),`<previousGas>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),#SemanticCastToInt(G)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(32) org.kframework.attributes.Location(Location(32,10,32,169)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(REGS),`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInts(ARGS)))=>memoryDirectDelta(`_+Int_`(`_+Int_`(`_-Int__INT-COMMON`(#SemanticCastToInt(REGISTERS),#sizeRegs(#SemanticCastToInts(ARGS))),intSizes(#SemanticCastToInts(ARGS))),`_<_>_IELE-GAS`(`Gcallmemory_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList))),`<nregs>`(#noDots(.KList),#SemanticCastToInt(REGISTERS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(210) org.kframework.attributes.Location(Location(210,10,213,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),#registerDelta(`%__IELE-COMMON`(#SemanticCastToInt(REG)),#SemanticCastToInt(NEWSIZE))=>#deductMemory(#SemanticCastToInt(PEAK)),#dots(.KList)),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(CURR),#noDots(.KList))),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(PEAK)=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(PEAK),`_-Int__INT-COMMON`(`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEWSIZE)),intSize(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG)))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(342) org.kframework.attributes.Location(Location(342,10,345,111)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),#memoryExpand(#SemanticCastToInt(INDEX),#SemanticCastToInt(NEWSIZE))=>#deductMemory(#SemanticCastToInt(PEAK)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(CURR)=>`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEWSIZE)),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(PEAK)=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(PEAK),`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEWSIZE))),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(INDEX),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(377) org.kframework.attributes.Location(Location(377,10,381,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),#memoryExpand(#SemanticCastToInt(INDEX),#SemanticCastToInt(NEWSIZE))=>#deductMemory(#SemanticCastToInt(PEAK)),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToInt(INDEX),#SemanticCastToBytes(LM)),#dots(.KList))),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(CURR)=>`_+Int_`(#SemanticCastToInt(CURR),`maxInt(_,_)_INT-COMMON`(#token("0","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(NEWSIZE),bytesInWords(lengthBytes(#SemanticCastToBytes(LM)))))),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(PEAK)=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(PEAK),`_+Int_`(#SemanticCastToInt(CURR),`maxInt(_,_)_INT-COMMON`(#token("0","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(NEWSIZE),bytesInWords(lengthBytes(#SemanticCastToBytes(LM))))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(372) org.kframework.attributes.Location(Location(372,10,375,124)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),#memoryDelta(#SemanticCastToInt(INDEX),#SemanticCastToInt(NEWSIZE))=>#deductMemory(#SemanticCastToInt(PEAK)),#dots(.KList)),`<localMem>`(#noDots(.KList),#SemanticCastToMap(LM),#noDots(.KList))),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(CURR)=>`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEWSIZE)),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(PEAK)=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(PEAK),`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEWSIZE))),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(INDEX),#SemanticCastToMap(LM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(388) org.kframework.attributes.Location(Location(388,10,392,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),#memoryDelta(#SemanticCastToInt(INDEX),#SemanticCastToInt(NEWSIZE))=>#deductMemory(#SemanticCastToInt(PEAK)),#dots(.KList)),`<localMem>`(#dots(.KList),`_|->_`(#SemanticCastToInt(INDEX),#SemanticCastToBytes(LM)),#dots(.KList))),`<currentMemory>`(#noDots(.KList),#SemanticCastToInt(CURR)=>`_-Int__INT-COMMON`(`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEWSIZE)),bytesInWords(lengthBytes(#SemanticCastToBytes(LM)))),#noDots(.KList))),`<peakMemory>`(#noDots(.KList),#SemanticCastToInt(PEAK)=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(PEAK),`_-Int__INT-COMMON`(`_+Int_`(#SemanticCastToInt(CURR),#SemanticCastToInt(NEWSIZE)),bytesInWords(lengthBytes(#SemanticCastToBytes(LM))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(383) org.kframework.attributes.Location(Location(383,10,386,113)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),`#memory[_]_IELE-GAS`(`ret__IELE-COMMON`(#SemanticCastToNonEmptyOperands(ARGS)))=>memoryDirectDelta(`_-Int__INT-COMMON`(`_-Int__INT-COMMON`(#token("0","Int"),intSizesArr(#SemanticCastToArray(REGS),#SemanticCastToInt(NREGS),#SemanticCastToSchedule(SCHED))),`_<_>_IELE-GAS`(`Gcallmemory_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED)))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<fid>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList))),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))),`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList))),`<nregs>`(#noDots(.KList),#SemanticCastToInt(NREGS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(231) org.kframework.attributes.Location(Location(231,10,236,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #allBut64th(#SemanticCastToInt(N))=>`_-Int__INT-COMMON`(#SemanticCastToInt(N),`_/Int__INT-COMMON`(#SemanticCastToInt(N),#token("64","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(803) org.kframework.attributes.Location(Location(803,10,803,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #adjustedBitLengthAux(#token("0","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(928) org.kframework.attributes.Location(Location(928,10,928,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #adjustedBitLengthAux(#SemanticCastToInt(N))=>log2Int(#SemanticCastToInt(N)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(929) org.kframework.attributes.Location(Location(929,10,929,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #adjustedBitLength(#SemanticCastToInt(LEX),#SemanticCastToInt(EX))=>`maxInt(_,_)_INT-COMMON`(#token("1","Int"),`_+Int_`(`#if_#then_#else_#fi_K-EQUAL`(`_<=Int__INT-COMMON`(#SemanticCastToInt(LEX),#token("1","Int")),#token("0","Int"),`_*Int__INT-COMMON`(#token("64","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(LEX),#token("1","Int")))),#adjustedBitLengthAux(twos(#token("8","Int"),#SemanticCastToInt(EX))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(926) org.kframework.attributes.Location(Location(926,10,926,143)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( this will throw an exception, so the gas cost doesn't really matter,[org.kframework.attributes.Location(Location(592,5,592,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( this will throw an exception, so the gas cost doesn't really matter,[org.kframework.attributes.Location(Location(217,5,217,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( Note that if L2 is low enough (< 32) then #overApproxKara(L2) = L2 * L2,[org.kframework.attributes.Location(Location(836,7,836,81)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( Danse,[org.kframework.attributes.Location(Location(1099,2,1099,10)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( Albe,[org.kframework.attributes.Location(Location(1083,2,1083,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ---------------------------------------------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(971,2,971,164)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(790,2,790,95)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ----------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(754,2,754,93)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( --------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(925,2,925,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ---------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(808,2,808,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(371,2,371,77)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( -----------------------------------------------------------------------,[org.kframework.attributes.Location(Location(827,2,827,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ----------------------------------------------------------------------,[org.kframework.attributes.Location(Location(779,2,779,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( -----------------------------------------------------------------,[org.kframework.attributes.Location(Location(904,2,904,70)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( -----------------------------------------------------------------,[org.kframework.attributes.Location(Location(429,2,429,70)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ---------------------------------------------------------------,[org.kframework.attributes.Location(Location(950,2,950,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ----------------------------------------------------------,[org.kframework.attributes.Location(Location(946,2,946,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ----------------------------------------------------------,[org.kframework.attributes.Location(Location(819,2,819,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ----------------------------------------------------------,[org.kframework.attributes.Location(Location(744,2,744,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( --------------------------------------------------------,[org.kframework.attributes.Location(Location(957,2,957,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( --------------------------------------------------------,[org.kframework.attributes.Location(Location(353,2,353,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( -------------------------------------------------------,[org.kframework.attributes.Location(Location(413,2,413,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( -----------------------------------------------------,[org.kframework.attributes.Location(Location(341,2,341,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ---------------------------------------------------,[org.kframework.attributes.Location(Location(63,2,63,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ---------------------------------------------,[org.kframework.attributes.Location(Location(802,2,802,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( -------------------------------------------,[org.kframework.attributes.Location(Location(399,2,399,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ----------------------------------,[org.kframework.attributes.Location(Location(28,2,28,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( -----------------------------,[org.kframework.attributes.Location(Location(980,2,980,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( ---------------------------,[org.kframework.attributes.Location(Location(1100,2,1100,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
  ModuleComment( --------------------------,[org.kframework.attributes.Location(Location(1084,2,1084,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))])
endmodule


module IELE-GAS$SYNTAX [org.kframework.attributes.Location(Location(9,1,1188,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-gas.k))]
  imports IELE-PRECOMPILED$SYNTAX
  imports IELE-INFRASTRUCTURE$SYNTAX
  imports IELE-DATA$SYNTAX
  imports IELE-CONFIGURATION$SYNTAX
  imports IELE-COMMON$SYNTAX
  syntax ScheduleFlag ::= "Gstaticcalldepth"
  syntax ScheduleFlag ::= "Gselfdestructnewaccount"
  syntax ScheduleFlag ::= "Gnewmove"
  syntax ScheduleFlag ::= "Gnewarith"
  syntax ScheduleConst ::= "Smemallowance"
  syntax ScheduleConst ::= "Sgasdivisor"
  syntax ScheduleConst ::= "Rsstoreset"
  syntax ScheduleConst ::= "Rselfdestruct"
  syntax ScheduleConst ::= "Rb"
  syntax ScheduleConst ::= "Gtxdatazero"
  syntax ScheduleConst ::= "Gtxdatanonzero"
  syntax ScheduleConst ::= "Gtxcreate"
  syntax ScheduleConst ::= "Gtwosword"
  syntax ScheduleConst ::= "Gtwos"
  syntax ScheduleConst ::= "Gtransaction"
  syntax ScheduleConst ::= "Gstoreword"
  syntax ScheduleConst ::= "Gstorecell"
  syntax ScheduleConst ::= "Gstore"
  syntax ScheduleConst ::= "Gsstoreword"
  syntax ScheduleConst ::= "Gsstoresetkey"
  syntax ScheduleConst ::= "Gsstoreset"
  syntax ScheduleConst ::= "Gsstorekey"
  syntax ScheduleConst ::= "Gsstore"
  syntax ScheduleConst ::= "Gsloadword"
  syntax ScheduleConst ::= "Gsloadkey"
  syntax ScheduleConst ::= "Gsload"
  syntax ScheduleConst ::= "Gsha3word"
  syntax ScheduleConst ::= "Gsha3"
  syntax ScheduleConst ::= "Gsha256word"
  syntax ScheduleConst ::= "Gsha256"
  syntax ScheduleConst ::= "Gsextword"
  syntax ScheduleConst ::= "Gsext"
  syntax ScheduleConst ::= "Gselfdestruct"
  syntax ScheduleConst ::= "Grip160word"
  syntax ScheduleConst ::= "Grip160"
  syntax ScheduleConst ::= "Greadstate"
  syntax ScheduleConst ::= "Gquadcoeff"
  syntax ScheduleConst ::= "Gnotword"
  syntax ScheduleConst ::= "Gnot"
  syntax ScheduleConst ::= "Gnewaccount"
  syntax ScheduleConst ::= "Gmulword"
  syntax ScheduleConst ::= "Gmulkara"
  syntax ScheduleConst ::= "Gmul"
  syntax ScheduleConst ::= "Gmove"
  syntax ScheduleConst ::= "Gmemory"
  syntax ScheduleConst ::= "Glogtopic"
  syntax ScheduleConst ::= "Glogdata"
  syntax ScheduleConst ::= "Glogarithmword"
  syntax ScheduleConst ::= "Glogarithm"
  syntax ScheduleConst ::= "Glog"
  syntax ScheduleConst ::= "Glocalcall"
  syntax ScheduleConst ::= "Gloadword"
  syntax ScheduleConst ::= "Gloadcell"
  syntax ScheduleConst ::= "Gload"
  syntax ScheduleConst ::= "Giszero"
  syntax ScheduleConst ::= "Gextcodesize"
  syntax ScheduleConst ::= "Gexpword"
  syntax ScheduleConst ::= "Gexpmodmod"
  syntax ScheduleConst ::= "Gexpmodkara"
  syntax ScheduleConst ::= "Gexpmodexp"
  syntax ScheduleConst ::= "Gexpmod"
  syntax ScheduleConst ::= "Gexpkara"
  syntax ScheduleConst ::= "Gexp"
  syntax ScheduleConst ::= "Gecrec"
  syntax ScheduleConst ::= "Gecpairingpair"
  syntax ScheduleConst ::= "Gecpairing"
  syntax ScheduleConst ::= "Gecmul"
  syntax ScheduleConst ::= "Gecadd"
  syntax ScheduleConst ::= "Gdivword"
  syntax ScheduleConst ::= "Gdivkara"
  syntax ScheduleConst ::= "Gdiv"
  syntax ScheduleConst ::= "Gcreate"
  syntax ScheduleConst ::= "Gcopycreate"
  syntax ScheduleConst ::= "Gcodedeposit"
  syntax ScheduleConst ::= "Gcmpword"
  syntax ScheduleConst ::= "Gcmp"
  syntax ScheduleConst ::= "Gcallvalue"
  syntax ScheduleConst ::= "Gcallstipend"
  syntax ScheduleConst ::= "Gcallreg"
  syntax ScheduleConst ::= "Gcallmemory"
  syntax ScheduleConst ::= "Gcalladdress"
  syntax ScheduleConst ::= "Gcall"
  syntax ScheduleConst ::= "Gbyte"
  syntax ScheduleConst ::= "Gbswapword"
  syntax ScheduleConst ::= "Gbswap"
  syntax ScheduleConst ::= "Gbrcond"
  syntax ScheduleConst ::= "Gbr"
  syntax ScheduleConst ::= "Gblockhash"
  syntax ScheduleConst ::= "Gbitwiseword"
  syntax ScheduleConst ::= "Gbitwise"
  syntax ScheduleConst ::= "Gbalance"
  syntax ScheduleConst ::= "Gaddword"
  syntax ScheduleConst ::= "Gadd"
  syntax Schedule ::= "DEFAULT"
  syntax Operand ::= "Cselfdestruct" "(" Schedule "," BExp "," Int ")" [klabel(Cselfdestruct) strict(2)]
  syntax Operand ::= "Ccallgas" "(" Schedule "," BExp "," Int "," Int "," Int "," Int "," Int ")" [klabel(Ccallgas) strict(2)]
  syntax Operand ::= "Ccall" "(" Schedule "," BExp "," Int "," Int "," Int "," Int "," Int ")" [klabel(Ccall) strict(2)]
  syntax KResult ::= Bool
  syntax InternalOp ::= "#registerDeltas" "(" LValues "," Ints ")" [klabel(#registerDeltas)]
  syntax InternalOp ::= "#registerDelta" "(" LValue "," Int ")" [klabel(#registerDelta)]
  syntax InternalOp ::= "#memoryExpand" "(" Int "," Int ")" [klabel(#memoryExpand)]
  syntax InternalOp ::= "#memoryDelta" "(" Int "," Int ")" [klabel(#memoryDelta)]
  syntax InternalOp ::= "#memoryDelta" "(" Int ")" [klabel(memoryDirectDelta)]
  syntax InternalOp ::= "#memory" "[" Instruction "]"
  syntax InternalOp ::= "#deductMemory" "(" Int ")" [klabel(#deductMemory)]
  syntax InternalOp ::= "#deductGas"
  syntax InternalOp ::= "#compute" "[" Instruction "," Schedule "]"
  syntax Int ::= ScheduleConst "<" Schedule ">" [function()]
  syntax Int ::= "G0" "(" Schedule "," WordStack "," Ints ")" [function() klabel(G0create)]
  syntax Int ::= "G0" "(" Schedule "," WordStack "," Bool ")" [function() klabel(G0aux)]
  syntax Int ::= "G0" "(" Schedule "," String "," Ints ")" [function() klabel(G0call)]
  syntax Int ::= "G*" "(" Int "," Int "," Int ")" [function()]
  syntax Int ::= "Cxfer" "(" Schedule "," Int ")" [function() klabel(Cxfer)]
  syntax Int ::= "Csstore" "(" Schedule "," Int "," Int "," Int ")" [function() klabel(Csstore)]
  syntax Int ::= "Cpricedmem" "(" Schedule "," Int ")" [function() klabel(Cpricedmem)]
  syntax Int ::= "Cnew" "(" Schedule "," Bool "," Int ")" [function() klabel(Cnew)]
  syntax Int ::= "Cmul" "(" Schedule "," Int "," Int ")" [function() klabel(Cmul)]
  syntax Int ::= "Cmem" "(" Schedule "," Int ")" [function() klabel(Cmem) memo()]
  syntax Int ::= "Ckara" "(" Int "," Int ")" [function() klabel(Ckara)]
  syntax Int ::= "Cgascap" "(" Schedule "," Int "," Int "," Int ")" [function() klabel(Cgascap)]
  syntax Int ::= "Cextra" "(" Schedule "," Bool "," Int "," Int "," Int ")" [function() klabel(Cextra)]
  syntax Int ::= "Cexpmod" "(" Schedule "," Int "," Int "," Int "," Int ")" [function() klabel(Cexpmod)]
  syntax Int ::= "Cexp" "(" Schedule "," Int "," Int "," Int ")" [function() klabel(Cexp)]
  syntax Int ::= "Cdiv" "(" Schedule "," Int "," Int ")" [function() klabel(Cdiv)]
  syntax Int ::= "Ccallarg" "(" Schedule "," Operands ")" [function() klabel(Ccallarg)]
  syntax Int ::= "#overApproxKara" "(" Int ")" [function() klabel(#overApproxKara)]
  syntax Int ::= "#allBut64th" "(" Int ")" [function() klabel(#allBut64th)]
  syntax Int ::= "#adjustedBitLength" "(" Int "," Int ")" [function() klabel(#adjustedBitLength)]
  syntax Int ::= "#adjustedBitLength" "(" Int ")" [function() klabel(#adjustedBitLengthAux)]
  syntax Bool ::= ScheduleFlag "<<" Schedule ">>" [function()]
  syntax BExp ::= Bool
  syntax BExp ::= "#accountEmpty" "(" Int ")" [klabel(#accountEmpty)]
endmodule


module IELE-INFRASTRUCTURE [org.kframework.attributes.Location(Location(236,1,547,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-INFRASTRUCTURE$SYNTAX
  imports IELE-CONSTANTS
  imports IELE-CONFIGURATION
  rule lookupRegisters(operandList(`%__IELE-COMMON`(#SemanticCastToInt(REG)),#SemanticCastToOperands(OPS)),#SemanticCastToArray(REGS))=>operandList(getInt(`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG))),lookupRegisters(#SemanticCastToOperands(OPS),#SemanticCastToArray(REGS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(371) org.kframework.attributes.Location(Location(371,10,371,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule lookupRegisters(`.List{"operandList"}`(.KList),#SemanticCastToArray(_))=>`.List{"operandList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(372) org.kframework.attributes.Location(Location(372,10,372,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule isKResult(`.List{"operandList"}`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(366) org.kframework.attributes.Location(Location(366,10,366,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `USER_ERROR_IELE-INFRASTRUCTURE`(.KList)=>#token("4","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(344) macro() org.kframework.attributes.Location(Location(344,10,344,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `OUT_OF_GAS_IELE-INFRASTRUCTURE`(.KList)=>#token("5","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(345) macro() org.kframework.attributes.Location(Location(345,10,345,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `OUT_OF_FUNDS_IELE-INFRASTRUCTURE`(.KList)=>#token("7","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(347) macro() org.kframework.attributes.Location(Location(347,10,347,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `FUNC_WRONG_SIG_IELE-INFRASTRUCTURE`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(342) macro() org.kframework.attributes.Location(Location(342,10,342,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `FUNC_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(341) macro() org.kframework.attributes.Location(Location(341,10,341,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `CONTRACT_NOT_FOUND_IELE-INFRASTRUCTURE`(.KList)=>#token("3","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(343) macro() org.kframework.attributes.Location(Location(343,10,343,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `CONTRACT_INVALID_IELE-INFRASTRUCTURE`(.KList)=>#token("9","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(349) macro() org.kframework.attributes.Location(Location(349,10,349,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `CALL_STACK_OVERFLOW_IELE-INFRASTRUCTURE`(.KList)=>#token("8","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(348) macro() org.kframework.attributes.Location(Location(348,10,348,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `ACCT_COLLISION_IELE-INFRASTRUCTURE`(.KList)=>#token("6","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(346) macro() org.kframework.attributes.Location(Location(346,10,346,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),#SemanticCastToInstruction(OP)=>`#gas[_]_IELE-INFRASTRUCTURE`(`#addr?(_)_IELE-INFRASTRUCTURE`(#SemanticCastToInstruction(OP)))~>`#exec__IELE-INFRASTRUCTURE`(`#addr?(_)_IELE-INFRASTRUCTURE`(#SemanticCastToInstruction(OP))),#dots(.KList)) requires isKResult(#SemanticCastToInstruction(OP)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(391) org.kframework.attributes.Location(Location(391,10,391,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `<k>`(#noDots(.KList),#SemanticCastToException(EX)~>``#SemanticCastToInternalOp(_)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(329) org.kframework.attributes.Location(Location(329,10,329,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),#SemanticCastToException(EX)~>``#SemanticCastToInt(_)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(326) org.kframework.attributes.Location(Location(326,10,326,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),#SemanticCastToException(EX)~>``#SemanticCastToInstruction(_)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(327) org.kframework.attributes.Location(Location(327,10,327,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),#SemanticCastToException(EX)~>``#SemanticCastToBlocks(_)=>.K``,#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(328) org.kframework.attributes.Location(Location(328,10,328,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`store_,__IELE-COMMON`(#SemanticCastToOperand(VALUE),#SemanticCastToInt(CELL)))=>`store_,__IELE-COMMON`(#SemanticCastToOperand(VALUE),chop(#SemanticCastToInt(CELL))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(416) org.kframework.attributes.Location(Location(416,10,416,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(VALUE),#SemanticCastToInt(CELL),#SemanticCastToOperand(OFFSET),#SemanticCastToOperand(WIDTH)))=>`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(VALUE),chop(#SemanticCastToInt(CELL)),#SemanticCastToOperand(OFFSET),#SemanticCastToOperand(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(415) org.kframework.attributes.Location(Location(415,10,415,118)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`selfdestruct__IELE-COMMON`(#SemanticCastToInt(W)))=>`selfdestruct__IELE-COMMON`(#addr(#SemanticCastToInt(W))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(409) org.kframework.attributes.Location(Location(409,10,409,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`log__IELE-COMMON`(#SemanticCastToInt(CELL)))=>`log__IELE-COMMON`(chop(#SemanticCastToInt(CELL))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(418) org.kframework.attributes.Location(Location(418,10,418,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`log_,__IELE-COMMON`(#SemanticCastToInt(CELL),#SemanticCastToNonEmptyOperands(ARGS)))=>`log_,__IELE-COMMON`(chop(#SemanticCastToInt(CELL)),#SemanticCastToNonEmptyOperands(ARGS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(419) org.kframework.attributes.Location(Location(419,10,419,100)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=staticcall_at_(_)gaslimit__IELE-COMMON`(#SemanticCastToLValues(REGS1),#SemanticCastToOperand(LABEL),#SemanticCastToInt(W0),#SemanticCastToOperands(REGS2),#SemanticCastToOperand(W1)))=>`_=staticcall_at_(_)gaslimit__IELE-COMMON`(#SemanticCastToLValues(REGS1),#SemanticCastToOperand(LABEL),#addr(#SemanticCastToInt(W0)),#SemanticCastToOperands(REGS2),#SemanticCastToOperand(W1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(411) org.kframework.attributes.Location(Location(411,10,411,137)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=sha3__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(CELL)))=>`_=sha3__IELE-COMMON`(#SemanticCastToLValue(REG),chop(#SemanticCastToInt(CELL))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(417) org.kframework.attributes.Location(Location(417,10,417,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=load__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(CELL)))=>`_=load__IELE-COMMON`(#SemanticCastToLValue(REG),chop(#SemanticCastToInt(CELL))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(414) org.kframework.attributes.Location(Location(414,10,414,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=load_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToInt(CELL),#SemanticCastToOperand(OFFSET),#SemanticCastToOperand(WIDTH)))=>`_=load_,_,__IELE-COMMON`(#SemanticCastToLValue(REG),chop(#SemanticCastToInt(CELL)),#SemanticCastToOperand(OFFSET),#SemanticCastToOperand(WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(413) org.kframework.attributes.Location(Location(413,10,413,116)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToGlobalName(LABEL),#SemanticCastToInt(W0)))=>`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(REG),#SemanticCastToGlobalName(LABEL),#addr(#SemanticCastToInt(W0))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(412) org.kframework.attributes.Location(Location(412,10,412,116)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(#SemanticCastToLValues(REGS1),#SemanticCastToOperand(LABEL),#SemanticCastToInt(W0),#SemanticCastToOperands(REGS2),#SemanticCastToOperand(W1),#SemanticCastToOperand(W2)))=>`_=call_at_(_)send_,gaslimit__IELE-COMMON`(#SemanticCastToLValues(REGS1),#SemanticCastToOperand(LABEL),#addr(#SemanticCastToInt(W0)),#SemanticCastToOperands(REGS2),#SemanticCastToOperand(W1),#SemanticCastToOperand(W2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(410) org.kframework.attributes.Location(Location(410,10,410,141)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(REG),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),operandList(#SemanticCastToInt(W),`.List{"operandList"}`(.KList))))=>`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(REG),`@__IELE-COMMON`(#token("iele.extcodesize","IeleName")),operandList(#addr(#SemanticCastToInt(W)),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(407) org.kframework.attributes.Location(Location(407,10,407,118)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(REG),`@__IELE-COMMON`(#token("iele.balance","IeleName")),operandList(#SemanticCastToInt(W),`.List{"operandList"}`(.KList))))=>`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(REG),`@__IELE-COMMON`(#token("iele.balance","IeleName")),operandList(#addr(#SemanticCastToInt(W)),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(406) org.kframework.attributes.Location(Location(406,10,406,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(REG1),#SemanticCastToLValue(REG2),#SemanticCastToInt(W0),#SemanticCastToOperands(REGS1),#SemanticCastToOperand(W1)))=>`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(REG1),#SemanticCastToLValue(REG2),#addr(#SemanticCastToInt(W0)),#SemanticCastToOperands(REGS1),#SemanticCastToOperand(W1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(408) org.kframework.attributes.Location(Location(408,10,408,130)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#addr?(_)_IELE-INFRASTRUCTURE`(#SemanticCastToInstruction(OP))=>#SemanticCastToInstruction(OP) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(420) org.kframework.attributes.Location(Location(420,10,420,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #regRangeAux(#SemanticCastToInt(_),#token("0","Int"))=>`.List{"lvalueList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(378) org.kframework.attributes.Location(Location(378,10,378,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #regRangeAux(#SemanticCastToInt(N),#token("1","Int"))=>lvalueList(`%__IELE-COMMON`(#SemanticCastToInt(N)),`.List{"lvalueList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(379) org.kframework.attributes.Location(Location(379,10,379,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #regRangeAux(#SemanticCastToInt(N),#SemanticCastToInt(M))=>lvalueList(`%__IELE-COMMON`(#SemanticCastToInt(N)),#regRangeAux(`_+Int_`(#SemanticCastToInt(N),#token("1","Int")),`_-Int__INT-COMMON`(#SemanticCastToInt(M),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(380) org.kframework.attributes.Location(Location(380,10,380,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #regRange(#SemanticCastToInt(N))=>#regRangeAux(#token("0","Int"),#SemanticCastToInt(N)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(377) org.kframework.attributes.Location(Location(377,10,377,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))``~>`#initAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT)),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(453) org.kframework.attributes.Location(Location(453,10,455,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))=>`#exception__IELE-INFRASTRUCTURE`(`OUT_OF_FUNDS_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGFROM),#noDots(.KList))),#dots(.KList))) requires `_>Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(ORIGFROM)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(523) org.kframework.attributes.Location(Location(523,10,529,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT),#SemanticCastToInt(ACCT),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGFROM),#noDots(.KList))),#dots(.KList))) requires `_<=Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(ORIGFROM)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(540) org.kframework.attributes.Location(Location(540,10,546,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#initAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))=>`#exception__IELE-INFRASTRUCTURE`(`ACCT_COLLISION_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<account>`(#noDots(.KList),#cells(#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),#SemanticCastToContract(CODE),#noDots(.KList))),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),`<exists>`(#noDots(.KList),#SemanticCastToBool(EXISTS),#noDots(.KList))),#dots(.KList))) requires `_orBool__BOOL`(`_orBool__BOOL`(#SemanticCastToBool(EXISTS),`_=/=K_`(#SemanticCastToContract(CODE),`#emptyCode_IELE-CONFIGURATION`(.KList))),`_=/=K_`(#SemanticCastToInt(NONCE),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(433) org.kframework.attributes.Location(Location(433,10,441,70)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#initAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(#cells(#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),`#emptyCode_IELE-CONFIGURATION`(.KList),#noDots(.KList))),`<nonce>`(#noDots(.KList),#token("0","Int"),#noDots(.KList))),`<storage>`(#noDots(.KList),#SemanticCastToMap(_)=>`.Map`(.KList),#noDots(.KList))),`<exists>`(#noDots(.KList),#token("false","Bool")=>#token("true","Bool"),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(443) org.kframework.attributes.Location(Location(443,10,451,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#dropWorldState_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<interimStates>`(#noDots(.KList),`ListItem`(#SemanticCastToKItem(_))=>`.List`(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(289) org.kframework.attributes.Location(Location(289,10,289,103)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#dropSubstate_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<substateStack>`(#noDots(.KList),`ListItem`(#SemanticCastToKItem(_))=>`.List`(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(313) org.kframework.attributes.Location(Location(313,10,313,102)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#lookupStorage(#SemanticCastToInt(ACCT),#SemanticCastToInt(INDEX))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE),#noDots(.KList))),#dots(.KList))) requires `_in_keys(_)_MAP`(#SemanticCastToInt(INDEX),#SemanticCastToMap(STORAGE)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(478) org.kframework.attributes.Location(Location(478,10,484,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),operandList(`%__IELE-COMMON`(#SemanticCastToInt(REG)),#SemanticCastToOperands(OPS))=>lookupRegisters(operandList(`%__IELE-COMMON`(#SemanticCastToInt(REG)),#SemanticCastToOperands(OPS)),#SemanticCastToArray(REGS)),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))),`<typeChecking>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(370) org.kframework.attributes.Location(Location(370,10,370,132)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTTO))``~>`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE)),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGFROM),#noDots(.KList))),#dots(.KList))) requires `_andBool_`(`_andBool_`(`_=/=K_`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO)),`notBool_`(`Set:in`(#SemanticCastToInt(ACCTTO),#SemanticCastToSet(ACCTS)))),`_<=Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(ORIGFROM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(531) org.kframework.attributes.Location(Location(531,10,538,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`%__IELE-COMMON`(#SemanticCastToInt(REG))=>`_[_]_ARRAY-SYNTAX`(#SemanticCastToArray(REGS),#SemanticCastToInt(REG)),#dots(.KList)),`<regs>`(#noDots(.KList),#SemanticCastToArray(REGS),#noDots(.KList))),`<typeChecking>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(362) org.kframework.attributes.Location(Location(362,10,362,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#transferFunds____IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(VALUE))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGFROM)=>`_-Int__INT-COMMON`(#SemanticCastToInt(ORIGFROM),#SemanticCastToInt(VALUE)),#noDots(.KList))),#dots(.KList))),`<account>`(#noDots(.KList),#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTTO),#noDots(.KList)),`<balance>`(#noDots(.KList),#SemanticCastToInt(ORIGTO)=>`_+Int_`(#SemanticCastToInt(ORIGTO),#SemanticCastToInt(VALUE)),#noDots(.KList))),`<exists>`(#noDots(.KList),#SemanticCastToBool(_)=>#token("true","Bool"),#noDots(.KList))),#dots(.KList))) requires `_andBool_`(`_=/=K_`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO)),`_<=Int__INT-COMMON`(#SemanticCastToInt(VALUE),#SemanticCastToInt(ORIGFROM))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(509) org.kframework.attributes.Location(Location(509,10,521,65)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#pushSubstate_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<substate>`(#noDots(.KList),#SemanticCastToBag(SUBSTATE),#noDots(.KList))),`<substateStack>`(#noDots(.KList),`.List`(.KList)=>`ListItem`(`<substate>`(#noDots(.KList),#SemanticCastToBag(SUBSTATE),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(301) org.kframework.attributes.Location(Location(301,10,303,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#pushCallStack_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<callFrame>`(#noDots(.KList),#SemanticCastToBag(FRAME),#noDots(.KList))),`<callStack>`(#noDots(.KList),`.List`(.KList)=>`ListItem`(`<callFrame>`(#noDots(.KList),#SemanticCastToBag(FRAME),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(252) org.kframework.attributes.Location(Location(252,10,254,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#popSubstate_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<substate>`(#noDots(.KList),#SemanticCastToBag(_)=>#SemanticCastToBag(SUBSTATE),#noDots(.KList))),`<substateStack>`(#noDots(.KList),`ListItem`(`<substate>`(#noDots(.KList),#SemanticCastToBag(SUBSTATE),#noDots(.KList)))=>`.List`(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(307) org.kframework.attributes.Location(Location(307,10,309,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#popCallStack_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<callFrame>`(#noDots(.KList),#SemanticCastToBag(_)=>#SemanticCastToBag(FRAME),#noDots(.KList))),`<callStack>`(#noDots(.KList),`ListItem`(`<callFrame>`(#noDots(.KList),#SemanticCastToBag(FRAME),#noDots(.KList)))=>`.List`(.KList),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(258) org.kframework.attributes.Location(Location(258,10,260,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#pushWorldState_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))),`<accounts>`(#noDots(.KList),#SemanticCastToBag(ACCTDATA),#noDots(.KList))),`<interimStates>`(#noDots(.KList),`.List`(.KList)=>`ListItem`(`{_|_}_IELE-INFRASTRUCTURE`(`<accounts>`(#noDots(.KList),#SemanticCastToBag(ACCTDATA),#noDots(.KList)),#SemanticCastToSet(ACCTS))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(275) org.kframework.attributes.Location(Location(275,10,278,111)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`#popWorldState_IELE-INFRASTRUCTURE`(.KList)=>.K,#dots(.KList)),`<interimStates>`(#noDots(.KList),`ListItem`(`{_|_}_IELE-INFRASTRUCTURE`(`<accounts>`(#noDots(.KList),#SemanticCastToBag(ACCTDATA),#noDots(.KList)),#SemanticCastToSet(ACCTS)))=>`.List`(.KList),#dots(.KList))),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(_)=>#SemanticCastToSet(ACCTS),#noDots(.KList))),`<accounts>`(#noDots(.KList),#SemanticCastToBag(_)=>#SemanticCastToBag(ACCTDATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(282) org.kframework.attributes.Location(Location(282,10,285,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( TODO: investigate if we will support this,[org.kframework.attributes.Location(Location(518,41,518,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(376,2,376,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------------------------------,[org.kframework.attributes.Location(Location(405,2,405,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------------------------------,[org.kframework.attributes.Location(Location(325,2,325,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------------------------------,[org.kframework.attributes.Location(Location(369,2,369,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------------------,[org.kframework.attributes.Location(Location(508,2,508,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------------------,[org.kframework.attributes.Location(Location(477,2,477,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------------------,[org.kframework.attributes.Location(Location(390,2,390,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------------------,[org.kframework.attributes.Location(Location(271,2,271,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------------,[org.kframework.attributes.Location(Location(501,2,501,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------,[org.kframework.attributes.Location(Location(432,2,432,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------------,[org.kframework.attributes.Location(Location(288,2,288,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------------,[org.kframework.attributes.Location(Location(274,2,274,44)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------,[org.kframework.attributes.Location(Location(281,2,281,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------,[org.kframework.attributes.Location(Location(251,2,251,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------,[org.kframework.attributes.Location(Location(312,2,312,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------,[org.kframework.attributes.Location(Location(300,2,300,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------,[org.kframework.attributes.Location(Location(257,2,257,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------,[org.kframework.attributes.Location(Location(340,2,340,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------,[org.kframework.attributes.Location(Location(306,2,306,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------,[org.kframework.attributes.Location(Location(361,2,361,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------,[org.kframework.attributes.Location(Location(365,2,365,28)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
endmodule


module IELE-INFRASTRUCTURE$SYNTAX [org.kframework.attributes.Location(Location(236,1,547,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-CONSTANTS$SYNTAX
  imports IELE-CONFIGURATION$SYNTAX
  syntax NonEmptyInts ::= "lookupRegisters" "(" Operands "," Array ")" [function() klabel(lookupRegisters)]
  syntax LValues ::= "#regRange" "(" Int "," Int ")" [function() klabel(#regRangeAux)]
  syntax LValues ::= "#regRange" "(" Int ")" [function() klabel(#regRange)]
  syntax KResult ::= JumpInst
  syntax KResult ::= Ints
  syntax KResult ::= Constant
  syntax KResult ::= AssignInst
  syntax KItem ::= Exception
  syntax InternalOp ::= "#transferFunds" Int Int Int
  syntax InternalOp ::= "#pushWorldState"
  syntax InternalOp ::= "#pushSubstate"
  syntax InternalOp ::= "#pushCallStack"
  syntax InternalOp ::= "#popWorldState"
  syntax InternalOp ::= "#popSubstate"
  syntax InternalOp ::= "#popCallStack"
  syntax InternalOp ::= "#lookupStorage" "(" Int "," Int ")" [klabel(#lookupStorage)]
  syntax InternalOp ::= "#lookupCode" "(" Int ")" [klabel(#lookupCode)]
  syntax InternalOp ::= "#loadAccount" Int
  syntax InternalOp ::= "#initAccount" Int
  syntax InternalOp ::= "#gas" "[" Instruction "]"
  syntax InternalOp ::= "#exec" Instruction
  syntax InternalOp ::= "#dropWorldState"
  syntax InternalOp ::= "#dropSubstate"
  syntax Int ::= "USER_ERROR"
  syntax Int ::= "OUT_OF_GAS"
  syntax Int ::= "OUT_OF_FUNDS"
  syntax Int ::= "FUNC_WRONG_SIG"
  syntax Int ::= "FUNC_NOT_FOUND"
  syntax Int ::= "CONTRACT_NOT_FOUND"
  syntax Int ::= "CONTRACT_INVALID"
  syntax Int ::= "CALL_STACK_OVERFLOW"
  syntax Int ::= "ACCT_COLLISION"
  syntax Instruction ::= "#addr?" "(" Instruction ")" [function()]
  syntax Exception ::= "#revert" Int
  syntax Exception ::= "#exception" Int
  syntax Exception ::= "#end"
  syntax Accounts ::= "{" AccountsCell "|" Set "}"
endmodule


module IELE-NODE [org.kframework.attributes.Location(Location(2,1,179,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))]
  imports K-REFLECTION
  imports IELE-NODE$SYNTAX
  imports IELE-BINARY
  imports IELE
  imports COLLECTIONS
  rule unparseByteStack(#SemanticCastToBytes(B))=>`Bytes2String`(#SemanticCastToBytes(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(151) org.kframework.attributes.Location(Location(151,10,151,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule extractConfig(`<generatedTop>`(#dots(.KList),#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(OUT),#noDots(.KList))),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))),`<refund>`(#noDots(.KList),#SemanticCastToInt(REFUND),#noDots(.KList))),`<k>`(#noDots(.KList),#SemanticCastToInt(STATUS),#noDots(.KList))),`<selfDestruct>`(#noDots(.KList),#SemanticCastToSet(SD),#noDots(.KList))),`<logData>`(#noDots(.KList),#SemanticCastToList(LOGS),#noDots(.KList))),`<accounts>`(#noDots(.KList),#SemanticCastToBag(ACCTS),#noDots(.KList))),#dots(.KList)))=>vmResult(#toList(#SemanticCastToInts(OUT)),ceilDiv(#SemanticCastToInt(GAVAIL),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(REFUND),#SemanticCastToInt(STATUS),`Set2List`(#SemanticCastToSet(SD)),#SemanticCastToList(LOGS),`<accounts>`(#noDots(.KList),#SemanticCastToBag(ACCTS),#noDots(.KList)),`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(156) org.kframework.attributes.Location(Location(156,10,177,22)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `ListToInts`(`_List_`(`ListItem`(#SemanticCastToInt(I)),#SemanticCastToList(L)))=>operandList(#SemanticCastToInt(I),`ListToInts`(#SemanticCastToList(L))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(137) org.kframework.attributes.Location(Location(137,10,137,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `ListToInts`(`.List`(.KList))=>`.List{"operandList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(136) org.kframework.attributes.Location(Location(136,10,136,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `JSONListToInts`(`_,__IELE-DATA`(#SemanticCastToString(S),#SemanticCastToJSONList(L)))=>operandList(`Bytes2Int`(`String2Bytes`(#SemanticCastToString(S)),bigEndianBytes(.KList),signedBytes(.KList)),`JSONListToInts`(#SemanticCastToJSONList(L))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(142) org.kframework.attributes.Location(Location(142,10,142,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `JSONListToInts`(`.List{"_,__IELE-DATA"}`(.KList))=>`.List{"operandList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(141) org.kframework.attributes.Location(Location(141,10,141,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.blockhash","IeleName")),operandList(#SemanticCastToInt(N),`.List{"operandList"}`(.KList))))=>`#load___IELE`(#SemanticCastToLValue(REG),#token("0","Int")) requires `_orBool__BOOL`(`_<Int__INT-COMMON`(#SemanticCastToInt(N),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(N),#token("256","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(53) org.kframework.attributes.Location(Location(53,10,54,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#exec__IELE-INFRASTRUCTURE`(`_=call_(_)_IELE-COMMON`(lvalueList(#SemanticCastToLValue(REG),`.List{"lvalueList"}`(.KList)),`@__IELE-COMMON`(#token("iele.blockhash","IeleName")),operandList(#SemanticCastToInt(N),`.List{"operandList"}`(.KList))))=>`#load___IELE`(#SemanticCastToLValue(REG),#getBlockhash(#SemanticCastToInt(N))) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(N),#token("0","Int")),`_<Int__INT-COMMON`(#SemanticCastToInt(N),#token("256","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(51) org.kframework.attributes.Location(Location(51,10,52,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #trimAccounts(`.List`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(120) org.kframework.attributes.Location(Location(120,10,120,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #toList(operandList(#SemanticCastToInt(I),#SemanticCastToInts(L)))=>`_List_`(`ListItem`(#SemanticCastToInt(I)),#toList(#SemanticCastToInts(L))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(148) org.kframework.attributes.Location(Location(148,10,148,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #toList(`.List{"operandList"}`(.KList))=>`.List`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(147) org.kframework.attributes.Location(Location(147,10,147,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),``.K=>`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCTFROM))``~>runVM(#SemanticCastToBool(_),#SemanticCastToInt(_),#SemanticCastToInt(ACCTFROM),#SemanticCastToString(_),#SemanticCastToList(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToInt(_),#SemanticCastToString(_)),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(58) org.kframework.attributes.Location(Location(58,10,59,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#trimAccounts_IELE-NODE`(.KList)=>#trimAccounts(`Set2List`(#SemanticCastToSet(ACCTS))),#dots(.KList)),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(117) org.kframework.attributes.Location(Location(117,10,118,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#revert__IELE-INFRASTRUCTURE`(#SemanticCastToInt(OUT))~>`#endVM_IELE-NODE`(.KList)=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#popWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#popSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>#SemanticCastToInt(OUT),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(108) org.kframework.attributes.Location(Location(108,10,109,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exception__IELE-INFRASTRUCTURE`(#SemanticCastToInt(STATUS))~>`#endVM_IELE-NODE`(.KList)=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#popWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#popSubstate_IELE-INFRASTRUCTURE`(.KList)~>#SemanticCastToInt(STATUS),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>`.List{"operandList"}`(.KList),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(106) org.kframework.attributes.Location(Location(106,10,107,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#end_IELE-INFRASTRUCTURE`(.KList)~>`#endVM_IELE-NODE`(.KList)=>`#popCallStack_IELE-INFRASTRUCTURE`(.KList)~>`#dropWorldState_IELE-INFRASTRUCTURE`(.KList)~>`#dropSubstate_IELE-INFRASTRUCTURE`(.KList)~>`#refund__IELE`(#SemanticCastToInt(GAVAIL))~>#token("0","Int"),#dots(.KList)),`<gas>`(#noDots(.KList),#SemanticCastToInt(GAVAIL),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(111) org.kframework.attributes.Location(Location(111,10,112,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#trimAccounts(`_List_`(`ListItem`(#SemanticCastToInt(ACCT))=>`.List`(.KList),#SemanticCastToList(ACCTS))),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<exists>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(127) org.kframework.attributes.Location(Location(127,10,132,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#trimAccounts(`_List_`(`ListItem`(#SemanticCastToInt(ACCT))=>`.List`(.KList),#SemanticCastToList(ACCTS))),#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<exists>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList))),#dots(.KList))=>#cells(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(121) org.kframework.attributes.Location(Location(121,10,126,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#lookupStorage(#SemanticCastToInt(ACCT),#SemanticCastToInt(INDEX))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<storage>`(#noDots(.KList),#SemanticCastToMap(STORAGE)=>`_[_<-_]_MAP`(#SemanticCastToMap(STORAGE),#SemanticCastToInt(INDEX),#getStorageData(#SemanticCastToInt(ACCT),#SemanticCastToInt(INDEX))),#noDots(.KList))),#dots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToInt(INDEX),#SemanticCastToMap(STORAGE))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(32) org.kframework.attributes.Location(Location(32,10,38,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#lookupCode(#SemanticCastToInt(ACCT))=>.K,#dots(.KList)),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<code>`(#noDots(.KList),`.List{"contractDefinitionList"}`(.KList)=>#dasmContract(#parseByteStackRaw(#getCode(#SemanticCastToInt(ACCT))),#token("Main","IeleName")),#noDots(.KList))),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(42) org.kframework.attributes.Location(Location(42,10,47,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#loadAccount__IELE-INFRASTRUCTURE`(#SemanticCastToInt(ACCT))=>.K,#dots(.KList)),`<activeAccounts>`(#noDots(.KList),`_Set_`(#SemanticCastToSet(ACCTS),`.Set`(.KList)=>`SetItem`(#SemanticCastToInt(ACCT))),#noDots(.KList))),`<accounts>`(#noDots(.KList),#cells(.KList)=>`<account>`(#noDots(.KList),#cells(#cells(#cells(#cells(#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCT),#noDots(.KList)),`<balance>`(#noDots(.KList),#getBalance(#SemanticCastToInt(ACCT)),#noDots(.KList))),`<code>`(#noDots(.KList),`#if_#then_#else_#fi_K-EQUAL`(#isCodeEmpty(#SemanticCastToInt(ACCT)),`#emptyCode_IELE-CONFIGURATION`(.KList),`.List{"contractDefinitionList"}`(.KList)),#noDots(.KList))),`<storage>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList))),`<nonce>`(#noDots(.KList),#getNonce(#SemanticCastToInt(ACCT)),#noDots(.KList))),`<exists>`(#noDots(.KList),#accountExists(#SemanticCastToInt(ACCT)),#noDots(.KList))),#noDots(.KList)),#dots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToInt(ACCT),#SemanticCastToSet(ACCTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(13) org.kframework.attributes.Location(Location(13,10,28,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),runVM(#token("false","Bool"),#SemanticCastToInt(ACCTTO),#SemanticCastToInt(ACCTFROM),#SemanticCastToString(_),#SemanticCastToList(ARGS),#SemanticCastToInt(VALUE),#SemanticCastToInt(GPRICE),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(CB),#SemanticCastToInt(DIFF),#SemanticCastToInt(NUMB),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(TS),#SemanticCastToString(FUNC))=>`#call________IELE`(#SemanticCastToInt(ACCTFROM),#SemanticCastToInt(ACCTTO),`@__IELE-COMMON`(`String2IeleName`(#SemanticCastToString(FUNC))),`_*Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(VALUE),`ListToInts`(#SemanticCastToList(ARGS)),#token("false","Bool"))~>`#endVM_IELE-NODE`(.KList)~>`#trimAccounts_IELE-NODE`(.KList),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<gasPrice>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(GPRICE),#noDots(.KList))),`<origin>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("-1","Int"),#noDots(.KList))),`<beneficiary>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(CB),#noDots(.KList))),`<difficulty>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(DIFF),#noDots(.KList))),`<number>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(NUMB),#noDots(.KList))),`<gasLimit>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(GLIMIT),#noDots(.KList))),`<timestamp>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(TS),#noDots(.KList))),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `Set:in`(#SemanticCastToInt(ACCTFROM),#SemanticCastToSet(ACCTS)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(86) org.kframework.attributes.Location(Location(86,10,102,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(#cells(`<k>`(#noDots(.KList),runVM(#token("true","Bool"),#SemanticCastToInt(_),#SemanticCastToInt(ACCTFROM),#SemanticCastToString(CODESTR),#SemanticCastToList(ARGS),#SemanticCastToInt(VALUE),#SemanticCastToInt(GPRICE),#SemanticCastToInt(GAVAIL),#SemanticCastToInt(CB),#SemanticCastToInt(DIFF),#SemanticCastToInt(NUMB),#SemanticCastToInt(GLIMIT),#SemanticCastToInt(TS),#SemanticCastToString(_))=>#fun2(#SemanticCastToWordStack(CODE)=>#fun2(#SemanticCastToContract(CONTRACT)=>`#checkContract__IELE`(#SemanticCastToContract(CONTRACT))~>`#create_______IELE`(#SemanticCastToInt(ACCTFROM),#newAddr(#SemanticCastToInt(ACCTFROM),`_-Int__INT-COMMON`(#SemanticCastToInt(NONCE),#token("1","Int"))),`_*Int__INT-COMMON`(#SemanticCastToInt(GAVAIL),`_<_>_IELE-GAS`(`Sgasdivisor_IELE-GAS`(.KList),#SemanticCastToSchedule(SCHED))),#SemanticCastToInt(VALUE),#SemanticCastToContract(CONTRACT),`ListToInts`(#SemanticCastToList(ARGS)))~>`#codeDeposit_______IELE`(#newAddr(#SemanticCastToInt(ACCTFROM),`_-Int__INT-COMMON`(#SemanticCastToInt(NONCE),#token("1","Int"))),#sizeWordStack(#SemanticCastToWordStack(CODE)),#SemanticCastToContract(CONTRACT),`%__IELE-COMMON`(#token("0","Int")),`%__IELE-COMMON`(#token("1","Int")),#token("true","Bool"))~>`#trimAccounts_IELE-NODE`(.KList),`#if_#then_#else_#fi_K-EQUAL`(#isValidContract(#SemanticCastToWordStack(CODE)),#dasmContract(#SemanticCastToWordStack(CODE),#token("Main","IeleName")),`#illFormed_IELE`(.KList))),#parseByteStackRaw(#SemanticCastToString(CODESTR))),#dots(.KList)),`<schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))),`<gasPrice>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(GPRICE),#noDots(.KList))),`<origin>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(ACCTFROM),#noDots(.KList))),`<callDepth>`(#noDots(.KList),#SemanticCastToInt(_)=>#token("-1","Int"),#noDots(.KList))),`<beneficiary>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(CB),#noDots(.KList))),`<difficulty>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(DIFF),#noDots(.KList))),`<number>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(NUMB),#noDots(.KList))),`<gasLimit>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(GLIMIT),#noDots(.KList))),`<timestamp>`(#noDots(.KList),#SemanticCastToInt(_)=>#SemanticCastToInt(TS),#noDots(.KList))),`<account>`(#noDots(.KList),#cells(`<acctID>`(#noDots(.KList),#SemanticCastToInt(ACCTFROM),#noDots(.KList)),`<nonce>`(#noDots(.KList),#SemanticCastToInt(NONCE),#noDots(.KList))),#dots(.KList))),`<activeAccounts>`(#noDots(.KList),#SemanticCastToSet(ACCTS),#noDots(.KList))) requires `Set:in`(#SemanticCastToInt(ACCTFROM),#SemanticCastToSet(ACCTS)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(61) org.kframework.attributes.Location(Location(61,10,84,33)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #SemanticCastToInt(I)~>`#trimAccounts_IELE-NODE`(.KList)=>`#trimAccounts_IELE-NODE`(.KList)~>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(116) org.kframework.attributes.Location(Location(116,10,116,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( --------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(31,2,31,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( ---------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(12,2,12,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( -----------------------------------------------------------------------,[org.kframework.attributes.Location(Location(50,2,50,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( --------------------------------------------------------------------,[org.kframework.attributes.Location(Location(140,2,140,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( --------------------------------------------------------------------,[org.kframework.attributes.Location(Location(135,2,135,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( ----------------------------------------------------------------,[org.kframework.attributes.Location(Location(41,2,41,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( ----------------------------------------------------------,[org.kframework.attributes.Location(Location(155,2,155,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( ----------------------------------------,[org.kframework.attributes.Location(Location(146,2,146,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
  ModuleComment( -------------------------------,[org.kframework.attributes.Location(Location(105,2,105,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))])
endmodule


module IELE-NODE$SYNTAX [org.kframework.attributes.Location(Location(2,1,179,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-node.k))]
  imports K-REFLECTION$SYNTAX
  imports IELE-BINARY$SYNTAX
  imports IELE$SYNTAX
  imports COLLECTIONS$SYNTAX
  syntax String ::= "unparseByteStack" "(" Bytes ")" [function() klabel(unparseByteStack) symbol()]
  syntax String ::= "#getCode" "(" Int ")" [function() hook(BLOCKCHAIN.getCode) klabel(#getCode)]
  syntax List ::= "#toList" "(" Ints ")" [function() klabel(#toList)]
  syntax KItem ::= "vmResult" "(" List "," Int "," Int "," Int "," List "," List "," AccountsCell "," List ")" [klabel(vmResult)]
  syntax KItem ::= "extractConfig" "(" GeneratedTopCell ")" [function() klabel(extractConfig) symbol()]
  syntax KItem ::= "#trimAccounts" "(" List ")" [klabel(#trimAccounts)]
  syntax KItem ::= "#trimAccounts"
  syntax Ints ::= "#toInts" "(" List ")" [function() klabel(ListToInts) symbol()]
  syntax Ints ::= "#toInts" "(" JSONList ")" [function() klabel(JSONListToInts)]
  syntax Int ::= "#getStorageData" "(" Int "," Int ")" [function() hook(BLOCKCHAIN.getStorageData) klabel(#getStorageData)]
  syntax Int ::= "#getNonce" "(" Int ")" [function() hook(BLOCKCHAIN.getNonce) klabel(#getNonce)]
  syntax Int ::= "#getBlockhash" "(" Int ")" [function() hook(BLOCKCHAIN.getBlockhash) klabel(#getBlockhash)]
  syntax Int ::= "#getBalance" "(" Int ")" [function() hook(BLOCKCHAIN.getBalance) klabel(#getBalance)]
  syntax IELESimulation ::= "runVM" "(" Bool "," Int "," Int "," String "," List "," Int "," Int "," Int "," Int "," Int "," Int "," Int "," Int "," String ")" [klabel(runVM)]
  syntax IELECommand ::= "#endVM"
  syntax Bool ::= "#isCodeEmpty" "(" Int ")" [function() hook(BLOCKCHAIN.isCodeEmpty) klabel(#isCodeEmpty)]
  syntax Bool ::= "#accountExists" "(" Int ")" [function() hook(BLOCKCHAIN.accountExists) klabel(#accountExists)]
endmodule


module IELE-PRECOMPILED [org.kframework.attributes.Location(Location(1566,1,1721,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-PRECOMPILED$SYNTAX
  imports IELE-INFRASTRUCTURE
  imports IELE-DATA
  imports IELE-CONFIGURATION
  rule ``.K=>`#checkPoint_IELE-PRECOMPILED`(.KList)``~>#ecpairing(`_List_`(`.List`(.KList)=>`ListItem`(`(_,_)_KRYPTO`(`Bytes2Int`(bytesRange(#SemanticCastToBytes(G1),#token("0","Int"),#token("32","Int")),bigEndianBytes(.KList),unsignedBytes(.KList)),`Bytes2Int`(bytesRange(#SemanticCastToBytes(G1),#token("32","Int"),#token("32","Int")),bigEndianBytes(.KList),unsignedBytes(.KList)))),#SemanticCastToList(_)),`_List_`(`.List`(.KList)=>`ListItem`(`(_x_,_x_)_KRYPTO`(`Bytes2Int`(bytesRange(#SemanticCastToBytes(G2),#token("32","Int"),#token("32","Int")),bigEndianBytes(.KList),unsignedBytes(.KList)),`Bytes2Int`(bytesRange(#SemanticCastToBytes(G2),#token("0","Int"),#token("32","Int")),bigEndianBytes(.KList),unsignedBytes(.KList)),`Bytes2Int`(bytesRange(#SemanticCastToBytes(G2),#token("96","Int"),#token("32","Int")),bigEndianBytes(.KList),unsignedBytes(.KList)),`Bytes2Int`(bytesRange(#SemanticCastToBytes(G2),#token("64","Int"),#token("32","Int")),bigEndianBytes(.KList),unsignedBytes(.KList)))),#SemanticCastToList(_)),#SemanticCastToBytes(G1)=>bytesRange(#SemanticCastToBytes(G1),#token("64","Int"),lengthBytes(#SemanticCastToBytes(G1))),#SemanticCastToBytes(G2)=>bytesRange(#SemanticCastToBytes(G2),#token("128","Int"),lengthBytes(#SemanticCastToBytes(G2))),#SemanticCastToInt(LEN)=>`_-Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("1","Int"))) requires `_>Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1710) org.kframework.attributes.Location(Location(1710,10,1711,26)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `` `#checkPoint_IELE-PRECOMPILED`(.KList)=>.K``~>#ecpairing(`_List_`(`ListItem`(#SemanticCastToG1Point(AK)),#SemanticCastToList(_)),`_List_`(`ListItem`(#SemanticCastToG2Point(BK)),#SemanticCastToList(_)),#SemanticCastToBytes(_),#SemanticCastToBytes(_),#SemanticCastToInt(_)) requires `_andBool_`(isValidPoint(#SemanticCastToG1Point(AK)),isValidG2Point(#SemanticCastToG2Point(BK))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1717) org.kframework.attributes.Location(Location(1717,10,1718,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#precompiled_IELE-PRECOMPILED`(.KList)=>`<program>`(#noDots(.KList),#cells(#cells(#cells(`<functions>`(#noDots(.KList),#cells(#cells(#cells(#cells(#cells(#cells(`<function>`(#noDots(.KList),#cells(#cells(`<funcId>`(#noDots(.KList),#token("iele.ecrec","IeleName"),#noDots(.KList)),`<instructions>`(#noDots(.KList),`___IELE-COMMON`(instructionList(`ECREC_IELE-PRECOMPILED`(.KList),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#noDots(.KList))),`<nparams>`(#noDots(.KList),#token("4","Int"),#noDots(.KList))),#dots(.KList)),`<function>`(#noDots(.KList),#cells(#cells(`<funcId>`(#noDots(.KList),#token("iele.sha256","IeleName"),#noDots(.KList)),`<instructions>`(#noDots(.KList),`___IELE-COMMON`(instructionList(`SHA256_IELE-PRECOMPILED`(.KList),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#noDots(.KList))),`<nparams>`(#noDots(.KList),#token("2","Int"),#noDots(.KList))),#dots(.KList))),`<function>`(#noDots(.KList),#cells(#cells(`<funcId>`(#noDots(.KList),#token("iele.rip160","IeleName"),#noDots(.KList)),`<instructions>`(#noDots(.KList),`___IELE-COMMON`(instructionList(`RIP160_IELE-PRECOMPILED`(.KList),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#noDots(.KList))),`<nparams>`(#noDots(.KList),#token("2","Int"),#noDots(.KList))),#dots(.KList))),`<function>`(#noDots(.KList),#cells(#cells(`<funcId>`(#noDots(.KList),#token("iele.id","IeleName"),#noDots(.KList)),`<instructions>`(#noDots(.KList),`___IELE-COMMON`(instructionList(`ID_IELE-PRECOMPILED`(.KList),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#noDots(.KList))),`<nparams>`(#noDots(.KList),#token("1","Int"),#noDots(.KList))),#dots(.KList))),`<function>`(#noDots(.KList),#cells(#cells(`<funcId>`(#noDots(.KList),#token("iele.ecadd","IeleName"),#noDots(.KList)),`<instructions>`(#noDots(.KList),`___IELE-COMMON`(instructionList(`ECADD_IELE-PRECOMPILED`(.KList),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#noDots(.KList))),`<nparams>`(#noDots(.KList),#token("4","Int"),#noDots(.KList))),#dots(.KList))),`<function>`(#noDots(.KList),#cells(#cells(`<funcId>`(#noDots(.KList),#token("iele.ecmul","IeleName"),#noDots(.KList)),`<instructions>`(#noDots(.KList),`___IELE-COMMON`(instructionList(`ECMUL_IELE-PRECOMPILED`(.KList),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#noDots(.KList))),`<nparams>`(#noDots(.KList),#token("3","Int"),#noDots(.KList))),#dots(.KList))),`<function>`(#noDots(.KList),#cells(#cells(`<funcId>`(#noDots(.KList),#token("iele.ecpairing","IeleName"),#noDots(.KList)),`<instructions>`(#noDots(.KList),`___IELE-COMMON`(instructionList(`ECPAIRING_IELE-PRECOMPILED`(.KList),`.List{"instructionList"}`(.KList)),`.List{"labeledBlockList"}`(.KList)),#noDots(.KList))),`<nparams>`(#noDots(.KList),#token("3","Int"),#noDots(.KList))),#dots(.KList))),#noDots(.KList)),`<funcIds>`(#noDots(.KList),`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`SetItem`(#token("iele.ecrec","IeleName")),`SetItem`(#token("iele.sha256","IeleName"))),`SetItem`(#token("iele.rip160","IeleName"))),`SetItem`(#token("iele.id","IeleName"))),`SetItem`(#token("iele.ecadd","IeleName"))),`SetItem`(#token("iele.ecmul","IeleName"))),`SetItem`(#token("iele.ecpairing","IeleName"))),#noDots(.KList))),`<exported>`(#noDots(.KList),`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`SetItem`(#token("iele.ecrec","IeleName")),`SetItem`(#token("iele.sha256","IeleName"))),`SetItem`(#token("iele.rip160","IeleName"))),`SetItem`(#token("iele.id","IeleName"))),`SetItem`(#token("iele.ecadd","IeleName"))),`SetItem`(#token("iele.ecmul","IeleName"))),`SetItem`(#token("iele.ecpairing","IeleName"))),#noDots(.KList))),`<funcLabels>`(#noDots(.KList),`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(#token("1","Int"),#token("iele.ecrec","IeleName")),`_|->_`(#token("2","Int"),#token("iele.sha256","IeleName"))),`_|->_`(#token("3","Int"),#token("iele.rip160","IeleName"))),`_|->_`(#token("4","Int"),#token("iele.id","IeleName"))),`_|->_`(#token("5","Int"),#token("iele.ecadd","IeleName"))),`_|->_`(#token("6","Int"),#token("iele.ecmul","IeleName"))),`_|->_`(#token("7","Int"),#token("iele.ecpairing","IeleName"))),#noDots(.KList))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1577) org.kframework.attributes.Location(Location(1577,10,1616,20)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#precompiledAccount_IELE-PRECOMPILED`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1573) org.kframework.attributes.Location(Location(1573,10,1573,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#checkPoint_IELE-PRECOMPILED`(.KList)~>#ecpairing(`_List_`(`ListItem`(#SemanticCastToG1Point(AK)),#SemanticCastToList(_)),`_List_`(`ListItem`(#SemanticCastToG2Point(BK)),#SemanticCastToList(_)),#SemanticCastToBytes(_),#SemanticCastToBytes(_),#SemanticCastToInt(_))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)) requires `_orBool__BOOL`(`notBool_`(isValidPoint(#SemanticCastToG1Point(AK))),`notBool_`(isValidG2Point(#SemanticCastToG2Point(BK)))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1719) org.kframework.attributes.Location(Location(1719,10,1720,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #point(`(_,_)_KRYPTO`(#SemanticCastToInt(X),#SemanticCastToInt(Y)))=>operandList(#SemanticCastToInt(X),operandList(#SemanticCastToInt(Y),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1701) org.kframework.attributes.Location(Location(1701,10,1701,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #ecrec(`.Account_IELE-DATA`(.KList))=>operandList(#token("-1","Int"),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1644) org.kframework.attributes.Location(Location(1644,10,1644,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #ecrec(#SemanticCastToInt(N))=>operandList(#SemanticCastToInt(N),`.List{"operandList"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1645) org.kframework.attributes.Location(Location(1645,10,1645,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #ecmul(#SemanticCastToG1Point(P),#SemanticCastToInt(S))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)) requires `notBool_`(isValidPoint(#SemanticCastToG1Point(P))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1694) org.kframework.attributes.Location(Location(1694,10,1695,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #ecadd(#SemanticCastToG1Point(P1),#SemanticCastToG1Point(P2))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)) requires `_orBool__BOOL`(`notBool_`(isValidPoint(#SemanticCastToG1Point(P1))),`notBool_`(isValidPoint(#SemanticCastToG1Point(P2)))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1682) org.kframework.attributes.Location(Location(1682,10,1683,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`SHA256_IELE-PRECOMPILED`(.KList))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),operandList(#SemanticCastToInt(DATA),`.List{"operandList"}`(.KList))),#noDots(.KList))) requires `notBool_`(`_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(DATA),#token("0","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1654) org.kframework.attributes.Location(Location(1654,10,1656,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`RIP160_IELE-PRECOMPILED`(.KList))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),operandList(#SemanticCastToInt(DATA),`.List{"operandList"}`(.KList))),#noDots(.KList))) requires `notBool_`(`_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(DATA),#token("0","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1665) org.kframework.attributes.Location(Location(1665,10,1667,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ECREC_IELE-PRECOMPILED`(.KList))=>`#exception__IELE-INFRASTRUCTURE`(`USER_ERROR_IELE-INFRASTRUCTURE`(.KList)),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(HASH),operandList(#SemanticCastToInt(V),operandList(#SemanticCastToInt(R),operandList(#SemanticCastToInt(S),`.List{"operandList"}`(.KList))))),#noDots(.KList))) requires `notBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(HASH),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(V),#token("0","Int"))),`_>=Int__INT-COMMON`(#SemanticCastToInt(R),#token("0","Int"))),`_>=Int__INT-COMMON`(#SemanticCastToInt(S),#token("0","Int")))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1638) org.kframework.attributes.Location(Location(1638,10,1640,95)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ECPAIRING_IELE-PRECOMPILED`(.KList))=>#ecpairing(`.List`(.KList),`.List`(.KList),`Int2Bytes`(`_*Int__INT-COMMON`(chop(#SemanticCastToInt(LEN)),#token("64","Int")),#SemanticCastToInt(G1),littleEndianBytes(.KList)),`Int2Bytes`(`_*Int__INT-COMMON`(chop(#SemanticCastToInt(LEN)),#token("128","Int")),#SemanticCastToInt(G2),littleEndianBytes(.KList)),#SemanticCastToInt(LEN)),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),operandList(#SemanticCastToInt(G1),operandList(#SemanticCastToInt(G2),`.List{"operandList"}`(.KList)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1705) org.kframework.attributes.Location(Location(1705,10,1706,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ECMUL_IELE-PRECOMPILED`(.KList))=>#ecmul(`(_,_)_KRYPTO`(#SemanticCastToInt(X),#SemanticCastToInt(Y)),#SemanticCastToInt(S)),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(X),operandList(#SemanticCastToInt(Y),operandList(#SemanticCastToInt(S),`.List{"operandList"}`(.KList)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1689) org.kframework.attributes.Location(Location(1689,10,1690,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ECADD_IELE-PRECOMPILED`(.KList))=>#ecadd(`(_,_)_KRYPTO`(#SemanticCastToInt(X1),#SemanticCastToInt(Y1)),`(_,_)_KRYPTO`(#SemanticCastToInt(X2),#SemanticCastToInt(Y2))),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(X1),operandList(#SemanticCastToInt(Y1),operandList(#SemanticCastToInt(X2),operandList(#SemanticCastToInt(Y2),`.List{"operandList"}`(.KList))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1677) org.kframework.attributes.Location(Location(1677,10,1678,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#ecpairing(#SemanticCastToList(A),#SemanticCastToList(B),#SemanticCastToBytes(_),#SemanticCastToBytes(_),#token("0","Int"))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>operandList(bool2Word(`BN128AtePairing`(#SemanticCastToList(A),#SemanticCastToList(B))),`.List{"operandList"}`(.KList)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1712) org.kframework.attributes.Location(Location(1712,10,1713,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#ecmul(#SemanticCastToG1Point(P),#SemanticCastToInt(S))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>#point(`BN128Mul`(#SemanticCastToG1Point(P),#SemanticCastToInt(S))),#noDots(.KList))) requires isValidPoint(#SemanticCastToG1Point(P)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1696) org.kframework.attributes.Location(Location(1696,10,1697,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),#ecadd(#SemanticCastToG1Point(P1),#SemanticCastToG1Point(P2))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>#point(`BN128Add`(#SemanticCastToG1Point(P1),#SemanticCastToG1Point(P2))),#noDots(.KList))) requires `_andBool_`(isValidPoint(#SemanticCastToG1Point(P1)),isValidPoint(#SemanticCastToG1Point(P2))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1684) org.kframework.attributes.Location(Location(1684,10,1685,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`SHA256_IELE-PRECOMPILED`(.KList))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),operandList(#SemanticCastToInt(DATA),`.List{"operandList"}`(.KList))),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>operandList(#parseHexWord(`Sha256`(`Bytes2String`(`Int2Bytes`(#SemanticCastToInt(LEN),#SemanticCastToInt(DATA),bigEndianBytes(.KList))))),`.List{"operandList"}`(.KList)),#noDots(.KList))) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(DATA),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1649) org.kframework.attributes.Location(Location(1649,10,1652,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`RIP160_IELE-PRECOMPILED`(.KList))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(LEN),operandList(#SemanticCastToInt(DATA),`.List{"operandList"}`(.KList))),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>operandList(#parseHexWord(`RipEmd160`(`Bytes2String`(`Int2Bytes`(#SemanticCastToInt(LEN),#SemanticCastToInt(DATA),bigEndianBytes(.KList))))),`.List{"operandList"}`(.KList)),#noDots(.KList))) requires `_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(DATA),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1660) org.kframework.attributes.Location(Location(1660,10,1663,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ID_IELE-PRECOMPILED`(.KList))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<callData>`(#noDots(.KList),#SemanticCastToInts(DATA),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>#SemanticCastToInts(DATA),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1671) org.kframework.attributes.Location(Location(1671,10,1673,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`#exec__IELE-INFRASTRUCTURE`(`ECREC_IELE-PRECOMPILED`(.KList))=>`#end_IELE-INFRASTRUCTURE`(.KList),#dots(.KList)),`<callData>`(#noDots(.KList),operandList(#SemanticCastToInt(HASH),operandList(#SemanticCastToInt(V),operandList(#SemanticCastToInt(R),operandList(#SemanticCastToInt(S),`.List{"operandList"}`(.KList))))),#noDots(.KList))),`<output>`(#noDots(.KList),#SemanticCastToInts(_)=>#ecrec(#senderAux(`Bytes2String`(`Int2Bytes`(#token("32","Int"),#SemanticCastToInt(HASH),bigEndianBytes(.KList))),#SemanticCastToInt(V),`Bytes2String`(`Int2Bytes`(#token("32","Int"),#SemanticCastToInt(R),bigEndianBytes(.KList))),`Bytes2String`(`Int2Bytes`(#token("32","Int"),#SemanticCastToInt(S),bigEndianBytes(.KList))))),#noDots(.KList))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_>=Int__INT-COMMON`(#SemanticCastToInt(HASH),#token("0","Int")),`_>=Int__INT-COMMON`(#SemanticCastToInt(V),#token("0","Int"))),`_>=Int__INT-COMMON`(#SemanticCastToInt(R),#token("0","Int"))),`_>=Int__INT-COMMON`(#SemanticCastToInt(S),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1633) org.kframework.attributes.Location(Location(1633,10,1636,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  ModuleComment( -----------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1709,2,1709,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------------------,[org.kframework.attributes.Location(Location(1576,2,1576,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------------------,[org.kframework.attributes.Location(Location(1572,2,1572,52)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------,[org.kframework.attributes.Location(Location(1681,2,1681,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------------------,[org.kframework.attributes.Location(Location(1643,2,1643,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------------,[org.kframework.attributes.Location(Location(1700,2,1700,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------------,[org.kframework.attributes.Location(Location(1693,2,1693,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------,[org.kframework.attributes.Location(Location(1704,2,1704,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------,[org.kframework.attributes.Location(Location(1716,2,1716,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------,[org.kframework.attributes.Location(Location(1659,2,1659,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ---------------------------------,[org.kframework.attributes.Location(Location(1648,2,1648,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------,[org.kframework.attributes.Location(Location(1688,2,1688,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------,[org.kframework.attributes.Location(Location(1676,2,1676,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------,[org.kframework.attributes.Location(Location(1632,2,1632,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------,[org.kframework.attributes.Location(Location(1670,2,1670,34)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
endmodule


module IELE-PRECOMPILED$SYNTAX [org.kframework.attributes.Location(Location(1566,1,1721,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-INFRASTRUCTURE$SYNTAX
  imports IELE-DATA$SYNTAX
  imports IELE-CONFIGURATION$SYNTAX
  syntax ProgramCell ::= "#precompiled" [function()]
  syntax PrecompiledOp ::= "SHA256"
  syntax PrecompiledOp ::= "RIP160"
  syntax PrecompiledOp ::= "ID"
  syntax PrecompiledOp ::= "ECREC"
  syntax PrecompiledOp ::= "ECPAIRING"
  syntax PrecompiledOp ::= "ECMUL"
  syntax PrecompiledOp ::= "ECADD"
  syntax KResult ::= PrecompiledOp
  syntax Ints ::= "#point" "(" G1Point ")" [function() klabel(#point)]
  syntax Ints ::= "#ecrec" "(" Account ")" [function() klabel(#ecrec)]
  syntax InternalOp ::= "#ecpairing" "(" List "," List "," Bytes "," Bytes "," Int ")" [klabel(#ecpairing)]
  syntax InternalOp ::= "#ecmul" "(" G1Point "," Int ")" [klabel(#ecmul)]
  syntax InternalOp ::= "#ecadd" "(" G1Point "," G1Point ")" [klabel(#ecadd)]
  syntax InternalOp ::= "#checkPoint"
  syntax Int ::= "#precompiledAccount" [function()]
  syntax Instruction ::= PrecompiledOp
endmodule


module IELE-PROGRAM-LOADING [org.kframework.attributes.Location(Location(1730,1,1877,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-PROGRAM-LOADING$SYNTAX
  imports IELE-CONFIGURATION
  imports IELE-COMMON
  rule registersOperands(operandList(`%__IELE-COMMON`(#SemanticCastToInt(REG)),#SemanticCastToOperands(REGS)))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(REG),registersOperands(#SemanticCastToOperands(REGS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1873) org.kframework.attributes.Location(Location(1873,10,1873,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule registersOperands(`.List{"operandList"}`(.KList))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1875) org.kframework.attributes.Location(Location(1875,10,1875,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule registersLValues(lvalueList(`%__IELE-COMMON`(#SemanticCastToInt(REG)),#SemanticCastToLValues(REGS)))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(REG),registersLValues(#SemanticCastToLValues(REGS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1872) org.kframework.attributes.Location(Location(1872,10,1872,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule registersLValues(`.List{"lvalueList"}`(.KList))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1874) org.kframework.attributes.Location(Location(1874,10,1874,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule contractBytes(`.List{"contractDefinitionList"}`(.KList))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1797) org.kframework.attributes.Location(Location(1797,10,1797,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule contractBytes(#SemanticCastToContract(CONTRACT))=>#contractBytesAux(#SemanticCastToContract(CONTRACT),#mainContract(#SemanticCastToContract(CONTRACT))) requires `_=/=K_`(#SemanticCastToContract(CONTRACT),`.List{"contractDefinitionList"}`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1795) org.kframework.attributes.Location(Location(1795,10,1796,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(DEFS))=>`contract_{_}_IELE-COMMON`(#SemanticCastToIeleName(NAME),#SemanticCastToTopLevelDefinitions(DEFS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1735) org.kframework.attributes.Location(Location(1735,10,1735,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`store_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1829) org.kframework.attributes.Location(Location(1829,10,1829,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`store_,_,_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3)),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R3),#SemanticCastToInt(R4)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1830) org.kframework.attributes.Location(Location(1830,10,1830,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`sstore_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1832) org.kframework.attributes.Location(Location(1832,10,1832,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`selfdestruct__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1))))=>#SemanticCastToInt(R1) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1870) org.kframework.attributes.Location(Location(1870,10,1870,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`revert__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1))))=>#SemanticCastToInt(R1) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1865) org.kframework.attributes.Location(Location(1865,10,1865,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`ret__IELE-COMMON`(#SemanticCastToNonEmptyOperands(R1)))=>registersOperands(#SemanticCastToNonEmptyOperands(R1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1864) org.kframework.attributes.Location(Location(1864,10,1864,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`log__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1))))=>#SemanticCastToInt(R1) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1866) org.kframework.attributes.Location(Location(1866,10,1866,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`log_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),#SemanticCastToNonEmptyOperands(R2)))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),registersOperands(#SemanticCastToNonEmptyOperands(R2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1867) org.kframework.attributes.Location(Location(1867,10,1867,64)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`br__IELE-COMMON`(#SemanticCastToIeleName(_)))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1855) org.kframework.attributes.Location(Location(1855,10,1855,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`br_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),#SemanticCastToIeleName(_)))=>#SemanticCastToInt(R1) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1856) org.kframework.attributes.Location(Location(1856,10,1856,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=xor_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1851) org.kframework.attributes.Location(Location(1851,10,1851,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=twos_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1847) org.kframework.attributes.Location(Location(1847,10,1847,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=sub_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1838) org.kframework.attributes.Location(Location(1838,10,1838,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=staticcall_at_(_)gaslimit__IELE-COMMON`(#SemanticCastToLValues(R1),`@__IELE-COMMON`(#SemanticCastToIeleName(_)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),#SemanticCastToOperands(R3),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(registersLValues(#SemanticCastToLValues(R1)),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(registersOperands(#SemanticCastToOperands(R3)),#SemanticCastToInt(R4)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1859) org.kframework.attributes.Location(Location(1859,10,1859,136)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=staticcall_at_(_)gaslimit__IELE-COMMON`(#SemanticCastToLValues(R1),`%__IELE-COMMON`(#SemanticCastToInt(R5)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),#SemanticCastToOperands(R3),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(registersLValues(#SemanticCastToLValues(R1)),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(registersOperands(#SemanticCastToOperands(R3)),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R4),#SemanticCastToInt(R5))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1863) org.kframework.attributes.Location(Location(1863,10,1863,149)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=sload__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1831) org.kframework.attributes.Location(Location(1831,10,1831,57)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=shift_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1852) org.kframework.attributes.Location(Location(1852,10,1852,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=sha3__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1854) org.kframework.attributes.Location(Location(1854,10,1854,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=sext_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1846) org.kframework.attributes.Location(Location(1846,10,1846,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=or_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1850) org.kframework.attributes.Location(Location(1850,10,1850,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=not__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1834) org.kframework.attributes.Location(Location(1834,10,1834,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=mulmod_,_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3)),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R3),#SemanticCastToInt(R4)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1843) org.kframework.attributes.Location(Location(1843,10,1843,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=mul_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1837) org.kframework.attributes.Location(Location(1837,10,1837,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=mod_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1841) org.kframework.attributes.Location(Location(1841,10,1841,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=log2__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1835) org.kframework.attributes.Location(Location(1835,10,1835,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=load__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1827) org.kframework.attributes.Location(Location(1827,10,1827,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=load_,_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3)),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R3),#SemanticCastToInt(R4)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1828) org.kframework.attributes.Location(Location(1828,10,1828,92)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=iszero__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1833) org.kframework.attributes.Location(Location(1833,10,1833,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=expmod_,_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3)),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R3),#SemanticCastToInt(R4)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1844) org.kframework.attributes.Location(Location(1844,10,1844,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=exp_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1840) org.kframework.attributes.Location(Location(1840,10,1840,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=div_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1839) org.kframework.attributes.Location(Location(1839,10,1839,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=cmp__,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),#SemanticCastToPredicate(_),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1853) org.kframework.attributes.Location(Location(1853,10,1853,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=calladdress_at__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),#SemanticCastToGlobalName(_),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1862) org.kframework.attributes.Location(Location(1862,10,1862,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(#SemanticCastToLValues(R1),`@__IELE-COMMON`(#SemanticCastToIeleName(_)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),#SemanticCastToOperands(R3),`%__IELE-COMMON`(#SemanticCastToInt(R4)),`%__IELE-COMMON`(#SemanticCastToInt(R5))))=>`maxInt(_,_)_INT-COMMON`(registersLValues(#SemanticCastToLValues(R1)),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(registersOperands(#SemanticCastToOperands(R3)),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R4),#SemanticCastToInt(R5))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1858) org.kframework.attributes.Location(Location(1858,10,1858,153)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=call_at_(_)send_,gaslimit__IELE-COMMON`(#SemanticCastToLValues(R1),`%__IELE-COMMON`(#SemanticCastToInt(R6)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),#SemanticCastToOperands(R3),`%__IELE-COMMON`(#SemanticCastToInt(R4)),`%__IELE-COMMON`(#SemanticCastToInt(R5))))=>`maxInt(_,_)_INT-COMMON`(registersLValues(#SemanticCastToLValues(R1)),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(registersOperands(#SemanticCastToOperands(R3)),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R4),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R5),#SemanticCastToInt(R6)))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1861) org.kframework.attributes.Location(Location(1861,10,1861,166)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(R1),`@__IELE-COMMON`(#SemanticCastToIeleName(_)),#SemanticCastToOperands(R2)))=>`maxInt(_,_)_INT-COMMON`(registersLValues(#SemanticCastToLValues(R1)),registersOperands(#SemanticCastToOperands(R2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1857) org.kframework.attributes.Location(Location(1857,10,1857,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(R1),`%__IELE-COMMON`(#SemanticCastToInt(R3)),#SemanticCastToOperands(R2)))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R3),`maxInt(_,_)_INT-COMMON`(registersLValues(#SemanticCastToLValues(R1)),registersOperands(#SemanticCastToOperands(R2)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1860) org.kframework.attributes.Location(Location(1860,10,1860,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=byte_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1845) org.kframework.attributes.Location(Location(1845,10,1845,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=bswap_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1848) org.kframework.attributes.Location(Location(1848,10,1848,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=and_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1849) org.kframework.attributes.Location(Location(1849,10,1849,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=addmod_,_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3)),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R3),#SemanticCastToInt(R4)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1842) org.kframework.attributes.Location(Location(1842,10,1842,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=add_,__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),#SemanticCastToInt(R3))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1836) org.kframework.attributes.Location(Location(1836,10,1836,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),#SemanticCastToInt(R2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1826) org.kframework.attributes.Location(Location(1826,10,1826,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_=__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),#SemanticCastToInt(_)))=>#SemanticCastToInt(R1) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1825) org.kframework.attributes.Location(Location(1825,10,1825,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_,_=create_(_)send__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),#SemanticCastToIeleName(_),#SemanticCastToOperands(R3),`%__IELE-COMMON`(#SemanticCastToInt(R4))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(registersOperands(#SemanticCastToOperands(R3)),#SemanticCastToInt(R4)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1868) org.kframework.attributes.Location(Location(1868,10,1868,114)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #registers(`_,_=copycreate_(_)send__IELE-COMMON`(`%__IELE-COMMON`(#SemanticCastToInt(R1)),`%__IELE-COMMON`(#SemanticCastToInt(R2)),`%__IELE-COMMON`(#SemanticCastToInt(R3)),#SemanticCastToOperands(R4),`%__IELE-COMMON`(#SemanticCastToInt(R5))))=>`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R1),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R2),`maxInt(_,_)_INT-COMMON`(#SemanticCastToInt(R3),`maxInt(_,_)_INT-COMMON`(registersOperands(#SemanticCastToOperands(R4)),#SemanticCastToInt(R5))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1869) org.kframework.attributes.Location(Location(1869,10,1869,133)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #mainContract(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(_),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)),#SemanticCastToContract(REST)))=>#mainContract(#SemanticCastToContract(REST)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1779) org.kframework.attributes.Location(Location(1779,10,1779,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #mainContract(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)),`.List{"contractDefinitionList"}`(.KList)))=>#SemanticCastToIeleName(NAME) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1778) org.kframework.attributes.Location(Location(1778,10,1778,58)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #loadFunction(#SemanticCastToTopLevelDefinitions(FUNCS),#SemanticCastToBlocks(BLOCKS),`<program>`(#noDots(.KList),#cells(#cells(#cells(#SemanticCastToBag(PROG),`<functions>`(#noDots(.KList),#SemanticCastToBag(REST),#noDots(.KList))),`<funcIds>`(#noDots(.KList),#SemanticCastToSet(NAMES),#noDots(.KList))),`<funcLabels>`(#noDots(.KList),#SemanticCastToMap(LBLS),#noDots(.KList))),#noDots(.KList)),#SemanticCastToIeleName(NAME),`<function>`(#noDots(.KList),#cells(#cells(#cells(#SemanticCastToBag(FUNC),`<instructions>`(#noDots(.KList),#SemanticCastToBlocks(_),#noDots(.KList))),`<jumpTable>`(#noDots(.KList),#SemanticCastToMap(_),#noDots(.KList))),`<nregs>`(#noDots(.KList),#SemanticCastToInt(_),#noDots(.KList))),#noDots(.KList)),#SemanticCastToInt(IDX))=>#loadDeclarations(#SemanticCastToTopLevelDefinitions(FUNCS),`<program>`(#noDots(.KList),#cells(#cells(#cells(#SemanticCastToBag(PROG),`<funcIds>`(#noDots(.KList),`_Set_`(#SemanticCastToSet(NAMES),`SetItem`(#SemanticCastToIeleName(NAME))),#noDots(.KList))),`<funcLabels>`(#noDots(.KList),`_Map_`(#SemanticCastToMap(LBLS),`#if_#then_#else_#fi_K-EQUAL`(`_=/=K_`(#SemanticCastToIeleName(NAME),#token("init","IeleName")),`_|->_`(#SemanticCastToInt(IDX),#SemanticCastToIeleName(NAME)),`.Map`(.KList))),#noDots(.KList))),`<functions>`(#noDots(.KList),#cells(#SemanticCastToBag(REST),`<function>`(#noDots(.KList),#cells(#cells(#cells(#SemanticCastToBag(FUNC),`<instructions>`(#noDots(.KList),#SemanticCastToBlocks(BLOCKS),#noDots(.KList))),`<jumpTable>`(#noDots(.KList),#computeJumpTable(#SemanticCastToBlocks(BLOCKS)),#noDots(.KList))),`<nregs>`(#noDots(.KList),#computeNRegs(#SemanticCastToBlocks(BLOCKS)),#noDots(.KList))),#noDots(.KList))),#noDots(.KList))),#noDots(.KList)),`#if_#then_#else_#fi_K-EQUAL`(`_==K_`(#SemanticCastToIeleName(NAME),#token("init","IeleName")),#SemanticCastToInt(IDX),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1768) org.kframework.attributes.Location(Location(1768,10,1769,423)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #loadDeclarations(topLevelDefinitionList(`externalcontract__IELE-COMMON`(#SemanticCastToIeleName(_)),#SemanticCastToTopLevelDefinitions(FUNCS)),`<program>`(#noDots(.KList),#SemanticCastToBag(PROG),#noDots(.KList)),#SemanticCastToInt(IDX))=>#loadDeclarations(#SemanticCastToTopLevelDefinitions(FUNCS),`<program>`(#noDots(.KList),#SemanticCastToBag(PROG),#noDots(.KList)),#SemanticCastToInt(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1764) org.kframework.attributes.Location(Location(1764,10,1765,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #loadDeclarations(topLevelDefinitionList(`definepublic_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInt(NARGS)),#SemanticCastToBlocks(BLOCKS)),#SemanticCastToTopLevelDefinitions(FUNCS)),`<program>`(#noDots(.KList),#cells(`<exported>`(#noDots(.KList),#SemanticCastToSet(EXPORTS),#noDots(.KList)),#SemanticCastToBag(REST)),#noDots(.KList)),#SemanticCastToInt(IDX))=>#loadFunction(#SemanticCastToTopLevelDefinitions(FUNCS),#SemanticCastToBlocks(BLOCKS),`<program>`(#noDots(.KList),#cells(`<exported>`(#noDots(.KList),`_Set_`(`SetItem`(#SemanticCastToIeleName(NAME)),#SemanticCastToSet(EXPORTS)),#noDots(.KList)),#SemanticCastToBag(REST)),#noDots(.KList)),#SemanticCastToIeleName(NAME),`<function>`(#noDots(.KList),#cells(`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList)),`<nparams>`(#noDots(.KList),#SemanticCastToInt(NARGS),#noDots(.KList))),#dots(.KList)),#SemanticCastToInt(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1762) org.kframework.attributes.Location(Location(1762,10,1763,200)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #loadDeclarations(topLevelDefinitionList(`define_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToInt(NARGS)),#SemanticCastToBlocks(BLOCKS)),#SemanticCastToTopLevelDefinitions(FUNCS)),`<program>`(#noDots(.KList),#SemanticCastToBag(PROG),#noDots(.KList)),#SemanticCastToInt(IDX))=>#loadFunction(#SemanticCastToTopLevelDefinitions(FUNCS),#SemanticCastToBlocks(BLOCKS),`<program>`(#noDots(.KList),#SemanticCastToBag(PROG),#noDots(.KList)),#SemanticCastToIeleName(NAME),`<function>`(#noDots(.KList),#cells(`<funcId>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList)),`<nparams>`(#noDots(.KList),#SemanticCastToInt(NARGS),#noDots(.KList))),#dots(.KList)),#SemanticCastToInt(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1760) org.kframework.attributes.Location(Location(1760,10,1761,155)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #loadDeclarations(`.List{"topLevelDefinitionList"}`(.KList),`<program>`(#noDots(.KList),#SemanticCastToBag(PROG),#noDots(.KList)),#SemanticCastToInt(_))=>`<program>`(#noDots(.KList),#SemanticCastToBag(PROG),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1766) org.kframework.attributes.Location(Location(1766,10,1766,108)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #loadCodeAux(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(_),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)),#SemanticCastToContract(CONTRACTS)),#SemanticCastToContract(CONTRACT))=>#loadCodeAux(#SemanticCastToContract(CONTRACTS),#SemanticCastToContract(CONTRACT)) requires `_=/=K_`(#SemanticCastToContract(CONTRACTS),`.List{"contractDefinitionList"}`(.KList)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1742) org.kframework.attributes.Location(Location(1742,10,1743,40)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #loadCodeAux(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(_),#SemanticCastToInt(SIZE),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(DEFS)),`.List{"contractDefinitionList"}`(.KList)),#SemanticCastToContract(CONTRACT))=>#loadDeclarations(#SemanticCastToTopLevelDefinitions(DEFS),`<program>`(#noDots(.KList),#cells(#cells(#cells(#cells(#cells(`<functions>`(#noDots(.KList),#cells(.KList),#noDots(.KList)),`<funcIds>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList))),`<funcLabels>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList))),`<programSize>`(#noDots(.KList),#SemanticCastToInt(SIZE),#noDots(.KList))),`<exported>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList))),`<contractCode>`(#noDots(.KList),#SemanticCastToContract(CONTRACT),#noDots(.KList))),#noDots(.KList)),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1744) org.kframework.attributes.Location(Location(1744,10,1753,24)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #loadCode(#SemanticCastToContract(CONTRACT))=>#loadCodeAux(#SemanticCastToContract(CONTRACT),#SemanticCastToContract(CONTRACT)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(11) contentStartLine(1755) org.kframework.attributes.Location(Location(1755,11,1755,63)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #contractSize(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(_),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)),#SemanticCastToContract(REST)),#SemanticCastToIeleName(NAME))=>#contractSize(#SemanticCastToContract(REST),#SemanticCastToIeleName(NAME)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1782) org.kframework.attributes.Location(Location(1782,10,1782,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #contractSize(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(SIZE),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)),#SemanticCastToContract(_)),#SemanticCastToIeleName(NAME))=>#SemanticCastToInt(SIZE) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1781) org.kframework.attributes.Location(Location(1781,10,1781,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #contractBytesAux(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(_),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)),#SemanticCastToContract(REST)),#SemanticCastToIeleName(NAME))=>#contractBytesAux(#SemanticCastToContract(REST),#SemanticCastToIeleName(NAME)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1799) org.kframework.attributes.Location(Location(1799,10,1799,89)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #contractBytesAux(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(_),#SemanticCastToString(BYTES),#SemanticCastToTopLevelDefinitions(_)),#SemanticCastToContract(_)),#SemanticCastToIeleName(NAME))=>#SemanticCastToString(BYTES) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1798) org.kframework.attributes.Location(Location(1798,10,1798,72)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #computeNRegsAux(labeledBlockList(`_:__IELE-COMMON`(#SemanticCastToIeleName(LABEL),#SemanticCastToInstructions(INSTRS)),#SemanticCastToLabeledBlocks(BLOCKS)),#SemanticCastToInt(REGS))=>#computeNRegsAux(`___IELE-COMMON`(#SemanticCastToInstructions(INSTRS),#SemanticCastToLabeledBlocks(BLOCKS)),#SemanticCastToInt(REGS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1821) org.kframework.attributes.Location(Location(1821,10,1821,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #computeNRegsAux(`___IELE-COMMON`(instructionList(#SemanticCastToInstruction(INSTR),#SemanticCastToInstructions(INSTRS)),#SemanticCastToLabeledBlocks(BLOCKS)),#SemanticCastToInt(NREGS))=>#computeNRegsAux(`___IELE-COMMON`(#SemanticCastToInstructions(INSTRS),#SemanticCastToLabeledBlocks(BLOCKS)),`maxInt(_,_)_INT-COMMON`(`_+Int_`(#registers(#SemanticCastToInstruction(INSTR)),#token("1","Int")),#SemanticCastToInt(NREGS))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1822) org.kframework.attributes.Location(Location(1822,10,1822,153)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #computeNRegsAux(`___IELE-COMMON`(`.List{"instructionList"}`(.KList),#SemanticCastToLabeledBlocks(BLOCKS)),#SemanticCastToInt(REGS))=>#computeNRegsAux(#SemanticCastToLabeledBlocks(BLOCKS),#SemanticCastToInt(REGS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1823) org.kframework.attributes.Location(Location(1823,10,1823,82)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #computeNRegsAux(`.List{"labeledBlockList"}`(.KList),#SemanticCastToInt(NREGS))=>#SemanticCastToInt(NREGS) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1820) org.kframework.attributes.Location(Location(1820,10,1820,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #computeNRegs(#SemanticCastToBlocks(BLOCKS))=>#computeNRegsAux(#SemanticCastToBlocks(BLOCKS),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1818) org.kframework.attributes.Location(Location(1818,10,1818,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #computeJumpTableAux(labeledBlockList(`_:__IELE-COMMON`(#SemanticCastToIeleName(LABEL),#SemanticCastToInstructions(INSTRS)),#SemanticCastToLabeledBlocks(BLOCKS)),#SemanticCastToMap(JUMPS),#SemanticCastToSet(LABELS))=>#computeJumpTableAux(#SemanticCastToLabeledBlocks(BLOCKS),`_[_<-_]_MAP`(#SemanticCastToMap(JUMPS),#SemanticCastToIeleName(LABEL),`___IELE-COMMON`(#SemanticCastToInstructions(INSTRS),#SemanticCastToLabeledBlocks(BLOCKS))),`_Set_`(#SemanticCastToSet(LABELS),`SetItem`(#SemanticCastToIeleName(LABEL)))) requires `notBool_`(`Set:in`(#SemanticCastToIeleName(LABEL),#SemanticCastToSet(LABELS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1808) org.kframework.attributes.Location(Location(1808,10,1808,184)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #computeJumpTableAux(labeledBlockList(#SemanticCastToLabeledBlock(_),#SemanticCastToLabeledBlocks(BLOCKS)),#SemanticCastToMap(JUMPS),#SemanticCastToSet(LABELS))=>#computeJumpTableAux(#SemanticCastToLabeledBlocks(BLOCKS),#SemanticCastToMap(JUMPS),#SemanticCastToSet(LABELS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1809) org.kframework.attributes.Location(Location(1809,10,1809,110)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #computeJumpTableAux(`___IELE-COMMON`(#SemanticCastToUnlabeledBlock(_),#SemanticCastToLabeledBlocks(BLOCKS)),#SemanticCastToMap(JUMPS),#SemanticCastToSet(LABELS))=>#computeJumpTableAux(#SemanticCastToLabeledBlocks(BLOCKS),#SemanticCastToMap(JUMPS),#SemanticCastToSet(LABELS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1810) org.kframework.attributes.Location(Location(1810,10,1810,112)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #computeJumpTableAux(`.List{"labeledBlockList"}`(.KList),#SemanticCastToMap(JUMPS),#SemanticCastToSet(_))=>#SemanticCastToMap(JUMPS) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1806) org.kframework.attributes.Location(Location(1806,10,1806,62)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #computeJumpTable(#SemanticCastToBlocks(BLOCKS))=>#computeJumpTableAux(#SemanticCastToBlocks(BLOCKS),`.Map`(.KList),`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1804) org.kframework.attributes.Location(Location(1804,10,1804,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #callAddressAux(topLevelDefinitionList(`definepublic_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToFunctionParameters(_)),#SemanticCastToBlocks(_)),#SemanticCastToTopLevelDefinitions(REST)),#SemanticCastToIeleName(NAME),#SemanticCastToInt(IDX))=>#SemanticCastToInt(IDX) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1786) org.kframework.attributes.Location(Location(1786,10,1786,79)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #callAddressAux(topLevelDefinitionList(`definepublic_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToFunctionParameters(_)),#SemanticCastToBlocks(_)),#SemanticCastToTopLevelDefinitions(REST)),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(IDX))=>#callAddressAux(#SemanticCastToTopLevelDefinitions(REST),#SemanticCastToIeleName(FUNC),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int"))) requires `_=/=K_`(#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(FUNC)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1790) org.kframework.attributes.Location(Location(1790,10,1791,30)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #callAddressAux(topLevelDefinitionList(`define_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#token("init","IeleName")),#SemanticCastToFunctionParameters(_)),#SemanticCastToBlocks(_)),#SemanticCastToTopLevelDefinitions(REST)),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(IDX))=>#callAddressAux(#SemanticCastToTopLevelDefinitions(REST),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1787) org.kframework.attributes.Location(Location(1787,10,1787,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #callAddressAux(topLevelDefinitionList(`define_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToFunctionParameters(_)),#SemanticCastToBlocks(_)),#SemanticCastToTopLevelDefinitions(REST)),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(IDX))=>#callAddressAux(#SemanticCastToTopLevelDefinitions(REST),#SemanticCastToIeleName(FUNC),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int"))) requires `_=/=K_`(#SemanticCastToIeleName(NAME),#token("init","IeleName")) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1788) org.kframework.attributes.Location(Location(1788,10,1789,30)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #callAddressAux(topLevelDefinitionList(#SemanticCastToTopLevelDefinition(_),#SemanticCastToTopLevelDefinitions(REST)),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(IDX))=>#callAddressAux(#SemanticCastToTopLevelDefinitions(REST),#SemanticCastToIeleName(FUNC),#SemanticCastToInt(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1792) org.kframework.attributes.Location(Location(1792,10,1792,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #callAddressAux(`.List{"topLevelDefinitionList"}`(.KList),#SemanticCastToIeleName(_),#SemanticCastToInt(_))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1793) org.kframework.attributes.Location(Location(1793,10,1793,55)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #callAddress(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(_),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(_)),#SemanticCastToContract(REST)),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(FUNC))=>#callAddress(#SemanticCastToContract(REST),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(FUNC)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1785) org.kframework.attributes.Location(Location(1785,10,1785,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule #callAddress(contractDefinitionList(`contract_!__{_}_IELE-CONFIGURATION`(#SemanticCastToIeleName(NAME),#SemanticCastToInt(_),#SemanticCastToString(_),#SemanticCastToTopLevelDefinitions(FUNCS)),#SemanticCastToContract(_)),#SemanticCastToIeleName(NAME),#SemanticCastToIeleName(FUNC))=>#callAddressAux(#SemanticCastToTopLevelDefinitions(FUNCS),#SemanticCastToIeleName(FUNC),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(1784) org.kframework.attributes.Location(Location(1784,10,1784,99)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( when type checking contracts,[org.kframework.attributes.Location(Location(1734,5,1734,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( when desugared to just the number of parameters ,[org.kframework.attributes.Location(Location(1737,39,1737,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -------------------------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1759,2,1759,126)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( --------------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1777,2,1777,109)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ------------------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1803,2,1803,101)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( -----------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1741,2,1741,94)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
  ModuleComment( ----------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(1817,2,1817,87)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))])
endmodule


module IELE-PROGRAM-LOADING$SYNTAX [org.kframework.attributes.Location(Location(1730,1,1877,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele.k))]
  imports IELE-CONFIGURATION$SYNTAX
  imports IELE-COMMON$SYNTAX
  syntax String ::= "#contractBytes" "(" Contract "," IeleName ")" [function() klabel(#contractBytesAux)]
  syntax String ::= "#contractBytes" "(" Contract ")" [function() klabel(contractBytes) symbol()]
  syntax ProgramCell ::= "#loadFunction" "(" TopLevelDefinitions "," Blocks "," ProgramCell "," IeleName "," FunctionCell "," Int ")" [function() klabel(#loadFunction)]
  syntax ProgramCell ::= "#loadDeclarations" "(" TopLevelDefinitions "," ProgramCell "," Int ")" [function() klabel(#loadDeclarations)]
  syntax ProgramCell ::= "#loadCode" "(" Contract "," Contract ")" [function() klabel(#loadCodeAux)]
  syntax ProgramCell ::= "#loadCode" "(" Contract ")" [function() klabel(#loadCode)]
  syntax Map ::= "#computeJumpTable" "(" Blocks "," Map "," Set ")" [function() klabel(#computeJumpTableAux)]
  syntax Map ::= "#computeJumpTable" "(" Blocks ")" [function() klabel(#computeJumpTable)]
  syntax Int ::= "#registers" "(" Operands ")" [function() klabel(registersOperands)]
  syntax Int ::= "#registers" "(" LValues ")" [function() klabel(registersLValues)]
  syntax Int ::= "#registers" "(" Instruction ")" [function() klabel(#registers)]
  syntax Int ::= "#contractSize" "(" Contract "," IeleName ")" [function() klabel(#contractSize)]
  syntax Int ::= "#computeNRegs" "(" Blocks "," Int ")" [function() klabel(#computeNRegsAux)]
  syntax Int ::= "#computeNRegs" "(" Blocks ")" [function() klabel(#computeNRegs)]
  syntax Int ::= "#callAddress" "(" TopLevelDefinitions "," IeleName "," Int ")" [function() klabel(#callAddressAux)]
  syntax Int ::= "#callAddress" "(" Contract "," IeleName "," IeleName ")" [function() klabel(#callAddress)]
  syntax IeleName ::= "#mainContract" "(" Contract ")" [function() klabel(#mainContract)]
  syntax FunctionParameters ::= Int
endmodule


module IELE-SYNTAX [org.kframework.attributes.Location(Location(19,1,36,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))]
  imports IELE-SYNTAX$SYNTAX
  imports IELE-COMMON
endmodule


module IELE-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(19,1,36,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-syntax.k))]
  imports IELE-COMMON$SYNTAX
  syntax StringIeleName ::= r"\\\"(([^\\\"\\\\])|(\\\\[0-9a-fA-F]{2}))*\\\"" [token()]
  syntax NumericIeleName ::= r"[0-9]+" [token()]
  syntax Keyword ::= "xor"
  syntax Keyword ::= "void"
  syntax Keyword ::= "twos"
  syntax Keyword ::= "sub"
  syntax Keyword ::= "store"
  syntax Keyword ::= "staticcall"
  syntax Keyword ::= "sstore"
  syntax Keyword ::= "sload"
  syntax Keyword ::= "shift"
  syntax Keyword ::= "sha3"
  syntax Keyword ::= "sext"
  syntax Keyword ::= "send"
  syntax Keyword ::= "selfdestruct"
  syntax Keyword ::= "revert"
  syntax Keyword ::= "ret"
  syntax Keyword ::= "public"
  syntax Keyword ::= "or"
  syntax Keyword ::= "not"
  syntax Keyword ::= "ne"
  syntax Keyword ::= "mulmod"
  syntax Keyword ::= "mul"
  syntax Keyword ::= "mod"
  syntax Keyword ::= "lt"
  syntax Keyword ::= "log2"
  syntax Keyword ::= "log"
  syntax Keyword ::= "load"
  syntax Keyword ::= "le"
  syntax Keyword ::= "iszero"
  syntax Keyword ::= "gt"
  syntax Keyword ::= "ge"
  syntax Keyword ::= "gaslimit"
  syntax Keyword ::= "external"
  syntax Keyword ::= "expmod"
  syntax Keyword ::= "exp"
  syntax Keyword ::= "eq"
  syntax Keyword ::= "div"
  syntax Keyword ::= "define"
  syntax Keyword ::= "create"
  syntax Keyword ::= "copycreate"
  syntax Keyword ::= "contract"
  syntax Keyword ::= "cmp"
  syntax Keyword ::= "calladdress"
  syntax Keyword ::= "call"
  syntax Keyword ::= "byte"
  syntax Keyword ::= "bswap"
  syntax Keyword ::= "br"
  syntax Keyword ::= "at"
  syntax Keyword ::= "and"
  syntax Keyword ::= "addmod"
  syntax Keyword ::= "add"
  syntax IeleName ::= r"(?<![A-Za-z0-9\\_\\.\\-\\$])[a-zA-Z\\.\\_\\$][0-9a-zA-Z\\.\\_\\-\\$]*" [notInRules() prec(3) token()]
  syntax IeleName ::= Keyword [token()]
endmodule


module IELE-TESTING [org.kframework.attributes.Location(Location(17,1,648,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/./iele-testing.k))]
  imports K-REFLECTION
  imports IELE-TESTING$SYNTAX
  imports IELE-NODE
  imports IELE-BINARY
  imports IELE
endmodule


module IELE-TESTING$SYNTAX [org.kframework.attributes.Location(Location(17,1,648,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/./iele-testing.k))]
  imports K-REFLECTION$SYNTAX
  imports IELE-NODE$SYNTAX
  imports IELE-BINARY$SYNTAX
  imports IELE$SYNTAX
endmodule


module IELE-WELL-FORMEDNESS [org.kframework.attributes.Location(Location(27,1,391,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))]
  imports MAP
  imports IELE-WELL-FORMEDNESS$SYNTAX
  imports IELE-DATA
  imports IELE-CONSTANTS
  imports IELE-COMMON
  imports DOMAINS
  imports DEFAULT-CONFIGURATION
  syntax Cell ::= WellFormednessScheduleCell
  syntax Cell ::= WellFormednessCell
  syntax Cell ::= TypesCell
  syntax Cell ::= TypeCheckingCell
  syntax Cell ::= LabelsCell
  syntax Cell ::= KCell
  syntax Cell ::= FunctionNameCell
  syntax Cell ::= FunctionBodiesCell
  syntax Cell ::= DeclaredContractsCell
  syntax Cell ::= CurrentInstructionsCell
  syntax Cell ::= CurrentFunctionCell
  syntax Cell ::= CurrentContractCell
  syntax Cell ::= ContractsCell
  syntax Cell ::= ContractNameCell
  rule unescapeAux(#SemanticCastToString(S),#SemanticCastToInt(IDX),#SemanticCastToStringBuffer(SB))=>unescapeAux(#SemanticCastToString(S),`_+Int_`(#SemanticCastToInt(IDX),#token("3","Int")),`_+String__STRING-BUFFER-HOOKED`(#SemanticCastToStringBuffer(SB),chrChar(`String2Base`(substrString(#SemanticCastToString(S),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int")),`_+Int_`(#SemanticCastToInt(IDX),#token("3","Int"))),#token("16","Int"))))) requires `_andBool_`(`_<Int__INT-COMMON`(#SemanticCastToInt(IDX),`_-Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))),`_==K_`(substrString(#SemanticCastToString(S),#SemanticCastToInt(IDX),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int"))),#token("\"\\\\\"","String"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(358) org.kframework.attributes.Location(Location(358,10,359,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule unescapeAux(#SemanticCastToString(S),#SemanticCastToInt(IDX),#SemanticCastToStringBuffer(SB))=>unescapeAux(#SemanticCastToString(S),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int")),`_+String__STRING-BUFFER-HOOKED`(#SemanticCastToStringBuffer(SB),substrString(#SemanticCastToString(S),#SemanticCastToInt(IDX),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int"))))) requires `_andBool_`(`_<Int__INT-COMMON`(#SemanticCastToInt(IDX),`_-Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))),`_=/=K_`(substrString(#SemanticCastToString(S),#SemanticCastToInt(IDX),`_+Int_`(#SemanticCastToInt(IDX),#token("1","Int"))),#token("\"\\\\\"","String"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(356) org.kframework.attributes.Location(Location(356,10,357,98)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule unescapeAux(#SemanticCastToString(S),#SemanticCastToInt(IDX),#SemanticCastToStringBuffer(SB))=>`StringBuffer2String`(#SemanticCastToStringBuffer(SB)) requires `_==Int_`(#SemanticCastToInt(IDX),`_-Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(360) org.kframework.attributes.Location(Location(360,10,361,48)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule unescape(#SemanticCastToString(S))=>unescapeAux(#SemanticCastToString(S),#token("1","Int"),`.StringBuffer_STRING-BUFFER-HOOKED`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(355) org.kframework.attributes.Location(Location(355,10,355,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule topLevelDefinitionList(#SemanticCastToTopLevelDefinition(DEF),#SemanticCastToTopLevelDefinitions(DEFS))=>#SemanticCastToTopLevelDefinition(DEF)~>#SemanticCastToTopLevelDefinitions(DEFS) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(94) org.kframework.attributes.Location(Location(94,10,94,53)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule ints(#token("0","Int"))=>`.List{"typeList"}`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(75) org.kframework.attributes.Location(Location(75,10,75,27)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule ints(#SemanticCastToInt(N))=>typeList(`int_IELE-WELL-FORMEDNESS`(.KList),ints(`_-Int__INT-COMMON`(#SemanticCastToInt(N),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(76) org.kframework.attributes.Location(Location(76,10,76,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule initWellFormednessScheduleCell(Init)=>`<well-formedness-schedule>`(#noDots(.KList),#SemanticCastToSchedule(`project:Schedule`(`Map:lookup`(Init,#token("$SCHEDULE","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initWellFormednessCell(Init)=>`<well-formedness>`(#noDots(.KList),#cells(initTypeCheckingCell(.KList),initWellFormednessScheduleCell(Init),initContractsCell(.KList),initCurrentContractCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTypesCell(.KList)=>`<types>`(#noDots(.KList),`intrinsicTypes_IELE-WELL-FORMEDNESS`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTypeCheckingCell(.KList)=>`<typeChecking>`(#noDots(.KList),#token("false","Bool"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initLabelsCell(.KList)=>`<labels>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFunctionNameCell(.KList)=>`<functionName>`(#noDots(.KList),#token("deposit","IeleName"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFunctionBodiesCell(.KList)=>`<functionBodies>`(#noDots(.KList),.K,#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initDeclaredContractsCell(.KList)=>`<declaredContracts>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCurrentInstructionsCell(.KList)=>`<currentInstructions>`(#noDots(.KList),.K,#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCurrentFunctionCell(.KList)=>`<currentFunction>`(#noDots(.KList),#cells(initFunctionNameCell(.KList),initLabelsCell(.KList),initCurrentInstructionsCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initCurrentContractCell(.KList)=>`<currentContract>`(#noDots(.KList),#cells(initTypesCell(.KList),initContractNameCell(.KList),initDeclaredContractsCell(.KList),initFunctionBodiesCell(.KList),initCurrentFunctionCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initContractsCell(.KList)=>`<contracts>`(#noDots(.KList),`.Set`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initContractNameCell(.KList)=>`<contractName>`(#noDots(.KList),#token("Main","IeleName"),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule contractDefinitionList(#SemanticCastToContractDefinition(CONTRACT1),contractDefinitionList(#SemanticCastToContractDefinition(CONTRACT2),#SemanticCastToContract(CONTRACTS)))=>#SemanticCastToContractDefinition(CONTRACT1)~>contractDefinitionList(#SemanticCastToContractDefinition(CONTRACT2),#SemanticCastToContract(CONTRACTS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(83) org.kframework.attributes.Location(Location(83,10,83,115)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule contractDefinitionList(#SemanticCastToContractDefinition(CONTRACT),`.List{"contractDefinitionList"}`(.KList))=>#SemanticCastToContractDefinition(CONTRACT) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(84) org.kframework.attributes.Location(Location(84,10,84,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkOperands(operandList(#SemanticCastToOperand(OP),#SemanticCastToOperands(OPS)))=>checkOperand(#SemanticCastToOperand(OP))~>checkOperands(#SemanticCastToOperands(OPS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(372) org.kframework.attributes.Location(Location(372,10,372,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkOperands(`.List{"operandList"}`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(373) org.kframework.attributes.Location(Location(373,10,373,39)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkOperand(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(377) org.kframework.attributes.Location(Location(377,10,377,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkOperand(`%__IELE-COMMON`(#SemanticCastToIeleName(NAME)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(375) org.kframework.attributes.Location(Location(375,10,375,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkOperand(#SemanticCastToIntConstant(_))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(376) org.kframework.attributes.Location(Location(376,10,376,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkNameArgs(localNameList(`%__IELE-COMMON`(#SemanticCastToIeleName(N)),#SemanticCastToLocalNames(ARGS)))=>checkName(#SemanticCastToIeleName(N))~>checkNameArgs(#SemanticCastToLocalNames(ARGS)) requires `notBool_`(isNumericIeleName(#SemanticCastToIeleName(N))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(152) org.kframework.attributes.Location(Location(152,10,152,111)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule checkNameArgs(`.List{"localNameList"}`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(153) org.kframework.attributes.Location(Location(153,10,153,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkName(#SemanticCastToIeleName(NAME))=>.K requires `_orBool__BOOL`(`_<Int__INT-COMMON`(lengthString(`IeleName2String`(#SemanticCastToIeleName(NAME))),#token("5","Int")),`_=/=String__STRING`(substrString(`IeleName2String`(#SemanticCastToIeleName(NAME)),#token("0","Int"),#token("5","Int")),#token("\"iele.\"","String"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(340) org.kframework.attributes.Location(Location(340,10,341,125)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule checkLVals(lvalueList(#SemanticCastToLValue(LVAL),#SemanticCastToLValues(LVALS)))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkLVals(#SemanticCastToLValues(LVALS)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(387) org.kframework.attributes.Location(Location(387,10,387,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkLVals(`.List{"lvalueList"}`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(388) org.kframework.attributes.Location(Location(388,10,388,35)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkLVal(`%__IELE-COMMON`(#SemanticCastToIeleName(NAME)))=>checkName(#SemanticCastToIeleName(NAME)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(390) org.kframework.attributes.Location(Location(390,10,390,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkIntArgs(localNameList(`%__IELE-COMMON`(#SemanticCastToIeleName(N)),#SemanticCastToLocalNames(ARGS)),#SemanticCastToInt(I))=>checkIntArgs(#SemanticCastToLocalNames(ARGS),`_+Int_`(#SemanticCastToInt(I),#token("1","Int"))) requires `_==Int_`(`String2Int`(`IeleName2String`(#SemanticCastToIeleName(N))),#SemanticCastToInt(I)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(155) org.kframework.attributes.Location(Location(155,10,156,54)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule checkIntArgs(`.List{"localNameList"}`(.KList),#SemanticCastToInt(_))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(157) org.kframework.attributes.Location(Location(157,10,157,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkInit(#token("init","IeleName"),#SemanticCastToSchedule(SCHED))=>`_=/=K_`(#SemanticCastToSchedule(SCHED),`ALBE_IELE-CONSTANTS`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(345) org.kframework.attributes.Location(Location(345,10,345,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkInit(#SemanticCastToIeleName(_),#SemanticCastToSchedule(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(346) org.kframework.attributes.Location(Location(346,10,346,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  rule checkArgs(localNameList(`%__IELE-COMMON`(#SemanticCastToNumericIeleName(N)),#SemanticCastToLocalNames(ARGS)))=>checkIntArgs(localNameList(`%__IELE-COMMON`(#SemanticCastToNumericIeleName(N)),#SemanticCastToLocalNames(ARGS)),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(149) org.kframework.attributes.Location(Location(149,10,149,77)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkArgs(localNameList(`%__IELE-COMMON`(#SemanticCastToIeleName(N)),#SemanticCastToLocalNames(ARGS)))=>checkNameArgs(#SemanticCastToLocalNames(ARGS)) requires `notBool_`(isNumericIeleName(#SemanticCastToIeleName(N))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(150) org.kframework.attributes.Location(Location(150,10,150,91)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule checkArgs(`.List{"localNameList"}`(.KList))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(147) org.kframework.attributes.Location(Location(147,10,147,37)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule checkArgs(#SemanticCastToInt(_))=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(148) org.kframework.attributes.Location(Location(148,10,148,31)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `intrinsicTypes_IELE-WELL-FORMEDNESS`(.KList)=>`_Map_`(`_|->_`(#token("iele.invalid","IeleName"),funType(`.List{"typeList"}`(.KList),`.List{"typeList"}`(.KList))),`_Map_`(`_|->_`(#token("iele.gas","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.gasprice","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.gaslimit","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.beneficiary","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.timestamp","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.number","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.difficulty","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.address","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.origin","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.caller","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.callvalue","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.msize","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.codesize","IeleName"),funType(`.List{"typeList"}`(.KList),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.blockhash","IeleName"),funType(typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_Map_`(`_|->_`(#token("iele.balance","IeleName"),funType(typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))),`_|->_`(#token("iele.extcodesize","IeleName"),funType(typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)),typeList(`int_IELE-WELL-FORMEDNESS`(.KList),`.List{"typeList"}`(.KList)))))))))))))))))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(310) org.kframework.attributes.Location(Location(310,10,328,22)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`store_,__IELE-COMMON`(#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(200) org.kframework.attributes.Location(Location(200,10,200,60)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`store_,_,_,__IELE-COMMON`(#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2),#SemanticCastToOperand(OP3),#SemanticCastToOperand(OP4))=>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),operandList(#SemanticCastToOperand(OP4),`.List{"operandList"}`(.KList)))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(201) org.kframework.attributes.Location(Location(201,10,201,80)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`sstore_,__IELE-COMMON`(#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(204) org.kframework.attributes.Location(Location(204,10,204,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`selfdestruct__IELE-COMMON`(#SemanticCastToOperand(OP1))=>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(242) org.kframework.attributes.Location(Location(242,10,242,56)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`revert__IELE-COMMON`(#SemanticCastToOperand(OP1))=>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(241) org.kframework.attributes.Location(Location(241,10,241,50)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`log__IELE-COMMON`(#SemanticCastToOperand(OP1))=>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(235) org.kframework.attributes.Location(Location(235,10,235,67)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`log_,__IELE-COMMON`(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),operandList(#SemanticCastToOperand(OP4),#SemanticCastToNonEmptyOperands(OP5)))))=>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),operandList(#SemanticCastToOperand(OP4),#SemanticCastToNonEmptyOperands(OP5)))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(239) org.kframework.attributes.Location(Location(239,10,239,88)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`log_,__IELE-COMMON`(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),#SemanticCastToNonEmptyOperands(OP4))))=>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),#SemanticCastToNonEmptyOperands(OP4))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(238) org.kframework.attributes.Location(Location(238,10,238,83)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`log_,__IELE-COMMON`(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),#SemanticCastToNonEmptyOperands(OP3)))=>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),#SemanticCastToNonEmptyOperands(OP3)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(237) org.kframework.attributes.Location(Location(237,10,237,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`log_,__IELE-COMMON`(#SemanticCastToOperand(OP1),#SemanticCastToNonEmptyOperands(OP2))=>checkOperands(operandList(#SemanticCastToOperand(OP1),#SemanticCastToNonEmptyOperands(OP2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(236) org.kframework.attributes.Location(Location(236,10,236,73)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=xor_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(229) org.kframework.attributes.Location(Location(229,10,229,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=twos_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(222) org.kframework.attributes.Location(Location(222,10,222,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=sub_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(211) org.kframework.attributes.Location(Location(211,10,211,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=staticcall_at_(_)gaslimit__IELE-COMMON`(lvalueList(#SemanticCastToLValue(STATUS),#SemanticCastToLValues(RETS)),#SemanticCastToOperand(NAME),#SemanticCastToOperand(OP1),#SemanticCastToOperands(ARGS),#SemanticCastToOperand(OP2))=>checkLVals(lvalueList(#SemanticCastToLValue(STATUS),#SemanticCastToLValues(RETS)))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),#SemanticCastToOperands(ARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(275) org.kframework.attributes.Location(Location(275,10,275,141)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=sload__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(203) org.kframework.attributes.Location(Location(203,10,203,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=shift_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(230) org.kframework.attributes.Location(Location(230,10,230,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=sha3__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(234) org.kframework.attributes.Location(Location(234,10,234,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=sext_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(221) org.kframework.attributes.Location(Location(221,10,221,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=or_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(228) org.kframework.attributes.Location(Location(228,10,228,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=not__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(207) org.kframework.attributes.Location(Location(207,10,207,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=mulmod_,_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2),#SemanticCastToOperand(OP3))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),`.List{"operandList"}`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(217) org.kframework.attributes.Location(Location(217,10,217,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=mul_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(210) org.kframework.attributes.Location(Location(210,10,210,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=mod_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(214) org.kframework.attributes.Location(Location(214,10,214,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=log2__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),`.List{"operandList"}`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(225) org.kframework.attributes.Location(Location(225,10,225,75)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=load__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(198) org.kframework.attributes.Location(Location(198,10,198,74)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=load_,_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2),#SemanticCastToOperand(OP3))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),`.List{"operandList"}`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(199) org.kframework.attributes.Location(Location(199,10,199,95)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=iszero__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(206) org.kframework.attributes.Location(Location(206,10,206,76)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=expmod_,_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2),#SemanticCastToOperand(OP3))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),`.List{"operandList"}`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(218) org.kframework.attributes.Location(Location(218,10,218,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=exp_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(213) org.kframework.attributes.Location(Location(213,10,213,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=div_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(212) org.kframework.attributes.Location(Location(212,10,212,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=cmp__,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToPredicate(_),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(232) org.kframework.attributes.Location(Location(232,10,232,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=calladdress_at__IELE-COMMON`(#SemanticCastToLValue(RET),#SemanticCastToGlobalName(NAME),#SemanticCastToOperand(OP))=>checkLVal(#SemanticCastToLValue(RET))~>checkOperand(#SemanticCastToOperand(OP)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(277) org.kframework.attributes.Location(Location(277,10,277,85)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=call_at_(_)send_,gaslimit__IELE-COMMON`(lvalueList(#SemanticCastToLValue(STATUS),#SemanticCastToLValues(RETS)),#SemanticCastToOperand(NAME),#SemanticCastToOperand(OP1),#SemanticCastToOperands(ARGS),#SemanticCastToOperand(OP2),#SemanticCastToOperand(OP3))=>checkLVals(lvalueList(#SemanticCastToLValue(STATUS),#SemanticCastToLValues(RETS)))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),#SemanticCastToOperands(ARGS))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(274) org.kframework.attributes.Location(Location(274,10,274,152)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=byte_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(220) org.kframework.attributes.Location(Location(220,10,220,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=bswap_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(223) org.kframework.attributes.Location(Location(223,10,223,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=and_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(227) org.kframework.attributes.Location(Location(227,10,227,86)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=addmod_,_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2),#SemanticCastToOperand(OP3))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),operandList(#SemanticCastToOperand(OP3),`.List{"operandList"}`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(216) org.kframework.attributes.Location(Location(216,10,216,97)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=add_,__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1),#SemanticCastToOperand(OP2))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),`.List{"operandList"}`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(209) org.kframework.attributes.Location(Location(209,10,209,84)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_=__IELE-COMMON`(#SemanticCastToLValue(LVAL),#SemanticCastToOperand(OP1))=>checkLVal(#SemanticCastToLValue(LVAL))~>checkOperand(#SemanticCastToOperand(OP1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(197) org.kframework.attributes.Location(Location(197,10,197,69)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `check_IELE-WELL-FORMEDNESS`(.KList)~>`_,_=copycreate_(_)send__IELE-COMMON`(#SemanticCastToLValue(STATUS),#SemanticCastToLValue(RET),#SemanticCastToOperand(OP1),#SemanticCastToOperands(ARGS),#SemanticCastToOperand(OP2))=>checkLVals(lvalueList(#SemanticCastToLValue(STATUS),lvalueList(#SemanticCastToLValue(RET),`.List{"lvalueList"}`(.KList))))~>checkOperands(operandList(#SemanticCastToOperand(OP1),operandList(#SemanticCastToOperand(OP2),#SemanticCastToOperands(ARGS)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(297) org.kframework.attributes.Location(Location(297,10,297,128)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `StringIeleName`(#SemanticCastToStringIeleName(NAME))=>`String2IeleName`(unescape(`StringIeleName2String`(#SemanticCastToStringIeleName(NAME)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(362) org.kframework.attributes.Location(Location(362,10,362,105)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(RETS),`%__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToOperands(ARGS))=>checkLVals(#SemanticCastToLValues(RETS))~>checkOperands(#SemanticCastToOperands(ARGS)),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(272) org.kframework.attributes.Location(Location(272,10,272,102)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `.List{"instructionList"}`(.KList)=>.K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(181) org.kframework.attributes.Location(Location(181,10,181,28)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeNames(localNameList(#SemanticCastToLocalName(N),#SemanticCastToLocalNames(NAMES)))=>`_+Int_`(#token("1","Int"),#sizeNames(#SemanticCastToLocalNames(NAMES))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(141) org.kframework.attributes.Location(Location(141,10,141,59)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeNames(`.List{"localNameList"}`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(140) org.kframework.attributes.Location(Location(140,10,140,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #sizeNames(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(139) org.kframework.attributes.Location(Location(139,10,139,32)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),processFunction(#SemanticCastToIeleName(NAME))=>.K,#dots(.KList)),#SemanticCastToCurrentFunctionCell(_)=>`<currentFunction>`(#noDots(.KList),`<functionName>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(130) org.kframework.attributes.Location(Location(130,10,134,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),labeledBlockList(#SemanticCastToLabeledBlock(BLOCK),#SemanticCastToLabeledBlocks(BLOCKS))=>#SemanticCastToLabeledBlock(BLOCK)~>#SemanticCastToLabeledBlocks(BLOCKS),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(167) org.kframework.attributes.Location(Location(167,10,168,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),instructionList(#SemanticCastToInstruction(INSTR),#SemanticCastToInstructions(INSTRS))=>`check_IELE-WELL-FORMEDNESS`(.KList)~>#SemanticCastToInstruction(INSTR)~>#SemanticCastToInstructions(INSTRS),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(179) org.kframework.attributes.Location(Location(179,10,180,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),globalDefinition(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToIntConstant(_))=>checkName(#SemanticCastToIeleName(NAME)),#dots(.KList)),`<types>`(#noDots(.KList),#SemanticCastToMap(TYPES)=>`_Map_`(#SemanticCastToMap(TYPES),`_|->_`(#SemanticCastToIeleName(NAME),`int_IELE-WELL-FORMEDNESS`(.KList))),#noDots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#SemanticCastToIeleName(NAME),#SemanticCastToMap(TYPES))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(109) org.kframework.attributes.Location(Location(109,10,111,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`br__IELE-COMMON`(#SemanticCastToIeleName(NAME))=>.K,#dots(.KList)),`<labels>`(#dots(.KList),`SetItem`(#SemanticCastToIeleName(NAME)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(250) org.kframework.attributes.Location(Location(250,10,251,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`br_,__IELE-COMMON`(#SemanticCastToOperand(OP1),#SemanticCastToIeleName(NAME))=>checkOperand(#SemanticCastToOperand(OP1)),#dots(.KList)),`<labels>`(#dots(.KList),`SetItem`(#SemanticCastToIeleName(NAME)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(253) org.kframework.attributes.Location(Location(253,10,254,46)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(`<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`_,_=create_(_)send__IELE-COMMON`(#SemanticCastToLValue(STATUS),#SemanticCastToLValue(RET),#SemanticCastToIeleName(NAME),#SemanticCastToOperands(ARGS),#SemanticCastToOperand(OP1))=>checkLVals(lvalueList(#SemanticCastToLValue(STATUS),lvalueList(#SemanticCastToLValue(RET),`.List{"lvalueList"}`(.KList))))~>checkOperands(operandList(#SemanticCastToOperand(OP1),#SemanticCastToOperands(ARGS))),#dots(.KList)),`<declaredContracts>`(#dots(.KList),`SetItem`(#SemanticCastToIeleName(NAME)),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(294) org.kframework.attributes.Location(Location(294,10,295,68)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`externalcontract__IELE-COMMON`(#SemanticCastToIeleName(NAME))=>.K,#dots(.KList)),`<contracts>`(#noDots(.KList),#SemanticCastToSet(CONTRACTS),#noDots(.KList))),`<declaredContracts>`(#noDots(.KList),#SemanticCastToSet(DECLARED)=>`_Set_`(#SemanticCastToSet(DECLARED),`SetItem`(#SemanticCastToIeleName(NAME))),#noDots(.KList))) requires `_andBool_`(`Set:in`(#SemanticCastToIeleName(NAME),#SemanticCastToSet(CONTRACTS)),`notBool_`(`Set:in`(#SemanticCastToIeleName(NAME),#SemanticCastToSet(DECLARED)))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(104) org.kframework.attributes.Location(Location(104,10,107,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`definepublic_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToFunctionParameters(ARGS)),#SemanticCastToBlocks(BLOCKS))=>checkName(#SemanticCastToIeleName(NAME))~>checkArgs(#SemanticCastToFunctionParameters(ARGS)),#dots(.KList)),`<types>`(#noDots(.KList),#SemanticCastToMap(TYPES)=>`_Map_`(#SemanticCastToMap(TYPES),`_|->_`(#SemanticCastToIeleName(NAME),funType(ints(#sizeNames(#SemanticCastToFunctionParameters(ARGS))),`unknown_IELE-WELL-FORMEDNESS`(.KList)))),#noDots(.KList))),`<functionBodies>`(#noDots(.KList),.K=>processFunction(#SemanticCastToIeleName(NAME))~>#SemanticCastToBlocks(BLOCKS),#dots(.KList))) requires `_andBool_`(`notBool_`(`_in_keys(_)_MAP`(#SemanticCastToIeleName(NAME),#SemanticCastToMap(TYPES))),`_=/=K_`(#SemanticCastToIeleName(NAME),#token("init","IeleName"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(123) org.kframework.attributes.Location(Location(123,10,126,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`define_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#token("init","IeleName")),#SemanticCastToFunctionParameters(ARGS)),#SemanticCastToBlocks(BLOCKS))=>.K,#dots(.KList)),`<types>`(#noDots(.KList),#SemanticCastToMap(TYPES)=>`_Map_`(#SemanticCastToMap(TYPES),`_|->_`(#token("init","IeleName"),funType(ints(#sizeNames(#SemanticCastToFunctionParameters(ARGS))),`.List{"typeList"}`(.KList)))),#noDots(.KList))),`<functionBodies>`(#noDots(.KList),.K=>processFunction(#token("init","IeleName"))~>#SemanticCastToBlocks(BLOCKS),#dots(.KList))) requires `notBool_`(`_in_keys(_)_MAP`(#token("init","IeleName"),#SemanticCastToMap(TYPES))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(113) org.kframework.attributes.Location(Location(113,10,116,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`define_{_}_IELE-COMMON`(`_(_)_IELE-COMMON`(`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToFunctionParameters(ARGS)),#SemanticCastToBlocks(BLOCKS))=>checkName(#SemanticCastToIeleName(NAME))~>checkArgs(#SemanticCastToFunctionParameters(ARGS)),#dots(.KList)),`<types>`(#noDots(.KList),#SemanticCastToMap(TYPES)=>`_Map_`(#SemanticCastToMap(TYPES),`_|->_`(#SemanticCastToIeleName(NAME),funType(ints(#sizeNames(#SemanticCastToFunctionParameters(ARGS))),`unknown_IELE-WELL-FORMEDNESS`(.KList)))),#noDots(.KList))),`<functionBodies>`(#noDots(.KList),.K=>processFunction(#SemanticCastToIeleName(NAME))~>#SemanticCastToBlocks(BLOCKS),#dots(.KList))) requires `_andBool_`(`notBool_`(`_in_keys(_)_MAP`(#SemanticCastToIeleName(NAME),#SemanticCastToMap(TYPES))),`_=/=K_`(#SemanticCastToIeleName(NAME),#token("init","IeleName"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(118) org.kframework.attributes.Location(Location(118,10,121,66)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`contract_{_}_IELE-COMMON`(#SemanticCastToIeleName(NAME),#SemanticCastToTopLevelDefinitions(DEFINITIONS))=>checkName(#SemanticCastToIeleName(NAME))~>#SemanticCastToTopLevelDefinitions(DEFINITIONS),#dots(.KList)),`<contracts>`(#noDots(.KList),#SemanticCastToSet(CONTRACTS)=>`_Set_`(#SemanticCastToSet(CONTRACTS),`SetItem`(#SemanticCastToIeleName(NAME))),#noDots(.KList))),#SemanticCastToCurrentContractCell(_)=>`<currentContract>`(#noDots(.KList),`<contractName>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList)),#dots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToIeleName(NAME),#SemanticCastToSet(CONTRACTS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(86) org.kframework.attributes.Location(Location(86,10,92,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`ret__IELE-COMMON`(#SemanticCastToNonEmptyOperands(OPS))=>checkOperands(#SemanticCastToNonEmptyOperands(OPS)),#dots(.KList)),`<functionName>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList))),`<types>`(#dots(.KList),`_|->_`(#SemanticCastToIeleName(NAME),funType(#SemanticCastToTypes(_),`unknown_IELE-WELL-FORMEDNESS`(.KList)=>ints(#sizeRegs(#SemanticCastToNonEmptyOperands(OPS))))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(284) org.kframework.attributes.Location(Location(284,10,286,78)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`ret__IELE-COMMON`(#SemanticCastToNonEmptyOperands(OPS))=>checkOperands(#SemanticCastToNonEmptyOperands(OPS)),#dots(.KList)),`<functionName>`(#noDots(.KList),#SemanticCastToIeleName(NAME),#noDots(.KList))),`<types>`(#dots(.KList),`_|->_`(#SemanticCastToIeleName(NAME),funType(#SemanticCastToTypes(_),#SemanticCastToTypes(RETTYPES))),#noDots(.KList))) requires `_==K_`(ints(#sizeRegs(#SemanticCastToNonEmptyOperands(OPS))),#SemanticCastToTypes(RETTYPES)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(279) org.kframework.attributes.Location(Location(279,10,282,49)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(RETS),`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToOperands(ARGS))=>checkLVals(#SemanticCastToLValues(RETS))~>checkOperands(#SemanticCastToOperands(ARGS)),#dots(.KList)),`<types>`(#dots(.KList),`_|->_`(#SemanticCastToIeleName(NAME),funType(#SemanticCastToTypes(ARGTYPES),`unknown_IELE-WELL-FORMEDNESS`(.KList)=>ints(#sizeLVals(#SemanticCastToLValues(RETS))))),#noDots(.KList))),`<well-formedness-schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires `_andBool_`(`_==K_`(ints(#sizeRegs(#SemanticCastToOperands(ARGS))),#SemanticCastToTypes(ARGTYPES)),checkInit(#SemanticCastToIeleName(NAME),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(267) org.kframework.attributes.Location(Location(267,10,270,81)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`check_IELE-WELL-FORMEDNESS`(.KList)~>`_=call_(_)_IELE-COMMON`(#SemanticCastToLValues(RETS),`@__IELE-COMMON`(#SemanticCastToIeleName(NAME)),#SemanticCastToOperands(ARGS))=>checkLVals(#SemanticCastToLValues(RETS))~>checkOperands(#SemanticCastToOperands(ARGS)),#dots(.KList)),`<types>`(#dots(.KList),`_|->_`(#SemanticCastToIeleName(NAME),funType(#SemanticCastToTypes(ARGTYPES),#SemanticCastToTypes(RETTYPES))),#noDots(.KList))),`<well-formedness-schedule>`(#noDots(.KList),#SemanticCastToSchedule(SCHED),#noDots(.KList))) requires `_andBool_`(`_andBool_`(`_==K_`(ints(#sizeRegs(#SemanticCastToOperands(ARGS))),#SemanticCastToTypes(ARGTYPES)),`_==K_`(ints(#sizeLVals(#SemanticCastToLValues(RETS))),#SemanticCastToTypes(RETTYPES))),checkInit(#SemanticCastToIeleName(NAME),#SemanticCastToSchedule(SCHED))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(262) org.kframework.attributes.Location(Location(262,10,265,125)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`___IELE-COMMON`(#SemanticCastToUnlabeledBlock(BLOCK),#SemanticCastToLabeledBlocks(BLOCKS))=>#SemanticCastToLabeledBlocks(BLOCKS),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<currentInstructions>`(#noDots(.KList),.K=>#SemanticCastToUnlabeledBlock(BLOCK),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(164) org.kframework.attributes.Location(Location(164,10,166,70)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`.List{"topLevelDefinitionList"}`(.KList)=>#SemanticCastToK(BODIES),#dots(.KList)),`<functionBodies>`(#noDots(.KList),#SemanticCastToK(BODIES),#noDots(.KList))),`<types>`(#dots(.KList),`_|->_`(#token("init","IeleName"),funType(#SemanticCastToTypes(_),`.List{"typeList"}`(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(95) org.kframework.attributes.Location(Location(95,10,97,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(`<k>`(#noDots(.KList),`.List{"labeledBlockList"}`(.KList)=>#SemanticCastToK(INSTRS),#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<currentInstructions>`(#noDots(.KList),#SemanticCastToK(INSTRS),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(169) org.kframework.attributes.Location(Location(169,10,171,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #cells(#cells(#cells(`<k>`(#noDots(.KList),`_:__IELE-COMMON`(#SemanticCastToIeleName(NAME),#SemanticCastToInstructions(BLOCK))=>.K,#dots(.KList)),`<typeChecking>`(#noDots(.KList),#token("true","Bool"),#noDots(.KList))),`<labels>`(#noDots(.KList),#SemanticCastToSet(LABELS)=>`_Set_`(#SemanticCastToSet(LABELS),`SetItem`(#SemanticCastToIeleName(NAME))),#noDots(.KList))),`<currentInstructions>`(#noDots(.KList),.K=>#SemanticCastToInstructions(BLOCK),#dots(.KList))) requires `notBool_`(`Set:in`(#SemanticCastToIeleName(NAME),#SemanticCastToSet(LABELS))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(173) org.kframework.attributes.Location(Location(173,10,177,38)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  ModuleComment( -------------------------------------------------------------------------------------,[org.kframework.attributes.Location(Location(354,2,354,90)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( --------------------------------------------------------,[org.kframework.attributes.Location(Location(344,2,344,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( --------------------------------------------------------,[org.kframework.attributes.Location(Location(138,2,138,61)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( ----------------------------------------------,[org.kframework.attributes.Location(Location(146,2,146,51)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( ------------------------------------------,[org.kframework.attributes.Location(Location(309,2,309,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( ------------------------------------------,[org.kframework.attributes.Location(Location(129,2,129,47)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( ----------------------------------------,[org.kframework.attributes.Location(Location(371,2,371,45)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( --------------------------------------,[org.kframework.attributes.Location(Location(386,2,386,43)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( -------------------------------------,[org.kframework.attributes.Location(Location(74,2,74,42)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( ------------------------------------,[org.kframework.attributes.Location(Location(339,2,339,41)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
  ModuleComment( ------------------------,[org.kframework.attributes.Location(Location(195,2,195,29)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
endmodule


module IELE-WELL-FORMEDNESS$SYNTAX [org.kframework.attributes.Location(Location(27,1,391,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))]
  imports MAP$SYNTAX
  imports IELE-DATA$SYNTAX
  imports IELE-CONSTANTS$SYNTAX
  imports IELE-COMMON$SYNTAX
  imports DOMAINS$SYNTAX
  imports DEFAULT-CONFIGURATION$SYNTAX
  syntax priority typeList > funType
  syntax WellFormednessScheduleCellOpt ::= WellFormednessScheduleCell
  syntax WellFormednessScheduleCellOpt ::= "noWellFormednessScheduleCell" [cellOptAbsent(WellFormednessScheduleCell)]
  syntax WellFormednessScheduleCell ::= "initWellFormednessScheduleCell" "(" Map ")" [function() initializer() noThread()]
  syntax WellFormednessScheduleCell ::= "<well-formedness-schedule>" Schedule "</well-formedness-schedule>" [cell() cellName(well-formedness-schedule) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax WellFormednessCellFragment ::= "<well-formedness>-fragment" TypeCheckingCellOpt WellFormednessScheduleCellOpt ContractsCellOpt CurrentContractCellOpt "</well-formedness>-fragment" [cellFragment(WellFormednessCell)]
  syntax WellFormednessCell ::= "initWellFormednessCell" "(" Map ")" [function() initializer() noThread()]
  syntax WellFormednessCell ::= "<well-formedness>" TypeCheckingCell WellFormednessScheduleCell ContractsCell CurrentContractCell "</well-formedness>" [cell() cellName(well-formedness) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%n%3%n%4%n%5%d%n%6) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  syntax TypesCellOpt ::= TypesCell
  syntax TypesCellOpt ::= "noTypesCell" [cellOptAbsent(TypesCell)]
  syntax TypesCell ::= "initTypesCell" [function() initializer() noThread()]
  syntax TypesCell ::= "<types>" Map "</types>" [cell() cellName(types) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Types ::= Type "," Types [klabel(typeList) right() userList(*)]
  syntax Types ::= "ints" "(" Int ")" [function() klabel(ints)]
  syntax Types ::= ".Types" [klabel(.List{"typeList"}) userList(*)]
  syntax TypeCheckingCellOpt ::= TypeCheckingCell
  syntax TypeCheckingCellOpt ::= "noTypeCheckingCell" [cellOptAbsent(TypeCheckingCell)]
  syntax TypeCheckingCell ::= "initTypeCheckingCell" [function() initializer() noThread()]
  syntax TypeCheckingCell ::= "<typeChecking>" Bool "</typeChecking>" [cell() cellName(typeChecking) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Type ::= Types "->" ReturnType [klabel(funType)]
  syntax Type ::= "int"
  syntax String ::= "unescape" "(" String "," Int "," StringBuffer ")" [function() klabel(unescapeAux)]
  syntax String ::= "unescape" "(" String ")" [function() klabel(unescape)]
  syntax Schedule [org.kframework.attributes.Location(Location(42,5,42,19)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))]
  syntax ReturnType ::= Types
  syntax ReturnType ::= "unknown"
  syntax Map ::= "intrinsicTypes" [function()]
  syntax LabelsCellOpt ::= LabelsCell
  syntax LabelsCellOpt ::= "noLabelsCell" [cellOptAbsent(LabelsCell)]
  syntax LabelsCell ::= "initLabelsCell" [function() initializer() noThread()]
  syntax LabelsCell ::= "<labels>" Set "</labels>" [cell() cellName(labels) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax KResult ::= Types
  syntax KResult ::= Type
  syntax KItem ::= "processFunction" "(" IeleName ")" [klabel(processFunction)]
  syntax KItem ::= "checkOperands" "(" Operands ")" [klabel(checkOperands)]
  syntax KItem ::= "checkOperand" "(" Operand ")" [klabel(checkOperand)]
  syntax KItem ::= "checkNameArgs" "(" LocalNames ")" [klabel(checkNameArgs)]
  syntax KItem ::= "checkName" "(" IeleName ")" [klabel(checkName)]
  syntax KItem ::= "checkLVals" "(" LValues ")" [klabel(checkLVals)]
  syntax KItem ::= "checkLVal" "(" LValue ")" [klabel(checkLVal)]
  syntax KItem ::= "checkIntArgs" "(" LocalNames "," Int ")" [klabel(checkIntArgs)]
  syntax KItem ::= "checkArgs" "(" FunctionParameters ")" [klabel(checkArgs)]
  syntax KItem ::= "check"
  syntax Int ::= "#sizeNames" "(" FunctionParameters ")" [function() klabel(#sizeNames)]
  syntax IeleName ::= "Main" [token()]
  syntax FunctionParameters ::= Int
  syntax FunctionNameCellOpt ::= FunctionNameCell
  syntax FunctionNameCellOpt ::= "noFunctionNameCell" [cellOptAbsent(FunctionNameCell)]
  syntax FunctionNameCell ::= "initFunctionNameCell" [function() initializer() noThread()]
  syntax FunctionNameCell ::= "<functionName>" IeleName "</functionName>" [cell() cellName(functionName) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax FunctionBodiesCellOpt ::= FunctionBodiesCell
  syntax FunctionBodiesCellOpt ::= "noFunctionBodiesCell" [cellOptAbsent(FunctionBodiesCell)]
  syntax FunctionBodiesCell ::= "initFunctionBodiesCell" [function() initializer() noThread()]
  syntax FunctionBodiesCell ::= "<functionBodies>" K "</functionBodies>" [cell() cellName(functionBodies) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax DeclaredContractsCellOpt ::= DeclaredContractsCell
  syntax DeclaredContractsCellOpt ::= "noDeclaredContractsCell" [cellOptAbsent(DeclaredContractsCell)]
  syntax DeclaredContractsCell ::= "initDeclaredContractsCell" [function() initializer() noThread()]
  syntax DeclaredContractsCell ::= "<declaredContracts>" Set "</declaredContracts>" [cell() cellName(declaredContracts) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CurrentInstructionsCellOpt ::= CurrentInstructionsCell
  syntax CurrentInstructionsCellOpt ::= "noCurrentInstructionsCell" [cellOptAbsent(CurrentInstructionsCell)]
  syntax CurrentInstructionsCell ::= "initCurrentInstructionsCell" [function() initializer() noThread()]
  syntax CurrentInstructionsCell ::= "<currentInstructions>" K "</currentInstructions>" [cell() cellName(currentInstructions) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CurrentFunctionCellOpt ::= CurrentFunctionCell
  syntax CurrentFunctionCellOpt ::= "noCurrentFunctionCell" [cellOptAbsent(CurrentFunctionCell)]
  syntax CurrentFunctionCellFragment ::= "<currentFunction>-fragment" FunctionNameCellOpt LabelsCellOpt CurrentInstructionsCellOpt "</currentFunction>-fragment" [cellFragment(CurrentFunctionCell)]
  syntax CurrentFunctionCell ::= "initCurrentFunctionCell" [function() initializer() noThread()]
  syntax CurrentFunctionCell ::= "<currentFunction>" FunctionNameCell LabelsCell CurrentInstructionsCell "</currentFunction>" [cell() cellName(currentFunction) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%n%3%n%4%d%n%5) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax CurrentContractCellOpt ::= CurrentContractCell
  syntax CurrentContractCellOpt ::= "noCurrentContractCell" [cellOptAbsent(CurrentContractCell)]
  syntax CurrentContractCellFragment ::= "<currentContract>-fragment" TypesCellOpt ContractNameCellOpt DeclaredContractsCellOpt FunctionBodiesCellOpt CurrentFunctionCellOpt "</currentContract>-fragment" [cellFragment(CurrentContractCell)]
  syntax CurrentContractCell ::= "initCurrentContractCell" [function() initializer() noThread()]
  syntax CurrentContractCell ::= "<currentContract>" TypesCell ContractNameCell DeclaredContractsCell FunctionBodiesCell CurrentFunctionCell "</currentContract>" [cell() cellName(currentContract) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ContractsCellOpt ::= ContractsCell
  syntax ContractsCellOpt ::= "noContractsCell" [cellOptAbsent(ContractsCell)]
  syntax ContractsCell ::= "initContractsCell" [function() initializer() noThread()]
  syntax ContractsCell ::= "<contracts>" Set "</contracts>" [cell() cellName(contracts) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax ContractNameCellOpt ::= ContractNameCell
  syntax ContractNameCellOpt ::= "noContractNameCell" [cellOptAbsent(ContractNameCell)]
  syntax ContractNameCell ::= "initContractNameCell" [function() initializer() noThread()]
  syntax ContractNameCell ::= "<contractName>" IeleName "</contractName>" [cell() cellName(contractName) contentStartColumn(19) contentStartLine(44) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  syntax Cell ::= KCell
  syntax Bool ::= "checkInit" "(" IeleName "," Schedule ")" [function() klabel(checkInit)]
  Bubble(config,<well-formedness>
                    <typeChecking> false </typeChecking>
                    <well-formedness-schedule> $SCHEDULE:Schedule </well-formedness-schedule>
                    <contracts> .Set </contracts>
                    <currentContract>
                      <types> intrinsicTypes </types>
                      <contractName> Main </contractName>
                      <declaredContracts> .Set </declaredContracts>
                      <functionBodies> .K </functionBodies>
                      <currentFunction>
                        <functionName> deposit </functionName>
                        <labels> .Set </labels>
                        <currentInstructions> .K </currentInstructions>
                      </currentFunction>
                    </currentContract>
                  </well-formedness>,[contentStartColumn(19) contentStartLine(44) org.kframework.attributes.Location(Location(44,5,59,36)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/well-formedness.k))])
endmodule


module INT [org.kframework.attributes.Location(Location(430,1,459,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports K-EQUAL
  imports INT-COMMON
  imports INT$SYNTAX
  rule signExtendBitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_-Int__INT-COMMON`(`_modInt__INT-COMMON`(`_+Int_`(bitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN)),`_<<Int__INT-COMMON`(#token("1","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("1","Int")))),`_<<Int__INT-COMMON`(#token("1","Int"),#SemanticCastToInt(LEN))),`_<<Int__INT-COMMON`(#token("1","Int"),`_-Int__INT-COMMON`(#SemanticCastToInt(LEN),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(437) org.kframework.attributes.Location(Location(437,8,437,164)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule freshInt(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(455) org.kframework.attributes.Location(Location(455,8,455,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule bitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_modInt__INT-COMMON`(`_>>Int__INT-COMMON`(#SemanticCastToInt(I),#SemanticCastToInt(IDX)),`_<<Int__INT-COMMON`(#token("1","Int"),#SemanticCastToInt(LEN))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(435) org.kframework.attributes.Location(Location(435,8,435,85)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `minInt(_,_)_INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I2) requires `_>=Int__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(448) org.kframework.attributes.Location(Location(448,8,448,57)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `minInt(_,_)_INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I1) requires `_<=Int__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(447) org.kframework.attributes.Location(Location(447,8,447,57)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_modInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_%Int__INT-COMMON`(`_+Int_`(`_%Int__INT-COMMON`(#SemanticCastToInt(I1),absInt(#SemanticCastToInt(I2))),absInt(#SemanticCastToInt(I2))),absInt(#SemanticCastToInt(I2))) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [concrete() contentStartColumn(5) contentStartLine(442) org.kframework.attributes.Location(Location(442,5,445,23)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_dividesInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==Int_`(`_%Int__INT-COMMON`(#SemanticCastToInt(I2),#SemanticCastToInt(I1)),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(452) org.kframework.attributes.Location(Location(452,8,452,58)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_divInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_/Int__INT-COMMON`(`_-Int__INT-COMMON`(#SemanticCastToInt(I1),`_modInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))),#SemanticCastToInt(I2)) requires `_=/=Int__INT-COMMON`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(439) org.kframework.attributes.Location(Location(439,8,440,23)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==K_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(450) org.kframework.attributes.Location(Location(450,8,450,40)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=Int__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`notBool_`(`_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(451) org.kframework.attributes.Location(Location(451,8,451,53)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module INT$SYNTAX [org.kframework.attributes.Location(Location(430,1,459,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-SYMBOLIC$SYNTAX
  imports INT-COMMON$SYNTAX
  syntax K ::= "srandInt" "(" Int ")" [function() hook(INT.srand) klabel(srandInt)]
  syntax Int ::= "randInt" "(" Int ")" [function() hook(INT.rand) klabel(randInt)]
  syntax Int ::= "freshInt" "(" Int ")" [freshGenerator() function() functional() klabel(freshInt)]
endmodule


module INT-COMMON [org.kframework.attributes.Location(Location(372,1,416,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports INT-SYNTAX
  imports INT-COMMON$SYNTAX
  imports BOOL
  ModuleComment( divInt and modInt implement e-division ,[org.kframework.attributes.Location(Location(385,16,385,59)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( FIXME: translate /Int and %Int into smtlib ,[org.kframework.attributes.Location(Location(381,16,381,63)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( /Int and %Int implement t-division ,[org.kframework.attributes.Location(Location(382,16,382,55)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module INT-COMMON$SYNTAX [org.kframework.attributes.Location(Location(372,1,416,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority ~Int__INT-COMMON > _^Int__INT-COMMON _^%Int___INT-COMMON > _%Int__INT-COMMON _*Int__INT-COMMON _modInt__INT-COMMON _/Int__INT-COMMON _divInt__INT-COMMON > _+Int_ _-Int__INT-COMMON > _<<Int__INT-COMMON _>>Int__INT-COMMON > _&Int__INT-COMMON > _xorInt__INT-COMMON > _|Int__INT-COMMON
  syntax associativity left _|Int__INT-COMMON
  syntax associativity left _xorInt__INT-COMMON
  syntax associativity left _modInt__INT-COMMON
  syntax associativity left _divInt__INT-COMMON
  syntax associativity left _^Int__INT-COMMON _^%Int___INT-COMMON
  syntax associativity left _^Int__INT-COMMON
  syntax associativity left _^%Int___INT-COMMON
  syntax associativity left _>Int__INT-COMMON
  syntax associativity left _>>Int__INT-COMMON
  syntax associativity left _>=Int__INT-COMMON
  syntax associativity left _==Int_
  syntax associativity left _=/=Int__INT-COMMON
  syntax associativity left _<Int__INT-COMMON
  syntax associativity left _<=Int__INT-COMMON
  syntax associativity left _<<Int__INT-COMMON _>>Int__INT-COMMON
  syntax associativity left _<<Int__INT-COMMON
  syntax associativity left _/Int__INT-COMMON
  syntax associativity left _-Int__INT-COMMON
  syntax associativity left _+Int_ _-Int__INT-COMMON
  syntax associativity left _+Int_
  syntax associativity left _*Int__INT-COMMON
  syntax associativity left _&Int__INT-COMMON
  syntax associativity left _%Int__INT-COMMON _*Int__INT-COMMON _modInt__INT-COMMON _/Int__INT-COMMON _divInt__INT-COMMON
  syntax associativity left _%Int__INT-COMMON
  syntax Int ::= Int "|Int" Int [function() functional() hook(INT.or) latex({#1}\mathrel{|_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "xorInt" Int [function() functional() hook(INT.xor) latex({#1}\mathrel{\oplus_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "modInt" Int [function() hook(INT.emod) left() smt-hook(mod)]
  syntax Int ::= Int "divInt" Int [function() hook(INT.ediv) left() smt-hook(div)]
  syntax Int ::= Int "^Int" Int [function() hook(INT.pow) latex({#1}\mathrel{{\char`\^}_{\!\scriptstyle\it Int}}{#2}) left() smt-hook(^)]
  syntax Int ::= Int "^%Int" Int Int [function() hook(INT.powmod) left() smt-hook((mod (^ #1 #2) #3))]
  syntax Int ::= Int ">>Int" Int [function() hook(INT.shr) latex({#1}\mathrel{\gg_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "<<Int" Int [function() hook(INT.shl) latex({#1}\mathrel{\ll_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "/Int" Int [function() hook(INT.tdiv) latex({#1}\mathrel{\div_{\scriptstyle\it Int}}{#2}) left() smt-hook(div)]
  syntax Int ::= Int "-Int" Int [function() functional() hook(INT.sub) latex({#1}\mathrel{-_{\scriptstyle\it Int}}{#2}) left() smt-hook(-)]
  syntax Int ::= Int "+Int" Int [function() functional() hook(INT.add) klabel(_+Int_) latex({#1}\mathrel{+_{\scriptstyle\it Int}}{#2}) left() smt-hook(+) symbol()]
  syntax Int ::= Int "*Int" Int [function() functional() hook(INT.mul) latex({#1}\mathrel{\ast_{\scriptstyle\it Int}}{#2}) left() smt-hook(*)]
  syntax Int ::= Int "&Int" Int [function() functional() hook(INT.and) latex({#1}\mathrel{\&_{\scriptstyle\it Int}}{#2}) left()]
  syntax Int ::= Int "%Int" Int [function() hook(INT.tmod) latex({#1}\mathrel{\%_{\scriptstyle\it Int}}{#2}) left() smt-hook(mod)]
  syntax Int ::= "~Int" Int [function() functional() hook(INT.not) latex(\mathop{\sim_{\scriptstyle\it Int}}{#1})]
  syntax Int ::= "signExtendBitRangeInt" "(" Int "," Int "," Int ")" [function() hook(INT.signExtendBitRange) klabel(signExtendBitRangeInt)]
  syntax Int ::= "minInt" "(" Int "," Int ")" [function() functional() hook(INT.min) smtlib(int_min)]
  syntax Int ::= "maxInt" "(" Int "," Int ")" [function() functional() hook(INT.max) smtlib(int_max)]
  syntax Int ::= "log2Int" "(" Int ")" [function() hook(INT.log2) klabel(log2Int)]
  syntax Int ::= "bitRangeInt" "(" Int "," Int "," Int ")" [function() hook(INT.bitRange) klabel(bitRangeInt)]
  syntax Int ::= "absInt" "(" Int ")" [function() functional() hook(INT.abs) klabel(absInt) smtlib(int_abs)]
  syntax Bool ::= Int "dividesInt" Int [function()]
  syntax Bool ::= Int ">Int" Int [function() functional() hook(INT.gt) latex({#1}\mathrel{>_{\scriptstyle\it Int}}{#2}) left() smt-hook(>)]
  syntax Bool ::= Int ">=Int" Int [function() functional() hook(INT.ge) latex({#1}\mathrel{\geq_{\scriptstyle\it Int}}{#2}) left() smt-hook(>=)]
  syntax Bool ::= Int "==Int" Int [function() functional() hook(INT.eq) klabel(_==Int_) latex({#1}\mathrel{{=}{=}_{\scriptstyle\it Int}}{#2}) left() smt-hook(=)]
  syntax Bool ::= Int "=/=Int" Int [function() functional() hook(INT.ne) latex({#1}\mathrel{{=}{/}{=}_{\scriptstyle\it Int}}{#2}) left() smt-hook(distinct)]
  syntax Bool ::= Int "<Int" Int [function() functional() hook(INT.lt) latex({#1}\mathrel{<_{\scriptstyle\it Int}}{#2}) left() smt-hook(<)]
  syntax Bool ::= Int "<=Int" Int [function() functional() hook(INT.le) latex({#1}\mathrel{\leq_{\scriptstyle\it Int}}{#2}) left() smt-hook(<=)]
endmodule


module INT-SYMBOLIC$SYNTAX [kore() org.kframework.attributes.Location(Location(418,1,428,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) symbolic()]
  imports ML-SYNTAX$SYNTAX
  imports INT-COMMON$SYNTAX
endmodule


module INT-SYNTAX [org.kframework.attributes.Location(Location(367,1,370,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports INT-SYNTAX$SYNTAX
endmodule


module INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(367,1,370,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax Int ::= r"[\\+-]?[0-9]+" [prec(2) prefer() token()]
endmodule


module K [org.kframework.attributes.Location(Location(234,1,251,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-SORT-LATTICE
  imports K$SYNTAX
  imports AUTO-FOLLOW
  imports AUTO-CASTS
  ModuleComment( functions that preserve sorts and can therefore have inner rewrites,[org.kframework.attributes.Location(Location(247,3,247,73)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( functions that do not preserve sort and therefore cannot have inner rewrites,[org.kframework.attributes.Location(Location(249,3,249,82)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module K$SYNTAX [org.kframework.attributes.Location(Location(234,1,251,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
  syntax priority #KRewrite > #withConfig
  syntax associativity non-assoc #KRewrite
  syntax K ::= K "=>" K [klabel(#KRewrite) poly(0, 1, 2) symbol()]
  syntax K ::= K "#as" K [klabel(#KAs) poly(0, 1, 2) symbol()]
  syntax K ::= "#fun" "(" K "=>" K ")" "(" K ")" [klabel(#fun3) poly(0, 2; 1, 3) symbol()]
  syntax K ::= "#fun" "(" K ")" "(" K ")" [klabel(#fun2) poly(0, 1, 2) prefer() symbol()]
endmodule


module K-BOTTOM-SORT [org.kframework.attributes.Location(Location(160,1,163,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-BOTTOM-SORT$SYNTAX [org.kframework.attributes.Location(Location(160,1,163,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott [poly(0)]
endmodule


module K-EQUAL [org.kframework.attributes.Location(Location(800,1,831,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports BOOL
  imports BASIC-K
  rule `_==Bool__BOOL`(#SemanticCastToBool(K1),#SemanticCastToBool(K2))=>`_==K_`(#SemanticCastToBool(K1),#SemanticCastToBool(K2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(824) org.kframework.attributes.Location(Location(824,8,824,43)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2))=>`notBool_`(`_==K_`(#SemanticCastToK(K1),#SemanticCastToK(K2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(822) org.kframework.attributes.Location(Location(822,8,822,45)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(C),#SemanticCastToK(_),#SemanticCastToK(B2))=>#SemanticCastToK(B2) requires `notBool_`(#SemanticCastToBool(C)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(829) org.kframework.attributes.Location(Location(829,8,829,67)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `#if_#then_#else_#fi_K-EQUAL`(#SemanticCastToBool(C),#SemanticCastToK(B1),#SemanticCastToK(_))=>#SemanticCastToK(B1) requires #SemanticCastToBool(C) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(828) org.kframework.attributes.Location(Location(828,8,828,59)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  ModuleComment( Set membership over terms. In addition to equality over
      concrete patterns, K also supports computing equality
      between a concrete pattern and a symbolic pattern.
      This is compiled efficiently down to pattern matching,
      and can be used by putting a term with unbound variables
      in the left child of :=K or =/=K. Note that this does not
      bind variables used on the lhs however (although this may
      change in the future).,[org.kframework.attributes.Location(Location(808,3,815,30)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module K-EQUAL$SYNTAX [org.kframework.attributes.Location(Location(800,1,831,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority _:=K_ _=/=K_ _:/=K_ _==K_ > #And _andThenBool__BOOL #Implies #Floor _impliesBool__BOOL #Exists #Ceil _andBool_ _orElseBool__BOOL #Forall #Not #Or notBool_ _orBool__BOOL #AG #Equals _xorBool__BOOL
  syntax associativity left _=/=K_ _==K_
  syntax associativity left _:=K_ _:/=K_
  syntax K ::= "#if" Bool "#then" K "#else" K "#fi" [function() functional() hook(KEQUAL.ite) poly(0, 2, 3) smt-hook(ite)]
  syntax Bool ::= K "==K" K [equalEqualK() function() functional() hook(KEQUAL.eq) klabel(_==K_) latex({#1}\mathrel{=_K}{#2}) smt-hook(=) symbol()]
  syntax Bool ::= K "=/=K" K [function() functional() hook(KEQUAL.ne) klabel(_=/=K_) latex({#1}\mathrel{\neq_K}{#2}) notEqualEqualK() smt-hook(distinct) symbol()]
  syntax Bool ::= K ":=K" K [equalEqualK() function() functional() klabel(_:=K_) symbol()]
  syntax Bool ::= K ":/=K" K [function() functional() klabel(_:/=K_) notEqualEqualK() symbol()]
endmodule


module K-IO [org.kframework.attributes.Location(Location(867,1,997,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING
  imports LIST
  imports K-REFLECTION
  imports K-IO$SYNTAX
  rule `#stdout_K-IO`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(970) org.kframework.attributes.Location(Location(970,8,970,20)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#stdin_K-IO`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(969) org.kframework.attributes.Location(Location(969,8,969,19)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#stderr_K-IO`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(971) org.kframework.attributes.Location(Location(971,8,971,20)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `#open(_)_K-IO`(#SemanticCastToString(S))=>`#open(_,_)_K-IO`(#SemanticCastToString(S),#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(963) org.kframework.attributes.Location(Location(963,8,963,48)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #projectString(#SemanticCastToString(S))=>#SemanticCastToString(S) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(994) org.kframework.attributes.Location(Location(994,8,994,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule #projectInt(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(996) org.kframework.attributes.Location(Location(996,8,996,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  ModuleComment( stdout ,[org.kframework.attributes.Location(Location(981,71,981,82)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( stderr ,[org.kframework.attributes.Location(Location(981,95,981,106)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( exit code ,[org.kframework.attributes.Location(Location(981,44,981,58)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( executes the given command line with `sh -c cmd:String` on unix or,[org.kframework.attributes.Location(Location(978,3,978,72)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( `cmd /c cmd:String` on windows and returns #systemResult,[org.kframework.attributes.Location(Location(979,3,979,62)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( System,[org.kframework.attributes.Location(Location(976,1,976,10)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Remove a file or empty directory from the disk. Returns .K on success or an IOError on failure.,[org.kframework.attributes.Location(Location(989,3,989,101)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( ------------------------------,[org.kframework.attributes.Location(Location(975,1,975,34)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( #tempFile(path: String, fd: Int),[org.kframework.attributes.Location(Location(987,21,987,56)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( #make safe temp ( prefix:String, suffix:String):IOFile - creates a temporary file in the default system location,[org.kframework.attributes.Location(Location(984,3,984,118)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module K-IO$SYNTAX [org.kframework.attributes.Location(Location(867,1,997,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports LIST$SYNTAX
  imports K-REFLECTION$SYNTAX
  syntax String ::= "#projectString" "(" IOString ")" [function() klabel(#projectString)]
  syntax Stream ::= "#buffer" "(" K ")" [klabel(#buffer)]
  syntax KItem ::= "#systemResult" "(" Int "," String "," String ")"
  syntax KItem ::= "#system" "(" String ")" [function() hook(IO.system) impure() klabel(#system)]
  syntax KItem ::= "#stat" "(" String ")" [function() hook(IO.stat) impure()]
  syntax KItem ::= "#opendir" "(" String ")" [function() hook(IO.opendir) impure()]
  syntax KItem ::= "#lstat" "(" String ")" [function() hook(IO.lstat) impure()]
  syntax K ::= "#write" "(" Int "," String ")" [function() hook(IO.write) impure()]
  syntax K ::= "#unlock" "(" Int "," Int ")" [function() hook(IO.unlock) impure()]
  syntax K ::= "#seekEnd" "(" Int "," Int ")" [function() hook(IO.seekEnd) impure()]
  syntax K ::= "#seek" "(" Int "," Int ")" [function() hook(IO.seek) impure()]
  syntax K ::= "#remove" "(" String ")" [function() functional() hook(IO.remove) impure() klabel(#remove)]
  syntax K ::= "#putc" "(" Int "," Int ")" [function() hook(IO.putc) impure()]
  syntax K ::= "#logToFile" "(" String "," String ")" [function() functional() hook(IO.log) impure() klabel(#logToFile) returnsUnit()]
  syntax K ::= "#lock" "(" Int "," Int ")" [function() hook(IO.lock) impure()]
  syntax K ::= "#close" "(" Int ")" [function() hook(IO.close) impure()]
  syntax Int ::= "#stdout" [function() functional()]
  syntax Int ::= "#stdin" [function() functional()]
  syntax Int ::= "#stderr" [function() functional()]
  syntax Int ::= "#projectInt" "(" IOInt ")" [function() klabel(#projectInt)]
  syntax IOString ::= String
  syntax IOString ::= IOError
  syntax IOString ::= "#read" "(" Int "," Int ")" [function() hook(IO.read) impure()]
  syntax IOInt ::= Int
  syntax IOInt ::= IOError
  syntax IOInt ::= "#tell" "(" Int ")" [function() hook(IO.tell) impure()]
  syntax IOInt ::= "#open" "(" String "," String ")" [function() hook(IO.open) impure()]
  syntax IOInt ::= "#open" "(" String ")" [function()]
  syntax IOInt ::= "#getc" "(" Int ")" [function() hook(IO.getc) impure()]
  syntax IOFile ::= IOError
  syntax IOFile ::= "#tempFile" "(" String "," Int ")"
  syntax IOFile ::= "#mkstemp" "(" String "," String ")" [function() hook(IO.mkstemp) impure() klabel(#mkstemp)]
  syntax IOError ::= "#unknownIOError" "(" Int ")" [klabel(#unknownIOError) symbol()]
  syntax IOError ::= "#EXDEV" [klabel(#EXDEV) symbol()]
  syntax IOError ::= "#EWOULDBLOCK" [klabel(#EWOULDBLOCK) symbol()]
  syntax IOError ::= "#ETOOMANYREFS" [klabel(#ETOOMANYREFS) symbol()]
  syntax IOError ::= "#ETIMEDOUT" [klabel(#ETIMEDOUT) symbol()]
  syntax IOError ::= "#ESRCH" [klabel(#ESRCH) symbol()]
  syntax IOError ::= "#ESPIPE" [klabel(#ESPIPE) symbol()]
  syntax IOError ::= "#ESOCKTNOSUPPORT" [klabel(#ESOCKTNOSUPPORT) symbol()]
  syntax IOError ::= "#ESHUTDOWN" [klabel(#ESHUTDOWN) symbol()]
  syntax IOError ::= "#EROFS" [klabel(#EROFS) symbol()]
  syntax IOError ::= "#ERANGE" [klabel(#ERANGE) symbol()]
  syntax IOError ::= "#EPROTOTYPE" [klabel(#EPROTOTYPE) symbol()]
  syntax IOError ::= "#EPROTONOSUPPORT" [klabel(#EPROTONOSUPPORT) symbol()]
  syntax IOError ::= "#EPIPE" [klabel(#EPIPE) symbol()]
  syntax IOError ::= "#EPFNOSUPPORT" [klabel(#EPFNOSUPPORT) symbol()]
  syntax IOError ::= "#EPERM" [klabel(#EPERM) symbol()]
  syntax IOError ::= "#EOVERFLOW" [klabel(#EOVERFLOW) symbol()]
  syntax IOError ::= "#EOPNOTSUPP" [klabel(#EOPNOTSUPP) symbol()]
  syntax IOError ::= "#EOF" [klabel(#EOF) symbol()]
  syntax IOError ::= "#ENXIO" [klabel(#ENXIO) symbol()]
  syntax IOError ::= "#ENOTTY" [klabel(#ENOTTY) symbol()]
  syntax IOError ::= "#ENOTSOCK" [klabel(#ENOTSOCK) symbol()]
  syntax IOError ::= "#ENOTEMPTY" [klabel(#ENOTEMPTY) symbol()]
  syntax IOError ::= "#ENOTDIR" [klabel(#ENOTDIR) symbol()]
  syntax IOError ::= "#ENOTCONN" [klabel(#ENOTCONN) symbol()]
  syntax IOError ::= "#ENOSYS" [klabel(#ENOSYS) symbol()]
  syntax IOError ::= "#ENOSPC" [klabel(#ENOSPC) symbol()]
  syntax IOError ::= "#ENOPROTOOPT" [klabel(#ENOPROTOOPT) symbol()]
  syntax IOError ::= "#ENOMEM" [klabel(#ENOMEM) symbol()]
  syntax IOError ::= "#ENOLCK" [klabel(#ENOLCK) symbol()]
  syntax IOError ::= "#ENOEXEC" [klabel(#ENOEXEC) symbol()]
  syntax IOError ::= "#ENOENT" [klabel(#ENOENT) symbol()]
  syntax IOError ::= "#ENODEV" [klabel(#ENODEV) symbol()]
  syntax IOError ::= "#ENOBUFS" [klabel(#ENOBUFS) symbol()]
  syntax IOError ::= "#ENFILE" [klabel(#ENFILE) symbol()]
  syntax IOError ::= "#ENETUNREACH" [klabel(#ENETUNREACH) symbol()]
  syntax IOError ::= "#ENETRESET" [klabel(#ENETRESET) symbol()]
  syntax IOError ::= "#ENETDOWN" [klabel(#ENETDOWN) symbol()]
  syntax IOError ::= "#ENAMETOOLONG" [klabel(#ENAMETOOLONG) symbol()]
  syntax IOError ::= "#EMSGSIZE" [klabel(#EMSGSIZE) symbol()]
  syntax IOError ::= "#EMLINK" [klabel(#EMLINK) symbol()]
  syntax IOError ::= "#EMFILE" [klabel(#EMFILE) symbol()]
  syntax IOError ::= "#ELOOP" [klabel(#ELOOP) symbol()]
  syntax IOError ::= "#EISDIR" [klabel(#EISDIR) symbol()]
  syntax IOError ::= "#EISCONN" [klabel(#EISCONN) symbol()]
  syntax IOError ::= "#EIO" [klabel(#EIO) symbol()]
  syntax IOError ::= "#EINVAL" [klabel(#EINVAL) symbol()]
  syntax IOError ::= "#EINTR" [klabel(#EINTR) symbol()]
  syntax IOError ::= "#EINPROGRESS" [klabel(#EINPROGRESS) symbol()]
  syntax IOError ::= "#EHOSTUNREACH" [klabel(#EHOSTUNREACH) symbol()]
  syntax IOError ::= "#EHOSTDOWN" [klabel(#EHOSTDOWN) symbol()]
  syntax IOError ::= "#EFBIG" [klabel(#EFBIG) symbol()]
  syntax IOError ::= "#EFAULT" [klabel(#EFAULT) symbol()]
  syntax IOError ::= "#EEXIST" [klabel(#EEXIST) symbol()]
  syntax IOError ::= "#EDOM" [klabel(#EDOM) symbol()]
  syntax IOError ::= "#EDESTADDRREQ" [klabel(#EDESTADDRREQ) symbol()]
  syntax IOError ::= "#EDEADLK" [klabel(#EDEADLK) symbol()]
  syntax IOError ::= "#ECONNRESET" [klabel(#ECONNRESET) symbol()]
  syntax IOError ::= "#ECONNREFUSED" [klabel(#ECONNREFUSED) symbol()]
  syntax IOError ::= "#ECONNABORTED" [klabel(#ECONNABORTED) symbol()]
  syntax IOError ::= "#ECHILD" [klabel(#ECHILD) symbol()]
  syntax IOError ::= "#EBUSY" [klabel(#EBUSY) symbol()]
  syntax IOError ::= "#EBADF" [klabel(#EBADF) symbol()]
  syntax IOError ::= "#EALREADY" [klabel(#EALREADY) symbol()]
  syntax IOError ::= "#EAGAIN" [klabel(#EAGAIN) symbol()]
  syntax IOError ::= "#EAFNOSUPPORT" [klabel(#EAFNOSUPPORT) symbol()]
  syntax IOError ::= "#EADDRNOTAVAIL" [klabel(#EADDRNOTAVAIL) symbol()]
  syntax IOError ::= "#EADDRINUSE" [klabel(#EADDRINUSE) symbol()]
  syntax IOError ::= "#EACCES" [klabel(#EACCES) symbol()]
  syntax IOError ::= "#E2BIG" [klabel(#E2BIG) symbol()]
endmodule


module K-REFLECTION [org.kframework.attributes.Location(Location(833,1,853,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING
  imports K-REFLECTION$SYNTAX
  imports BASIC-K
  ModuleComment( undefined,[org.kframework.attributes.Location(Location(846,3,846,15)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( meaningful only for the purposes of compilation to a binary, otherwise,[org.kframework.attributes.Location(Location(845,3,845,76)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Takes as input a string and returns a K term,[org.kframework.attributes.Location(Location(849,3,849,50)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module K-REFLECTION$SYNTAX [org.kframework.attributes.Location(Location(833,1,853,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax String ::= "#sort" "(" K ")" [function() hook(KREFLECTION.sort) klabel(#sort)]
  syntax String ::= "#getenv" "(" String ")" [function() hook(KREFLECTION.getenv) impure() klabel(#getenv)]
  syntax List ::= "#argv" "(" ")" [function() hook(KREFLECTION.argv) klabel(#argv)]
  syntax KItem ::= "getKLabel" "(" K ")" [function() hook(KREFLECTION.getKLabel) klabel(getKLabel)]
  syntax KItem ::= "#parseKAST" "(" String ")" [function() hook(KREFLECTION.parseKAST) klabel(#parseKAST) poly(0)]
  syntax KItem ::= "#fresh" "(" String ")" [function() hook(KREFLECTION.fresh) impure() klabel(#fresh)]
  syntax K ::= "#configuration" [function() hook(KREFLECTION.configuration) impure()]
  syntax IOError ::= "#noParse" "(" String ")" [klabel(#noParse) symbol()]
endmodule


module K-SORT-LATTICE [org.kframework.attributes.Location(Location(165,1,168,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports K-TOP-SORT
  imports K-SORT-LATTICE$SYNTAX
  imports K-BOTTOM-SORT
endmodule


module K-SORT-LATTICE$SYNTAX [org.kframework.attributes.Location(Location(165,1,168,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports K-TOP-SORT$SYNTAX
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-TERM [org.kframework.attributes.Location(Location(254,1,260,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-TERM$SYNTAX
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TERM$SYNTAX [org.kframework.attributes.Location(Location(254,1,260,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
endmodule


module K-TOP-SORT [org.kframework.attributes.Location(Location(155,1,158,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-TOP-SORT$SYNTAX
endmodule


module K-TOP-SORT$SYNTAX [org.kframework.attributes.Location(Location(155,1,158,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott [poly(1)]
endmodule


module KAST [org.kframework.attributes.Location(Location(30,1,50,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports KSTRING
  imports KAST$SYNTAX
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
  ModuleComment( something that doesn't collide with meta-variables,[org.kframework.attributes.Location(Location(44,24,44,77)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module KAST$SYNTAX [org.kframework.attributes.Location(Location(30,1,50,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports KSTRING$SYNTAX
  imports BUILTIN-ID-TOKENS$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left #KList
  syntax KList ::= KList "," KList [assoc() klabel(#KList) left() prefer() symbol() unit(#EmptyKList)]
  syntax KList ::= K
  syntax KList ::= ".KList" [klabel(#EmptyKList) symbol()]
  syntax KList ::= ".::KList" [klabel(#EmptyKList) symbol()]
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`" [token()]
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*" [autoReject() prec(1) token()]
  syntax KLabel ::= #LowerId [autoReject() token()]
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")" [klabel(#KApply) symbol()]
  syntax KBott ::= "#token" "(" KString "," KString ")" [klabel(#KToken) symbol()]
  syntax KBott ::= "#klabel" "(" KLabel ")" [klabel(#WrappedKLabel) symbol()]
endmodule


module KCELLS [org.kframework.attributes.Location(Location(98,1,111,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports KCELLS$SYNTAX
  imports KAST
endmodule


module KCELLS$SYNTAX [org.kframework.attributes.Location(Location(98,1,111,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports KAST$SYNTAX
  syntax associativity non-assoc #withConfig
  syntax associativity left #cells
  syntax K ::= Bag
  syntax Cell [org.kframework.attributes.Location(Location(101,3,101,13)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag [assoc() klabel(#cells) left() symbol() unit(#cells)]
  syntax Bag ::= ".Bag" [klabel(#cells) symbol()]
  syntax Bag ::= ".::Bag" [klabel(#cells) symbol()]
  syntax Bag ::= "(" Bag ")" [bracket()]
  syntax #RuleBody ::= "[" "[" K "]" "]" Bag [avoid() klabel(#withConfig) symbol()]
endmodule


module KRYPTO [org.kframework.attributes.Location(Location(7,1,36,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/krypto.k))]
  imports STRING-SYNTAX
  imports LIST
  imports KRYPTO$SYNTAX
endmodule


module KRYPTO$SYNTAX [org.kframework.attributes.Location(Location(7,1,36,9)) org.kframework.attributes.Source(Source(/home/andreim/go/src/github.com/ElrondNetwork/elrond-vm/iele/elrond/node/krypto.k))]
  imports STRING-SYNTAX$SYNTAX
  imports LIST$SYNTAX
  syntax String ::= "Sha256" "(" String ")" [function() hook(KRYPTO.sha256) klabel(Sha256)]
  syntax String ::= "RipEmd160" "(" String ")" [function() hook(KRYPTO.ripemd160) klabel(RipEmd160)]
  syntax String ::= "Keccak256" "(" String ")" [function() hook(KRYPTO.keccak256) klabel(Keccak256)]
  syntax String ::= "ECDSARecover" "(" String "," Int "," String "," String ")" [function() hook(KRYPTO.ecdsaRecover) klabel(ECDSARecover)]
  syntax G2Point ::= "(" Int "x" Int "," Int "x" Int ")"
  syntax G1Point ::= "BN128Mul" "(" G1Point "," Int ")" [function() hook(KRYPTO.bn128mul) klabel(BN128Mul)]
  syntax G1Point ::= "BN128Add" "(" G1Point "," G1Point ")" [function() hook(KRYPTO.bn128add) klabel(BN128Add)]
  syntax G1Point ::= "(" Int "," Int ")"
  syntax Bool ::= "isValidPoint" "(" G2Point ")" [function() hook(KRYPTO.bn128g2valid) klabel(isValidG2Point)]
  syntax Bool ::= "isValidPoint" "(" G1Point ")" [function() hook(KRYPTO.bn128valid) klabel(isValidPoint)]
  syntax Bool ::= "BN128AtePairing" "(" List "," List ")" [function() hook(KRYPTO.bn128ate) klabel(BN128AtePairing)]
endmodule


module KSEQ [org.kframework.attributes.Location(Location(54,1,63,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  imports KAST
  imports K-TOP-SORT
endmodule


module KSEQ$SYNTAX [org.kframework.attributes.Location(Location(54,1,63,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports KAST$SYNTAX
  imports K-TOP-SORT$SYNTAX
  syntax associativity left #KSequence
  syntax K ::= K "~>" K [assoc() klabel(#KSequence) left() symbol() unit(#EmptyK)]
  syntax K ::= ".K" [klabel(#EmptyK) symbol() unparseAvoid()]
  syntax K ::= ".::K" [klabel(#EmptyK) symbol() unparseAvoid()]
  syntax K ::= "." [klabel(#EmptyK) symbol()]
  syntax K ::= "(" K ")" [bracket() poly(0, 1)]
endmodule


module KSEQ-SYMBOLIC [org.kframework.attributes.Location(Location(86,1,96,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports KSEQ
endmodule


module KSEQ-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(86,1,96,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  imports KSEQ$SYNTAX
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\$)([A-Z][A-Za-z0-9'_]*)" [autoReject() token()]
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\!|\\?)?([A-Z][A-Za-z0-9'_]*|_)" [autoReject() prec(1) token()]
  syntax #KVariable ::= #UpperId [autoReject() token()]
endmodule


module KSTRING [org.kframework.attributes.Location(Location(15,1,18,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports KSTRING$SYNTAX
  ModuleComment( optionally qualified strings, like in Scala "abc", i"abc", r"a*bc", etc.,[org.kframework.attributes.Location(Location(17,3,17,78)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module KSTRING$SYNTAX [org.kframework.attributes.Location(Location(15,1,18,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
endmodule


module LIST [org.kframework.attributes.Location(Location(228,1,293,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(268,17,268,24)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(TODO(AndreiS): move the paragraph below,[org.kframework.attributes.Location(Location(244,3,244,44)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( \section{User-Defined Lists} It is very common in \K to define a shorthand
   for lists of user-defined sorts. \K 's builtin way of doing this is to use
   List\{KItem,"Separator"\}, where "Separator" is any valid character or
   sequence of characters used to separate distinct elements.
   For example, after defining \\
   syntax KItem ::= Elt\\
   a user could then define
   syntax Elts ::= List\{Elt,","\} \\
   which would be a comma-separated list whose elements are all of sort Elt. A
   user could just as well define \\
   syntax Elts ::= List\{Elt,"and"\} \\
   which would be a list containing elements of sort Elt that are separated with
   the word "and". If only one argument is given, the separator is asumed to be
   commas. So, \\
   syntax Elts = List\{Elt\} \\
   would define a comma-separated list containing elements of sort Elt.
  ,[org.kframework.attributes.Location(Location(245,3,261,4)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( \section{Description} \K lists are ordered collections that may contain
   duplicate elements. These behave more like lists in functional programming
   languages than arrays in imperative programming languages; there's no
   numerical indexing, but instead specific elements are refered to using the
   Mylist,Mylist construct in combination with the MyListItem construct. It's
   worth noting that \K lists aren't exactly like lists in functional languages;
   they're associative, which means that it's easy to access elements at both
   ends of the lists and concatenate them. For example, L:Mylist,E accesses
   element E at the end of a list. ,[org.kframework.attributes.Location(Location(234,3,242,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Remove elements from the beginning and the end of the List. ,[org.kframework.attributes.Location(Location(285,3,285,68)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get the list length ,[org.kframework.attributes.Location(Location(291,3,291,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get an element form the List by index. Positive indices mean from the
   beginning (0 is the first element), and negative indices mean from the end
   (-1 is the last element). ,[org.kframework.attributes.Location(Location(272,3,274,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct an empty List: ,[org.kframework.attributes.Location(Location(266,3,266,33)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct a singleton List (a list with only  one element) ,[org.kframework.attributes.Location(Location(269,3,269,67)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct a new List as the concatenation of two Lists. This is similar to
   the append "@" operation in many functional programming languages. ,[org.kframework.attributes.Location(Location(263,3,264,72)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Check element membership in the given list ,[org.kframework.attributes.Location(Location(288,3,288,51)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module LIST$SYNTAX [org.kframework.attributes.Location(Location(228,1,293,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _List_
  syntax List [hook(LIST.List) org.kframework.attributes.Location(Location(232,3,232,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax List ::= List List [assoc() element(ListItem) format(%1%n%2) function() functional() hook(LIST.concat) klabel(_List_) left() smtlib(smt_seq_concat) symbol() unit(.List)]
  syntax List ::= List "[" Int "<-" KItem "]" [function() hook(LIST.update) klabel(List:set)]
  syntax List ::= "updateList" "(" List "," Int "," List ")" [function() hook(LIST.updateAll) klabel(updateList)]
  syntax List ::= "range" "(" List "," Int "," Int ")" [function() hook(LIST.range) klabel(List:range) symbol()]
  syntax List ::= "makeList" "(" Int "," KItem ")" [function() hook(LIST.make) klabel(makeList)]
  syntax List ::= "fillList" "(" List "," Int "," Int "," KItem ")" [function() hook(LIST.fill) klabel(fillList)]
  syntax List ::= "ListItem" "(" KItem ")" [function() functional() hook(LIST.element) klabel(ListItem) smtlib(smt_seq_elem) symbol()]
  syntax List ::= ".List" [function() functional() hook(LIST.unit) klabel(.List) latex(\dotCt{List}) smtlib(smt_seq_nil) symbol()]
  syntax KItem ::= List "[" Int "]" [function() hook(LIST.get) klabel(List:get) symbol()]
  syntax Int ::= "size" "(" List ")" [function() functional() hook(LIST.size) klabel(sizeList) smtlib(smt_seq_len)]
  syntax Bool ::= KItem "in" List [function() functional() hook(LIST.in) klabel(_inList_)]
endmodule


module MAP [org.kframework.attributes.Location(Location(92,1,156,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports SET
  imports MAP$SYNTAX
  imports LIST
  ModuleComment(| "."                            [function, hook(MAP.unit)],[org.kframework.attributes.Location(Location(108,16,108,77)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(\section{Description} The Map represents a generalized associative array.
   Each key can be paired with an arbitrary value, and can be used to reference
   its associated value. Multiple bindings for the same key are not allowed. ,[org.kframework.attributes.Location(Location(98,3,100,79)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( breaks klabel uniqueness,[org.kframework.attributes.Location(Location(107,16,107,43)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Update the first map by adding all key/value pairs in the second map. If a
   key in the first map exists also in the second map, its associated value will
   be overwritten by the value from the second map. ,[org.kframework.attributes.Location(Location(131,3,133,54)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Update the Map by removing all key/value pairs with the key in the Set. ,[org.kframework.attributes.Location(Location(136,3,136,80)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Update a Map in form of  of keys and values: ,[org.kframework.attributes.Location(Location(121,3,121,53)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Retrieve the value associated with the given key ,[org.kframework.attributes.Location(Location(116,3,116,57)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Remove key/value pair associated with the key from map? ,[org.kframework.attributes.Location(Location(124,3,124,64)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get the difference of two maps interpreted as sets of entries
   ($M_1 \setminus M2$) ,[org.kframework.attributes.Location(Location(127,3,128,26)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get the Map size (number of key/value pairs) ,[org.kframework.attributes.Location(Location(148,3,148,53)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen key of the Map  ,[org.kframework.attributes.Location(Location(154,3,154,50)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get a Set consisting of all keys in the Map:,[org.kframework.attributes.Location(Location(139,3,139,52)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get a List consisting of all values in the Map: ,[org.kframework.attributes.Location(Location(145,3,145,56)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Map (a Map with only one key/value pair). The key
   is on the left and the value is on the right ,[org.kframework.attributes.Location(Location(109,3,110,50)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct a new Map consisting of key/value pairs of two Maps (the keys of
   the two Maps are assumed disjoint) ,[org.kframework.attributes.Location(Location(102,3,103,40)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Check map inclusion ,[org.kframework.attributes.Location(Location(151,3,151,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(  Construct an empty Map ,[org.kframework.attributes.Location(Location(105,3,105,32)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module MAP$SYNTAX [org.kframework.attributes.Location(Location(92,1,156,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports LIST$SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")" [function() functional() hook(MAP.keys) klabel(keys)]
  syntax Map [hook(MAP.Map) org.kframework.attributes.Location(Location(96,3,96,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Map ::= Map Map [assoc() comm() element(_|->_) format(%1%n%2) function() hook(MAP.concat) index(0) klabel(_Map_) left() symbol() unit(.Map)]
  syntax Map ::= Map "[" KItem "<-" KItem "]" [function() functional() hook(MAP.update) prefer()]
  syntax Map ::= Map "[" KItem "<-" "undef" "]" [function() functional() hook(MAP.remove) klabel(_[_<-undef]) symbol()]
  syntax Map ::= Map "-Map" Map [function() functional() hook(MAP.difference) latex({#1}-_{\it Map}{#2})]
  syntax Map ::= KItem "|->" KItem [function() functional() hook(MAP.element) klabel(_|->_) latex({#1}\mapsto{#2}) symbol()]
  syntax Map ::= "updateMap" "(" Map "," Map ")" [function() functional() hook(MAP.updateAll) klabel(updateMap)]
  syntax Map ::= "removeAll" "(" Map "," Set ")" [function() functional() hook(MAP.removeAll) klabel(removeAll)]
  syntax Map ::= ".Map" [function() functional() hook(MAP.unit) klabel(.Map) latex(\dotCt{Map}) symbol()]
  syntax List ::= "values" "(" Map ")" [function() hook(MAP.values) klabel(values)]
  syntax List ::= "keys_list" "(" Map ")" [function() hook(MAP.keys_list)]
  syntax KItem ::= Map "[" KItem "]" [function() hook(MAP.lookup) klabel(Map:lookup) symbol()]
  syntax KItem ::= Map "[" KItem "]" "orDefault" KItem [function() functional() hook(MAP.lookupOrDefault) klabel(Map:lookupOrDefault)]
  syntax KItem ::= "choice" "(" Map ")" [function() hook(MAP.choice) klabel(Map:choice)]
  syntax Int ::= "size" "(" Map ")" [function() functional() hook(MAP.size) klabel(sizeMap)]
  syntax Bool ::= Map "<=Map" Map [function() functional() hook(MAP.inclusion)]
  syntax Bool ::= KItem "in_keys" "(" Map ")" [function() functional() hook(MAP.in_keys)]
endmodule


module MINT$SYNTAX [org.kframework.attributes.Location(Location(1171,1,1363,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  syntax MInt [hook(MINT.MInt) org.kframework.attributes.Location(Location(1176,3,1176,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax MInt ::= "xorMInt" "(" MInt "," MInt ")" [function() hook(MINT.xor) klabel(xorMInt) smt-hook(bvxor)]
  syntax MInt ::= "uremMInt" "(" MInt "," MInt ")" [function() hook(MINT.urem) klabel(uremMInt) smt-hook(bvurem)]
  syntax MInt ::= "udivMInt" "(" MInt "," MInt ")" [function() hook(MINT.udiv) klabel(udivMInt) smt-hook(bvudiv)]
  syntax MInt ::= "subMInt" "(" MInt "," MInt ")" [function() hook(MINT.sub) klabel(subMInt) smt-hook(bvsub)]
  syntax MInt ::= "shlMInt" "(" MInt "," Int ")" [function() hook(MINT.shl) klabel(shlMInt) smt-hook(bvshl)]
  syntax MInt ::= "sMinMInt" "(" MInt "," MInt ")" [function() klabel(sMinMInt) smt-hook((ite (bvslt #1 #2) #1 #2))]
  syntax MInt ::= "sMaxMInt" "(" MInt "," MInt ")" [function() klabel(sMaxMInt) smt-hook((ite (bvslt #1 #2) #2 #1))]
  syntax MInt ::= "orMInt" "(" MInt "," MInt ")" [function() hook(MINT.or) klabel(orMInt) smt-hook(bvor)]
  syntax MInt ::= "negMInt" "(" MInt ")" [function() functional() klabel(negMInt)]
  syntax MInt ::= "mulMInt" "(" MInt "," MInt ")" [function() hook(MINT.mul) klabel(mulMInt) smt-hook(bvmul)]
  syntax MInt ::= "miMInt" "(" List ")" [function() klabel(miMInt)]
  syntax MInt ::= "mi" "(" Int "," Int ")" [function() hook(MINT.constructor) klabel(mi)]
  syntax MInt ::= "mIntOfDigits" "(" List ")" [function() hook(MINT.fromDigits) klabel(mIntOfDigits)]
  syntax MInt ::= "lshrMInt" "(" MInt "," Int ")" [function() hook(MINT.lshr) klabel(lshrMInt) smt-hook(bvlshr)]
  syntax MInt ::= "extractMInt" "(" MInt "," Int "," Int ")" [function() hook(MINT.extract) klabel(extractMInt) smt-hook(extract)]
  syntax MInt ::= "concatenateMInt" "(" MInt "," MInt ")" [function() hook(MINT.concatenate) klabel(concatenateMInt) smtlib((concat #2 #1))]
  syntax MInt ::= "ashrMInt" "(" MInt "," Int ")" [function() hook(MINT.ashr) klabel(ashrMInt)]
  syntax MInt ::= "andMInt" "(" MInt "," MInt ")" [function() hook(MINT.and) klabel(andMInt) smt-hook(bvand)]
  syntax MInt ::= "addMInt" "(" MInt "," MInt ")" [function() hook(MINT.add) klabel(addMInt) smt-hook(bvadd)]
  syntax List ::= "usubMInt" "(" MInt "," MInt ")" [function() hook(MINT.usub) klabel(usubMInt)]
  syntax List ::= "umulMInt" "(" MInt "," MInt ")" [function() hook(MINT.umul) klabel(umulMInt)]
  syntax List ::= "uaddMInt" "(" MInt "," MInt ")" [function() hook(MINT.uadd) klabel(uaddMInt)]
  syntax List ::= "ssubMInt" "(" MInt "," MInt ")" [function() hook(MINT.ssub) klabel(ssubMInt)]
  syntax List ::= "sremMInt" "(" MInt "," MInt ")" [function() hook(MINT.srem) klabel(sremMInt)]
  syntax List ::= "smulMInt" "(" MInt "," MInt ")" [function() hook(MINT.smul) klabel(smulMInt)]
  syntax List ::= "sdivMInt" "(" MInt "," MInt ")" [function() hook(MINT.sdiv) klabel(sdivMInt)]
  syntax List ::= "saddMInt" "(" MInt "," MInt ")" [function() hook(MINT.sadd) klabel(saddMInt)]
  syntax List ::= "digitsOfMInt" "(" MInt "," Int "," Int ")" [function() hook(MINT.toDigits) klabel(digitsOfMInt)]
  syntax Int ::= "uvalueMInt" "(" MInt ")" [function() functional() hook(MINT.uvalue) klabel(uvalueMInt) smt-hook(bv2int)]
  syntax Int ::= "uminMInt" "(" Int ")" [function() klabel(uminMInt)]
  syntax Int ::= "umaxMInt" "(" Int ")" [function() klabel(umaxMInt)]
  syntax Int ::= "svalueMInt" "(" MInt ")" [function() functional() hook(MINT.svalue) klabel(svalueMInt)]
  syntax Int ::= "sminMInt" "(" Int ")" [function() klabel(sminMInt)]
  syntax Int ::= "smaxMInt" "(" Int ")" [function() klabel(smaxMInt)]
  syntax Int ::= "bitwidthMInt" "(" MInt ")" [function() functional() hook(MINT.bitwidth) klabel(bitwidthMInt)]
  syntax Bool ::= "zeroMInt" "(" MInt ")" [function() functional() hook(MINT.zero) klabel(zeroMInt)]
  syntax Bool ::= "uoverflowMInt" "(" Int "," Int ")" [function() klabel(uoverflowMInt)]
  syntax Bool ::= "ultMInt" "(" MInt "," MInt ")" [function() hook(MINT.ult) klabel(ultMInt) smt-hook(bvult)]
  syntax Bool ::= "uleMInt" "(" MInt "," MInt ")" [function() hook(MINT.ule) klabel(uleMInt) smt-hook(bvule)]
  syntax Bool ::= "ugtMInt" "(" MInt "," MInt ")" [function() hook(MINT.ugt) klabel(ugtMInt) smt-hook(bvugt)]
  syntax Bool ::= "ugeMInt" "(" MInt "," MInt ")" [function() hook(MINT.uge) klabel(ugeMInt) smt-hook(bvuge)]
  syntax Bool ::= "soverflowMInt" "(" Int "," Int ")" [function() klabel(soverflowMInt)]
  syntax Bool ::= "sltMInt" "(" MInt "," MInt ")" [function() hook(MINT.slt) klabel(sltMInt) smt-hook(bvslt)]
  syntax Bool ::= "sleMInt" "(" MInt "," MInt ")" [function() hook(MINT.sle) klabel(sleMInt) smt-hook(bvsle)]
  syntax Bool ::= "sgtMInt" "(" MInt "," MInt ")" [function() hook(MINT.sgt) klabel(sgtMInt) smt-hook(bvsgt)]
  syntax Bool ::= "sgeMInt" "(" MInt "," MInt ")" [function() hook(MINT.sge) klabel(sgeMInt) smt-hook(bvsge)]
  syntax Bool ::= "overflowMInt" "(" List ")" [function() klabel(overflowMInt)]
  syntax Bool ::= "neMInt" "(" MInt "," MInt ")" [function() hook(MINT.ne) klabel(neMInt) smt-hook(distinct)]
  syntax Bool ::= "eqMInt" "(" MInt "," MInt ")" [function() hook(MINT.eq) klabel(eqMInt) smt-hook(=)]
endmodule


module ML-SYNTAX [org.kframework.attributes.Location(Location(65,1,83,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-K
  imports ML-SYNTAX$SYNTAX
endmodule


module ML-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(65,1,83,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax priority #True #Floor #Ceil #Not #False > #Equals > #And > #Or > #Implies > #Exists #Forall #AG
  syntax associativity left #Or
  syntax associativity left #And
  syntax K ::= K "#Or" K [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#Or) left() mlOp() poly(0, 1, 2) symbol() unit(#False)]
  syntax K ::= K "#Implies" K [format(%i%1%d%n%2%n%i%3%d) klabel(#Implies) mlOp() poly(0, 1, 2) symbol()]
  syntax K ::= K "#And" K [assoc() comm() format(%i%1%d%n%2%n%i%3%d) klabel(#And) left() mlOp() poly(0, 1, 2) symbol() unit(#True)]
  syntax K ::= "{" K "#Equals" K "}" [format(%1%i%n%2%d%n%3%i%n%4%d%n%5) klabel(#Equals) mlOp() poly(1, 2; 0) symbol()]
  syntax K ::= "#True" [klabel(#True) poly(0) symbol()]
  syntax K ::= "#Not" "(" K ")" [klabel(#Not) mlOp() poly(0, 1) symbol()]
  syntax K ::= "#Forall" K "." K [klabel(#Forall) mlBinder() mlOp() poly(1; 0, 2) symbol()]
  syntax K ::= "#Floor" "(" K ")" [klabel(#Floor) mlOp() poly(1; 0) symbol()]
  syntax K ::= "#False" [klabel(#False) poly(0) symbol()]
  syntax K ::= "#Exists" K "." K [klabel(#Exists) mlBinder() mlOp() poly(1; 0, 2) symbol()]
  syntax K ::= "#Ceil" "(" K ")" [klabel(#Ceil) mlOp() poly(1; 0) symbol()]
  syntax K ::= "#AG" "(" K ")" [klabel(#AG) mlOp() poly(0, 1) symbol()]
  syntax #KVariable [org.kframework.attributes.Location(Location(68,3,68,19)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
endmodule


module PROGRAM-LISTS [org.kframework.attributes.Location(Location(193,1,205,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-K
  imports PROGRAM-LISTS$SYNTAX
  ModuleComment( replaces the default productions for lists:,[org.kframework.attributes.Location(Location(196,3,196,49)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( into a series of productions more suitable for programs:,[org.kframework.attributes.Location(Location(199,3,199,62)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(195,3,195,58)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Ne#Es ::= E "," Ne#Es     [klabel('_,_)],[org.kframework.attributes.Location(Location(201,3,201,46)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Es#Terminator ::= ""      [klabel('.Es)],[org.kframework.attributes.Location(Location(200,3,200,46)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Es ::= Ne#Es,[org.kframework.attributes.Location(Location(203,3,203,18)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Es ::= E "," Es [userList("*"), klabel('_,_)],[org.kframework.attributes.Location(Location(197,3,197,51)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment(      | Es#Terminator      // if the list is *,[org.kframework.attributes.Location(Location(204,3,204,51)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment(      | ".Es"    [userList("*"), klabel('.Es)],[org.kframework.attributes.Location(Location(198,3,198,51)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment(         | E Es#Terminator [klabel('_,_)],[org.kframework.attributes.Location(Location(202,3,202,46)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module PROGRAM-LISTS$SYNTAX [org.kframework.attributes.Location(Location(193,1,205,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
endmodule


module RECORD-PRODUCTIONS [org.kframework.attributes.Location(Location(226,1,231,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  ModuleComment( will be able to be parsed with don't-care variables according,[org.kframework.attributes.Location(Location(229,3,229,67)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( to their nonterminal's names,[org.kframework.attributes.Location(Location(230,3,230,34)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( syntax Sort ::= name(Args),[org.kframework.attributes.Location(Location(228,3,228,32)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( if this module is imported, prefix productions of the form,[org.kframework.attributes.Location(Location(227,3,227,64)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module RECORD-PRODUCTIONS$SYNTAX [org.kframework.attributes.Location(Location(226,1,231,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
endmodule


module REQUIRES-ENSURES [org.kframework.attributes.Location(Location(142,1,153,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports BASIC-K
endmodule


module REQUIRES-ENSURES$SYNTAX [org.kframework.attributes.Location(Location(142,1,153,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports BASIC-K$SYNTAX
  syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]
  syntax #RuleContent ::= #RuleBody "when" K [klabel(#ruleRequires) symbol()]
  syntax #RuleContent ::= #RuleBody "when" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]
  syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]
  syntax #RuleContent ::= #RuleBody "requires" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]
  syntax #RuleContent ::= #RuleBody "ensures" K [klabel(#ruleEnsures) symbol()]
  syntax #RuleBody ::= K
endmodule


module RULE-CELLS [org.kframework.attributes.Location(Location(113,1,123,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RULE-LISTS
  imports RULE-CELLS$SYNTAX
  imports KCELLS
  ModuleComment(syntax Cell ::= "<top>" #OptionalDots K #OptionalDots "</top>" [klabel(<top>)],[org.kframework.attributes.Location(Location(119,3,119,83)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(116,3,116,58)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( generates, for all productions that have the attribute 'cell' or 'maincell',,[org.kframework.attributes.Location(Location(117,3,117,82)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( a production like below:,[org.kframework.attributes.Location(Location(118,3,118,30)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module RULE-CELLS$SYNTAX [org.kframework.attributes.Location(Location(113,1,123,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax #OptionalDots ::= "..." [klabel(#dots) symbol()]
  syntax #OptionalDots ::= "" [klabel(#noDots) symbol()]
endmodule


module RULE-LISTS [org.kframework.attributes.Location(Location(207,1,212,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(208,3,208,58)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( adds the subsort production to the parsing module only:,[org.kframework.attributes.Location(Location(209,3,209,61)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
  ModuleComment( Es ::= E        [userList("*")],[org.kframework.attributes.Location(Location(210,3,210,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))])
endmodule


module RULE-LISTS$SYNTAX [org.kframework.attributes.Location(Location(207,1,212,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
endmodule


module RULE-TAG-SYNTAX [org.kframework.attributes.Location(Location(1381,1,1385,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports RULE-TAG-SYNTAX$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module RULE-TAG-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(1381,1,1385,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax #RuleTag ::= #LowerId [token()]
endmodule


module SET [org.kframework.attributes.Location(Location(184,1,226,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(197,16,197,23)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(rule S:Set -Set .Set => S,[org.kframework.attributes.Location(Location(225,3,225,30)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(rule S1:Set -Set (SetItem(K:K) S2:Set) => S1 -Set S2,[org.kframework.attributes.Location(Location(223,3,223,57)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(requires notBool(K in S1),[org.kframework.attributes.Location(Location(224,3,224,30)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( set difference axioms ,[org.kframework.attributes.Location(Location(221,3,221,29)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( \section{Description} The Set represents a mathematical set (a collection
   of unique items). ,[org.kframework.attributes.Location(Location(190,3,191,23)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( TODO(AndreiS): remove this if not used,[org.kframework.attributes.Location(Location(222,3,222,44)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get the intersection of two sets ($A \cap B$) ,[org.kframework.attributes.Location(Location(203,3,203,54)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get the difference of two sets ($A \setminus B$),[org.kframework.attributes.Location(Location(206,3,206,56)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get the cardinality of a set ($|A|$) ,[org.kframework.attributes.Location(Location(215,3,215,45)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen element of the Set ,[org.kframework.attributes.Location(Location(218,3,218,53)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct an empty Set ,[org.kframework.attributes.Location(Location(195,3,195,31)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Set (a Set with only one element $\{ a \}$). To add
   an element $a$ to a set $A$, construct the union of the singleton set
   $\{ a \}$ and $A$ ($\{ a \} \cup A$). ,[org.kframework.attributes.Location(Location(198,3,200,43)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Construct a new Set as the union of two different sets ($A \cup B$) ,[org.kframework.attributes.Location(Location(193,3,193,76)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Check set inclusion ($A \subseteq B$) ,[org.kframework.attributes.Location(Location(212,3,212,46)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Check element membership in a set ($a \in A$) ,[org.kframework.attributes.Location(Location(209,3,209,54)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module SET$SYNTAX [org.kframework.attributes.Location(Location(184,1,226,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _Set_
  syntax Set [hook(SET.Set) org.kframework.attributes.Location(Location(188,3,188,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Set ::= Set Set [assoc() comm() element(SetItem) format(%1%n%2) function() functional() hook(SET.concat) idem() klabel(_Set_) left() symbol() unit(.Set)]
  syntax Set ::= Set "-Set" Set [function() functional() hook(SET.difference) klabel(Set:difference) latex({#1}-_{\it Set}{#2}) symbol()]
  syntax Set ::= "intersectSet" "(" Set "," Set ")" [function() functional() hook(SET.intersection) klabel(intersectSet)]
  syntax Set ::= "SetItem" "(" KItem ")" [function() functional() hook(SET.element) klabel(SetItem) symbol()]
  syntax Set ::= ".Set" [function() functional() hook(SET.unit) klabel(.Set) latex(\dotCt{Set}) symbol()]
  syntax KItem ::= "choice" "(" Set ")" [function() hook(SET.choice) klabel(Set:choice)]
  syntax Int ::= "size" "(" Set ")" [function() functional() hook(SET.size) klabel(size)]
  syntax Bool ::= Set "<=Set" Set [function() functional() hook(SET.inclusion)]
  syntax Bool ::= KItem "in" Set [function() functional() hook(SET.in) klabel(Set:in) symbol()]
endmodule


module SORT-K [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  syntax K [hook(K.K) org.kframework.attributes.Location(Location(5,3,5,22)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
endmodule


module SORT-KBOTT [org.kframework.attributes.Location(Location(25,1,28,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports SORT-K
endmodule


module SORT-KBOTT$SYNTAX [org.kframework.attributes.Location(Location(25,1,28,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KBott [org.kframework.attributes.Location(Location(27,3,27,14)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/kast.k))]
endmodule


module STDIN-STREAM [org.kframework.attributes.Location(Location(1005,1,1099,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STDIN-STREAM$SYNTAX
  imports MAP
  imports K-REFLECTION
  imports K-IO
  syntax Cell ::= StdinCell
  rule initStdinCell(Init)=>`<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#buffer(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$STDIN","KConfigVar")))))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(#istream(`#stdin_K-IO`(.KList)))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(_),#SemanticCastToString(Delimiters))),`ListItem`(#buffer(#SemanticCastToString(S)=>`_+String__STRING`(#SemanticCastToString(S),chrChar(#projectInt(`#getc(_)_K-IO`(#SemanticCastToInt(N)))))))),`ListItem`(#token("\"on\"","String"))),`ListItem`(#istream(#SemanticCastToInt(N)))),#noDots(.KList)) requires `_==Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1016) label(STDIN-STREAM.stdinGetc) org.kframework.attributes.Location(Location(1016,8,1022,49)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#token("\"String\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(#SemanticCastToString(S)),`ListItem`(#buffer(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1027) label(STDIN-STREAM.stdinParseString) org.kframework.attributes.Location(Location(1027,8,1032,50)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#token("\"Int\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(`String2Int`(substrString(#SemanticCastToString(S),#token("0","Int"),findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int"))))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),`_+Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("1","Int")),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_>Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1037) label(STDIN-STREAM.stdinParseInt) org.kframework.attributes.Location(Location(1037,8,1044,38)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(Sort),#SemanticCastToString(Delimiters)))=>`ListItem`(#parseKAST(substrString(#SemanticCastToString(S),#token("0","Int"),findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int"))))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),`_+Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("1","Int")),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_andBool_`(`_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_==String__STRING`(#SemanticCastToString(Sort),#token("\"K\"","String"))),`_>Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1048) label(STDIN-STREAM.stdinParseArbitrarySort) org.kframework.attributes.Location(Location(1048,8,1056,38)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(Sort),#SemanticCastToString(Delimiters))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),#token("1","Int"),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_andBool_`(`_=/=Int__INT-COMMON`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_=/=String__STRING`(#SemanticCastToString(Sort),#token("\"String\"","String"))),`_<=Int__INT-COMMON`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1060) label(STDIN-STREAM.stdinTrim) org.kframework.attributes.Location(Location(1060,8,1067,39)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  rule `<stdin>`(#noDots(.KList),`_List_`(`.List`(.KList)=>`ListItem`(#parseInput(#SemanticCastToString(?Sort),#SemanticCastToString(?Delimiters))),`ListItem`(#buffer(#SemanticCastToString(_)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1085) label(STDIN-STREAM.stdinUnblock) org.kframework.attributes.Location(Location(1085,8,1089,16)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) unblock()]
  ModuleComment(,[org.kframework.attributes.Location(Location(1081,3,1081,5)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( when we reach whitespace, if it parses create a ListItem,[org.kframework.attributes.Location(Location(1025,3,1025,62)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( when necessary according to user-defined rules, since otherwise it will,[org.kframework.attributes.Location(Location(1071,3,1071,77)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( way will get stuck in concrete execution mode with real IO enabled (i.e.,,[org.kframework.attributes.Location(Location(1077,3,1077,79)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( under `--io on` option), while they will still work in symbolic execution,[org.kframework.attributes.Location(Location(1078,3,1078,79)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( read one character at a time until we read whitespace,[org.kframework.attributes.Location(Location(1014,3,1014,59)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( off`, `--search`, or `--debug` options).,[org.kframework.attributes.Location(Location(1080,3,1080,46)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( mode or concrete execution mode with real IO disabled (i.e., under `--io,[org.kframework.attributes.Location(Location(1079,3,1079,78)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( lead to a diverging (i.e., non-terminating) transition system definition.,[org.kframework.attributes.Location(Location(1072,3,1072,79)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( input stream cell, e.g.,,[org.kframework.attributes.Location(Location(1074,3,1074,30)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( have a way to specify such patterns.,[org.kframework.attributes.Location(Location(1083,3,1083,42)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( a hack: handle the case when we read integers without the help of the IO server,[org.kframework.attributes.Location(Location(1035,3,1035,85)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1067,40,1067,50)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1056,39,1056,49)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1044,39,1044,49)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1032,51,1032,61)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdin],[org.kframework.attributes.Location(Location(1022,50,1022,60)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( TODO: More patterns need to be supported as well. In that case, we need to,[org.kframework.attributes.Location(Location(1082,3,1082,80)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Non-supported rules that refer to the input stream cell in a sophisticated,[org.kframework.attributes.Location(Location(1076,3,1076,80)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( NOTE: This unblocking rule will be instantiated and inserted carefully,[org.kframework.attributes.Location(Location(1070,3,1070,76)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Currently, it supports only a simple pattern matching on the top of the,[org.kframework.attributes.Location(Location(1073,3,1073,77)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(   rule <k> read() => V ... </k> <in> ListItem(V:Int) => .List ...  </in>,[org.kframework.attributes.Location(Location(1075,3,1075,78)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(
  syntax Stream ::= "#noIO"

  rule ListItem(#buffer(_))
       (ListItem(#noIO) ListItem(#istream(_:Int)) => .List) [stdin]
  ,[org.kframework.attributes.Location(Location(1092,3,1097,4)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module STDIN-STREAM$SYNTAX [org.kframework.attributes.Location(Location(1005,1,1099,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports MAP$SYNTAX
  imports K-REFLECTION$SYNTAX
  imports K-IO$SYNTAX
  syntax Stream ::= "#parseInput" "(" String "," String ")" [klabel(#parseInput)]
  syntax Stream ::= "#istream" "(" Int ")" [klabel(#istream)]
  syntax StdinCell ::= "initStdinCell" "(" Map ")" [function() initializer() noThread()]
  syntax StdinCell ::= "<stdin>" List "</stdin>" [cell() cellName(stdin) contentStartColumn(17) contentStartLine(1012) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  Bubble(config,<stdin> ListItem(#buffer($STDIN:String)) ListItem($IO:String) ListItem(#istream(#stdin)) </stdin>,[contentStartColumn(17) contentStartLine(1012) org.kframework.attributes.Location(Location(1012,3,1012,113)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module STDOUT-STREAM [org.kframework.attributes.Location(Location(1101,1,1169,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STDOUT-STREAM$SYNTAX
  imports MAP
  imports K-IO
  syntax Cell ::= StdoutCell
  rule initStdoutCell(Init)=>`<stdout>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#ostream(`#stdout_K-IO`(.KList))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(#buffer(#token("\"\"","String")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING`(#SemanticCastToString(Buffer),`Int2String`(#SemanticCastToInt(I)))))),`ListItem`(#SemanticCastToInt(I))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1120) label(STDOUT-STREAM.stdoutBufferInt) org.kframework.attributes.Location(Location(1120,8,1126,17)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) stream()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING`(#SemanticCastToString(Buffer),`Float2String`(#SemanticCastToFloat(F)))))),`ListItem`(#SemanticCastToFloat(F))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1110) label(STDOUT-STREAM.stdoutBufferFloat) org.kframework.attributes.Location(Location(1110,8,1116,17)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) stream()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING`(#SemanticCastToString(Buffer),#SemanticCastToString(S))))),`ListItem`(#SemanticCastToString(S))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1130) label(STDOUT-STREAM.stdoutBufferString) org.kframework.attributes.Location(Location(1130,8,1136,17)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) stream()]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(N)=>`project:Int`(`#write(_,_)_K-IO`(#SemanticCastToInt(N),#SemanticCastToString(S))~>#SemanticCastToInt(N)))),`ListItem`(#token("\"on\"","String"))),`ListItem`(#buffer(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=String__STRING`(#SemanticCastToString(S),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(1142) label(STDOUT-STREAM.stdoutWrite) org.kframework.attributes.Location(Location(1142,8,1148,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) stream()]
  ModuleComment(configuration <stderr> ListItem(#ostream(#stderr)) ListItem($IO:String) ListItem(#buffer("")) </stderr>,[org.kframework.attributes.Location(Location(1107,1,1107,106)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1148,29,1148,48)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1137,8,1137,27)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1127,8,1127,27)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( [stdout, stderr],[org.kframework.attributes.Location(Location(1117,8,1117,27)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Send first char from the buffer to the server,[org.kframework.attributes.Location(Location(1140,3,1140,51)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(
  syntax Stream ::= "#noIO"

  rule ListItem(#buffer(Buffer:String => Buffer +String Float2String(F)))
       (ListItem(F:Float) => .List)
       _:List [stdout, stderr]
  rule ListItem(#buffer(Buffer:String => Buffer +String Int2String(I)))
       (ListItem(I:Int) => .List)
       _:List [stdout, stderr]
  rule ListItem(#buffer(Buffer:String => Buffer +String S))
       (ListItem(S:String) => .List)
       _:List [stdout, stderr]

  rule (ListItem(#ostream(_:Int)) ListItem(#noIO) => .List)
       ListItem(#buffer(_))
       _:List [stdout, stderr]
  ,[org.kframework.attributes.Location(Location(1151,3,1167,4)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module STDOUT-STREAM$SYNTAX [org.kframework.attributes.Location(Location(1101,1,1169,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports MAP$SYNTAX
  imports K-IO$SYNTAX
  syntax Stream ::= "#ostream" "(" Int ")" [klabel(#ostream)]
  syntax StdoutCell ::= "initStdoutCell" "(" Map ")" [function() initializer() noThread()]
  syntax StdoutCell ::= "<stdout>" List "</stdout>" [cell() cellName(stdout) contentStartColumn(17) contentStartLine(1106) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  Bubble(config,<stdout> ListItem(#ostream(#stdout)) ListItem($IO:String) ListItem(#buffer("")) </stdout>,[contentStartColumn(17) contentStartLine(1106) org.kframework.attributes.Location(Location(1106,3,1106,105)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module STRATEGY$SYNTAX [org.kframework.attributes.Location(Location(1369,1,1379,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports ML-SYNTAX$SYNTAX
  imports MAP$SYNTAX
  syntax Strategy ::= "~" #RuleTag [klabel(#appliedRule) symbol()]
  syntax Strategy ::= "^" #RuleTag [klabel(#applyRule) symbol()]
  syntax Strategy ::= "#STUCK" "(" ")" [klabel(#STUCK) symbol()]
  syntax SCell ::= "initSCell" "(" Map ")" [function() initializer() noThread()]
  syntax SCell ::= "<s>" K "</s>" [cell() cellName(s) contentStartColumn(19) contentStartLine(1378) format(%1%i%n%2%d%n%3) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) topcell()]
  syntax #RuleTag ::= #KVariable
  Bubble(config,<s> $STRATEGY:K </s>,[contentStartColumn(19) contentStartLine(1378) org.kframework.attributes.Location(Location(1378,5,1378,38)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module STRING [org.kframework.attributes.Location(Location(547,1,623,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  rule rfindChar(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(602) org.kframework.attributes.Location(Location(602,8,602,33)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule rfindChar(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`maxInt(_,_)_INT-COMMON`(rfindString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),rfindChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I))) requires `_=/=String__STRING`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(601) org.kframework.attributes.Location(Location(601,8,601,182)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule findChar(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(600) org.kframework.attributes.Location(Location(600,8,600,32)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule findChar(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),#token("-1","Int")),findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I)),`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I)),#token("-1","Int")),findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),`minInt(_,_)_INT-COMMON`(findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I))))) requires `_=/=String__STRING`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(599) org.kframework.attributes.Location(Location(599,8,599,431)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceFirst(_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(_))=>#SemanticCastToString(Source) requires `_<Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(612) org.kframework.attributes.Location(Location(612,8,613,57)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceFirst(_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`_+String__STRING`(`_+String__STRING`(substrString(#SemanticCastToString(Source),#token("0","Int"),findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),lengthString(#SemanticCastToString(ToReplace))),lengthString(#SemanticCastToString(Source)))) requires `_>=Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(609) org.kframework.attributes.Location(Location(609,8,611,66)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `replaceAll(_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`replace(_,_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`countAllOccurrences(_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(621) org.kframework.attributes.Location(Location(621,8,621,154)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `replace(_,_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(_),#SemanticCastToString(_),#token("0","Int"))=>#SemanticCastToString(Source) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(620) org.kframework.attributes.Location(Location(620,8,620,49)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `replace(_,_,_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),#SemanticCastToInt(Count))=>`_+String__STRING`(`_+String__STRING`(substrString(#SemanticCastToString(Source),#token("0","Int"),findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),`replace(_,_,_,_)_STRING`(substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),lengthString(#SemanticCastToString(ToReplace))),lengthString(#SemanticCastToString(Source))),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`_-Int__INT-COMMON`(#SemanticCastToInt(Count),#token("1","Int")))) requires `_>Int__INT-COMMON`(#SemanticCastToInt(Count),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(616) org.kframework.attributes.Location(Location(616,8,619,30)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `countAllOccurrences(_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING`(substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),lengthString(#SemanticCastToString(ToCount))),lengthString(#SemanticCastToString(Source))),#SemanticCastToString(ToCount))) requires `_>=Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(606) org.kframework.attributes.Location(Location(606,8,607,60)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `countAllOccurrences(_,_)_STRING`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>#token("0","Int") requires `_<Int__INT-COMMON`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(604) org.kframework.attributes.Location(Location(604,8,605,59)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  rule `_>String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_<String__STRING`(#SemanticCastToString(S2),#SemanticCastToString(S1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(596) org.kframework.attributes.Location(Location(596,8,596,52)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_>=String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(597) org.kframework.attributes.Location(Location(597,8,597,63)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_==String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_==K_`(#SemanticCastToString(S1),#SemanticCastToString(S2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(583) org.kframework.attributes.Location(Location(583,8,583,49)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_=/=String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_==String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(582) org.kframework.attributes.Location(Location(582,8,582,65)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  rule `_<=String__STRING`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING`(#SemanticCastToString(S2),#SemanticCastToString(S1))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(595) org.kframework.attributes.Location(Location(595,8,595,63)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
endmodule


module STRING$SYNTAX [org.kframework.attributes.Location(Location(547,1,623,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  syntax associativity left _==String__STRING
  syntax associativity left _=/=String__STRING
  syntax associativity left _+String__STRING
  syntax String ::= String "+String" String [function() functional() hook(STRING.concat) latex({#1}+_{\scriptstyle\it String}{#2}) left()]
  syntax String ::= "substrString" "(" String "," Int "," Int ")" [function() functional() hook(STRING.substr) klabel(substrString)]
  syntax String ::= "replaceFirst" "(" String "," String "," String ")" [function() functional() hook(STRING.replaceFirst)]
  syntax String ::= "replaceAll" "(" String "," String "," String ")" [function() functional() hook(STRING.replaceAll)]
  syntax String ::= "replace" "(" String "," String "," String "," Int ")" [function() hook(STRING.replace)]
  syntax String ::= "newUUID" [function() hook(STRING.uuid) impure()]
  syntax String ::= "directionalityChar" "(" String ")" [function() hook(STRING.directionality) klabel(directionalityChar)]
  syntax String ::= "chrChar" "(" Int ")" [function() hook(STRING.chr) klabel(chrChar)]
  syntax String ::= "categoryChar" "(" String ")" [function() hook(STRING.category) klabel(categoryChar)]
  syntax String ::= "Int2String" "(" Int ")" [function() functional() hook(STRING.int2string) klabel(Int2String)]
  syntax String ::= "Float2String" "(" Float "," String ")" [function() hook(STRING.floatFormat) klabel(FloatFormat)]
  syntax String ::= "Float2String" "(" Float ")" [function() functional() hook(STRING.float2string) klabel(Float2String)]
  syntax String ::= "Base2String" "(" Int "," Int ")" [function() hook(STRING.base2string) klabel(Base2String)]
  syntax Int ::= "rfindString" "(" String "," String "," Int ")" [function() hook(STRING.rfind) klabel(rfindString)]
  syntax Int ::= "rfindChar" "(" String "," String "," Int ")" [function() hook(STRING.rfindChar) klabel(rfindChar)]
  syntax Int ::= "ordChar" "(" String ")" [function() hook(STRING.ord) klabel(ordChar)]
  syntax Int ::= "lengthString" "(" String ")" [function() functional() hook(STRING.length) klabel(lengthString)]
  syntax Int ::= "findString" "(" String "," String "," Int ")" [function() hook(STRING.find) klabel(findString)]
  syntax Int ::= "findChar" "(" String "," String "," Int ")" [function() hook(STRING.findChar) klabel(findChar)]
  syntax Int ::= "countAllOccurrences" "(" String "," String ")" [function() functional() hook(STRING.countAllOccurrences)]
  syntax Int ::= "String2Int" "(" String ")" [function() hook(STRING.string2int) klabel(String2Int)]
  syntax Int ::= "String2Base" "(" String "," Int ")" [function() hook(STRING.string2base) klabel(String2Base)]
  syntax Float ::= "String2Float" "(" String ")" [function() hook(STRING.string2float) klabel(String2Float)]
  syntax Bool ::= String ">String" String [function() functional() hook(STRING.gt)]
  syntax Bool ::= String ">=String" String [function() functional() hook(STRING.ge)]
  syntax Bool ::= String "==String" String [function() functional() hook(STRING.eq) left()]
  syntax Bool ::= String "=/=String" String [function() functional() hook(STRING.ne) left()]
  syntax Bool ::= String "<String" String [function() functional() hook(STRING.lt)]
  syntax Bool ::= String "<=String" String [function() functional() hook(STRING.le)]
endmodule


module STRING-BUFFER [org.kframework.attributes.Location(Location(649,1,652,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-BUFFER-HOOKED
  imports STRING-BUFFER$SYNTAX
endmodule


module STRING-BUFFER$SYNTAX [org.kframework.attributes.Location(Location(649,1,652,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-BUFFER-HOOKED$SYNTAX
endmodule


module STRING-BUFFER-HOOKED [concrete() org.kframework.attributes.Location(Location(639,1,647,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-BUFFER-HOOKED$SYNTAX
  imports STRING
  imports BASIC-K
endmodule


module STRING-BUFFER-HOOKED$SYNTAX [concrete() org.kframework.attributes.Location(Location(639,1,647,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _+String__STRING-BUFFER-HOOKED
  syntax StringBuffer [hook(BUFFER.StringBuffer) org.kframework.attributes.Location(Location(643,3,643,49)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax StringBuffer ::= StringBuffer "+String" String [avoid() function() functional() hook(BUFFER.concat) left()]
  syntax StringBuffer ::= ".StringBuffer" [function() functional() hook(BUFFER.empty) impure()]
  syntax String ::= "StringBuffer2String" "(" StringBuffer ")" [function() functional() hook(BUFFER.toString) klabel(StringBuffer2String)]
endmodule


module STRING-SYNTAX [org.kframework.attributes.Location(Location(534,1,545,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  ModuleComment( StringChar ::= ~[\"\n\r\\] // anything except for Newline, DoubleQuote and Backslash,[org.kframework.attributes.Location(Location(537,3,537,90)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( DoubleQuote StringChar* DoubleQuote,[org.kframework.attributes.Location(Location(536,3,536,41)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment( Double Quoted Strings are of the form:,[org.kframework.attributes.Location(Location(535,3,535,44)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(              | [\\][x] 2*Hex // "\xFF"       Backslash 'x' followed by two   hexadecimal characters,[org.kframework.attributes.Location(Location(539,3,539,105)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(              | [\\][u] 4*Hex // "\uFFFF"     Backslash 'u' followed by four  hexadecimal characters,[org.kframework.attributes.Location(Location(540,3,540,105)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(              | [\\][nrtf\"\\] // Backslash followed by either 'nrtf', DoubleQuote or Backslash,[org.kframework.attributes.Location(Location(538,3,538,100)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(              | [\\][U] 8*Hex // "\UFFffFFff" Backslash 'U' followed by eight hexadecimal characters,[org.kframework.attributes.Location(Location(541,3,541,105)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
  ModuleComment(                              // the code must not be in the range [0xdfff, 0xd800] or exceed 0x10ffff,[org.kframework.attributes.Location(Location(542,3,542,107)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))])
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(534,1,545,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(543,3,543,37)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token()]
endmodule


module UNSIGNED-INT-SYNTAX [org.kframework.attributes.Location(Location(362,1,365,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(362,1,365,9)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Int [hook(INT.Int) org.kframework.attributes.Location(Location(363,3,363,28)) org.kframework.attributes.Source(Source(/home/andreim/elrond/k/k-distribution/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+" [prec(2) prefer() token()]
endmodule