// File generated by the K Framework Go backend. Timestamp: 2019-07-30 16:33:19.058

package ieletestinginterpreter

import (
	blockchain "github.com/ElrondNetwork/elrond-vm/iele/elrond/node/hookadapter/blockchain"
	krypto "github.com/ElrondNetwork/elrond-vm/iele/elrond/node/hookadapter/krypto"
	m "github.com/ElrondNetwork/elrond-vm/iele/elrond/node/iele-testing-kompiled/ieletestingmodel"
)

// Interpreter is a container with a reference to model and basic options
type Interpreter struct {
	Model             *m.ModelState
	currentStep       int
	checksSinceLastGc int
	MaxSteps          int
	state             m.KReference
	traceHandlers     []traceHandler
	Verbose           bool

	blockchainRef *blockchain.Blockchain
	kryptoRef     *krypto.Krypto
}

// NewInterpreter creates a new interpreter instance
func NewInterpreter(blockchainRef *blockchain.Blockchain, kryptoRef *krypto.Krypto) *Interpreter {
	return &Interpreter{
		Model:             m.NewModel(),
		MaxSteps:          0,
		currentStep:       -1, // meaning that no processing started yet
		checksSinceLastGc: 0,
		state:             m.NullReference,
		traceHandlers:     nil,
		Verbose:           false,
		blockchainRef:     blockchainRef,
		kryptoRef:         kryptoRef,
	}
}
